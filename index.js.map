{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"mongoose\"","webpack:///./Variable.js","webpack:///external \"stampit\"","webpack:///external \"express\"","webpack:///external \"bluebird\"","webpack:///./SubFunction.js","webpack:///external \"fs\"","webpack:///external \"net\"","webpack:///external \"util\"","webpack:///external \"stampit-log\"","webpack:///./libModbus/jsmodbus/src/handler/client sync ^\\.\\/.*$","webpack:///external \"config\"","webpack:///external \"path\"","webpack:///./models/model_point.js","webpack:///./models/model_element.js","webpack:///./models/model_label.js","webpack:///./models/model_line.js","webpack:///./models/model_wordDisplay.js","webpack:///./models/model_wordAdjust.js","webpack:///./models/model_dwordDisplay.js","webpack:///./models/model_dwordAdjust.js","webpack:///./models/model_bitDisplay.js","webpack:///./models/model_bitAdjust.js","webpack:///./models/model_panel.js","webpack:///./models/model_textField.js","webpack:///./models/model_textFieldInput.js","webpack:///./models/model_bitdisplay_image_library.js","webpack:///./models/model_element_image_library.js","webpack:///external \"stampit-state-machine\"","webpack:///./libModbus/jsmodbus/src/handler/client/ReadCoils.js","webpack:///./libModbus/jsmodbus/src/handler/client/ReadDiscreteInputs.js","webpack:///./libModbus/jsmodbus/src/handler/client/ReadHoldingRegisters.js","webpack:///./libModbus/jsmodbus/src/handler/client/ReadInputRegisters.js","webpack:///./libModbus/jsmodbus/src/handler/client/WriteMultipleCoils.js","webpack:///./libModbus/jsmodbus/src/handler/client/WriteMultipleRegisters.js","webpack:///./libModbus/jsmodbus/src/handler/client/WriteSingleCoil.js","webpack:///./libModbus/jsmodbus/src/handler/client/WriteSingleRegister.js","webpack:///./libModbus/jsmodbus/src/modbus-tcp-server.js","webpack:///./libModbus/jsmodbus/src/handler/server sync ^\\.\\/.*$","webpack:///./libModbus/jsmodbus/src/handler/server/ReadCoils.js","webpack:///./libModbus/jsmodbus/src/handler/server/ReadDiscreteInputs.js","webpack:///./libModbus/jsmodbus/src/handler/server/ReadHoldingRegisters.js","webpack:///./libModbus/jsmodbus/src/handler/server/ReadInputRegisters.js","webpack:///./libModbus/jsmodbus/src/handler/server/WriteMultipleCoils.js","webpack:///./libModbus/jsmodbus/src/handler/server/WriteMultipleRegisters.js","webpack:///./libModbus/jsmodbus/src/handler/server/WriteSingleCoil.js","webpack:///./libModbus/jsmodbus/src/handler/server/WriteSingleRegister.js","webpack:///external \"child_process\"","webpack:///./index.js","webpack:///external \"bcrypt\"","webpack:///external \"systeminformation\"","webpack:///./app.js","webpack:///external \"http-errors\"","webpack:///external \"cookie-parser\"","webpack:///external \"morgan\"","webpack:///external \"cors\"","webpack:///./routes/routes_Point.js","webpack:///./routes/routes_Point_PickPlace.js","webpack:///./models/model_point_pick_place.js","webpack:///./routes/routes_Element.js","webpack:///./routes/routes_Label.js","webpack:///./routes/routes_Line.js","webpack:///./routes/routes_WordDisplay.js","webpack:///./routes/routes_WordAdjust.js","webpack:///./routes/routes_DWordDisplay.js","webpack:///./routes/routes_DWordAdjust.js","webpack:///./routes/routes_BitDisplay.js","webpack:///./routes/routes_BitAdjust.js","webpack:///./routes/routes_Panel.js","webpack:///./routes/routes_TextField.js","webpack:///./routes/routes_TextFieldInput.js","webpack:///./routes/routes_BitDisplay_Image_Library.js","webpack:///external \"mime\"","webpack:///./routes/routes_Element_Image_Library.js","webpack:///external \"body-parser\"","webpack:///external \"http\"","webpack:///external \"socket.io\"","webpack:///./libFins/index.js","webpack:///./libFins/fins_client.js","webpack:///external \"dgram\"","webpack:///external \"events\"","webpack:///./libFins/constants.js","webpack:///./SocketIO_Omron.js","webpack:///./libModbus/jsmodbus/src/modbus.js","webpack:///./libModbus/jsmodbus/src/modbus-client-core.js","webpack:///./libModbus/jsmodbus/src/modbus-tcp-client.js","webpack:///./libModbus/jsmodbus/src/modbus-server-core.js","webpack:///external \"stampit-event-bus\"","webpack:///./libModbus/jsmodbus/src/modbus-tcp-server-client.js","webpack:///./Modbus_Cobot.js","webpack:///./SocketIO_MobileRobot.js","webpack:///./libMcprotocal/mcprotocol/mcprotocol.js","webpack:///./libMcprotocal/underscore/underscore.js","webpack:///./SocketIO_Mitsubishi.js","webpack:///./Mongodb.js","webpack:///./models/model_posCobot.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","WritePosCobot","resultImage","refreshDataBitDisplayImageLibrary","resultBitDisplayImageLibrary","refreshDataElementImageLibrary","resultElementImageLibrary","refreshDataElement","refreshDataBitAdjust","refreshDataBitDisplay","refreshDataWordAdjust","refreshDataWordDisplay","refreshDataDWordAdjust","refreshDataDWordDisplay","refreshDataImage","refreshDataLabel","refreshDataLine","refreshDataPoint","refreshDataPointPickPlace","refreshDataPanel","refreshDataTextField","refreshDataTextFieldInput","haveChangeElement","haveChangeBitAdjust","haveChangeBitDisplay","haveChangeWordAdjust","haveChangeWordDisplay","haveChangeDWordAdjust","haveChangeDWordDisplay","haveChangeTextField","haveChangeTextFieldInput","Element","OldElement","ElementOmron","WordStartElementOmron","LengthOfElementOmron","BitDisplay","BitAdjust","WordDisplay","WordAdjust","DWordDisplay","DWordAdjust","OldBitDisplay","OldBitAdjust","OldWordDisplay","OldWordAdjust","OldDWordDisplay","OldDWordAdjust","TextField","OldTextField","TextFieldInput","OldTextFieldInput","IndexSocketInputSignal","IndexSocketBitAdjust","IndexSocketBitDisplay","IndexSocketWordDisplay","IndexSocketWordAdjust","IndexSocketDWordDisplay","IndexSocketDWordAdjust","CheckBitDisplay","CheckBitAdjust","CheckWordDisplay","CheckWordAdjust","CheckDWordDisplay","CheckDWordAdjust","resultlabel","resultline","resultElement","resultBitDisplay","resultBitAdjust","resultWordDisplay","resultWordAdjust","resultDWordDisplay","resultDWordAdjust","resultPanel","resultTextField","resultTextFieldInput","resultcustomeroperator","refreshdata","CustomerOperator","BitDisplayOMRON","WordStartBitDisplayOMRON","LengthOfWordBitDisplayOMRON","BitAdjustOMRON","WordStartBitAdjustOMRON","LengthOfWordBitAdjustOMRON","WordDisplayOMRON","WordStartWordDisplayOMRON","LengthOfWordWordDisplayOMRON","WordAdjustOMRON","WordStartWordAdjustOMRON","LengthOfWordWordAdjustOMRON","DWordDisplayOMRON","WordStartDWordDisplayOMRON","LengthOfWordDWordDisplayOMRON","DWordAdjustOMRON","WordStartDWordAdjustOMRON","LengthOfWordDWordAdjustOMRON","ElementMitsubishi","BitDisplayMitsubishi","BitAdjustMitsubishi","WordDisplayMitsubishi","WordAdjustMitsubishi","DWordDisplayMitsubishi","DWordAdjustMitsubishi","refreshDataPosCobot","resultPosCobot","ReadWordOfPlcToByte","Start","LengthOfWord","Values","byteArray","index","byte","StringToAscii","str","code","Array","length","charCodeAt","arrOut","result","ReadBitOfPLC","WordStart","temp","Number","j","ReadWordOfPLC","ReadDWordOfPLC","ConvertArray2Text","data","CheckChangeValue","Variable","OldVariable","val","undefined","CheckNegativeNumber","nb","getRandomInt","max","Math","floor","random","saveJsonFile","path","dataStore","fs","existsSync","writeFile","JSON","stringify","err","console","log","error","getJsonFile","cb","readFile","obj","parse","saveFeedbackFile","convertPosCobot","pos0","pos1","parseInt","Buffer","from","readFloatBE","getIndexCobotWriteMB","indexBit","map","webpackContext","req","id","webpackContextResolve","e","Error","keys","resolve","mongoose","PointSchema","Schema","type","required","number","offsetInX","offsetInY","offsetInZ","offsetInR","offsetInAddX","offsetInAddY","PlaceX","PlaceY","model","ElementSchema","parent","String","default","tag","left","top","nameElement","src","state_m","state_cm","state_F0","state_F1","state_Fault","state_Interlock","LabelSchema","width","text","color","fontSize","LineSchema","idRun","WordDisplaySchema","WordAdjustSchema","height","DWordDisplaySchema","DWordAdjustSchema","BitDisplaySchema","status","Boolean","text0","text1","color0","color1","nameImage0","nameImage1","BitAdjustSchema","PanelSchema","backgroundColor","borderRadius","boxShadow1","boxShadow2","boxShadow3","boxShadowColor","zIndex","margin","padding","TextFieldSchema","label","rows","TextFieldInputSchema","ImageSchema","img","date","Date","unique","imgRun","imgStop","imgLock","imgFault","now","timestamps","Stampit","Promise","init","this","addResponseHandler","onResponse","pdu","request","debug","fc","readUInt8","byteCount","resp","payload","slice","coils","cntr","h","cur","defer","reject","readCoils","start","quantity","allocUnsafe","writeUInt8","writeUInt16BE","queueRequest","readDiscreteInputs","register","registerCount","push","readUInt16BE","readHoldingRegisters","readInputRegisters","stampit","startAddress","writeMultipleCoils","N","basePdu","concat","ceil","curByte","curByteIdx","payloadPdu","pow","writeMultipleRegisters","outputAddress","outputValue","writeSingleCoil","address","registerAddress","registerValue","registerAddressRaw","registerValueRaw","writeSingleRegister","ModbusServerCore","StateMachine","ClientSocket","compose","server","socketList","fifo","clients","port","hostname","net","injNet","createServer","on","node","whiteListIPs","indexOf","end","initiateSocket","listen","emit","flush","setState","inState","current","shift","onData","response","head","trans_id","protocol_ver","unit_id","pkt","socket","write","socketId","removeHandler","splice","clientSocket","onRequest","onEnd","close","destroy","unref","responseDelay","setRequestHandler","setTimeout","buf","mem","getCoils","thisByteBitCount","byteIdx","totalBitCount","handler","getDiscrete","byteStart","getHolding","getInput","oldValue","newValue","copy","byteAddress","config","bcrypt","si","Port","app","Server","io","process","env","PORT","Variables","SubFunction","system","then","compare","uuid","license","res","ExitProcess","catch","setInterval","hour","getHours","min","getMinutes","sec","getSeconds","getDateTime","PLC_Omron","client","FinsClient","PLC_Omron_IP","StatusConnectPLC","msg","command","PLC_Omron_WordStartElement","PLC_Omron_LengthOfWordElement","values","PLC_Omron_WordStartBitAdjust","PLC_Omron_LengthOfWordBitAdjust","PLC_Omron_WordStartBitDisplay","PLC_Omron_LengthOfWordBitDisplay","PLC_Omron_WordStartWordDisplay","PLC_Omron_LengthOfWordWordDisplay","PLC_Omron_WordStartWordAdjust","PLC_Omron_LengthOfWordWordAdjust","PLC_Omron_WordStartDWordDisplay","PLC_Omron_LengthOfWordDWordDisplay","PLC_Omron_WordStartDWordAdjust","PLC_Omron_LengthOfWordDWordAdjust","PLC_Omron_Debug","read","PLC_Omron_Size_D0","bytes","PLC_Schneider","clientMB","tcp","complete","PLC_Schneider_IP","connect","StatusModbus","StatusCobot","arr","done","MobileRobot","clientMobile","Socket","ArrayTextStore","ConnectMobile","MobileRobot_Port","MobileRobot_IP","ReconnectMobile","sockets","PLC_Mitsubishi","conn","setVariables","DataRegister","PLC_Mitsubishi_Size_D0","ComPC","PLC_Mitsubishi_ComPC","valuesReady","anythingBad","PLC_Mitsubishi_WordStartElement","PLC_Mitsubishi_LengthOfWordElement","PLC_Mitsubishi_WordStartBitAdjust","PLC_Mitsubishi_LengthOfWordBitAdjust","PLC_Mitsubishi_WordStartBitDisplay","PLC_Mitsubishi_LengthOfWordBitDisplay","PLC_Mitsubishi_WordStartWordDisplay","PLC_Mitsubishi_LengthOfWordWordDisplay","PLC_Mitsubishi_WordStartWordAdjust","PLC_Mitsubishi_LengthOfWordWordAdjust","PLC_Mitsubishi_WordStartDWordDisplay","PLC_Mitsubishi_LengthOfWordDWordDisplay","PLC_Mitsubishi_WordStartDWordAdjust","PLC_Mitsubishi_LengthOfWordDWordAdjust","initiateConnection","host","PLC_Mitsubishi_IP","ascii","setTranslationCB","addItems","readAllItems","exit","global","connection","Cobot","createError","express","cookieParser","logger","cors","pointRouter","pointPickPlaceRouter","elementRouter","labelRouter","lineRouter","wordDisplayRouter","wordAdjustRouter","dwordDisplayRouter","dwordAdjustRouter","bitDisplayRouter","bitAdjustRouter","panelRouter","textFieldRouter","textFieldInputRouter","bitDisplayImageLibraryRoute","elementImageLibraryRoute","bodyParser","use","json","limit","urlencoded","extended","parameterLimit","static","join","__dirname","next","header","locals","message","render","router","Router","modelPoint","send","resultpoint","post","TypeCobot","body","save","put","conditions","Types","ObjectId","isValid","_id","options","new","findOneAndUpdate","$set","updateData","delete","findByIdAndRemove","modelPointPickPlace","resultpointPickPlace","newPoint","pickX","pickY","placeX","placeY","placeZ_Layer1","placeZ_Layer2","placeZ_Layer3","placeZ_Layer4","PointPickPlaceSchema","modelElement","modelLabel","modelLine","modelWordDisplay","modelWordAdjust","modelDWordDisplay","modelDWordAdjust","modelBitDisplay","newBitDisplay","modelBitAdjust","modelPanel","modelTextField","modelTextFieldInput","modelBitDisplayImageLibrary","match","modelElementImageLibrary","dgram","inherits","EventEmitter","constants","_compareArrays","a","b","_mergeArrays","array","flat","toString","split","pop","toLowerCase","test","_keyFromValue","dict","filter","_padHex","substr","_wordsToBytes","words","_translateMemoryAddress","memoryAddress","matches","decodedMemory","MemoryAreas","_incrementSID","sid","_buildHeader","ICF","RSV","GCT","DNA","DA1","DA2","SNA","SA1","SA2","SID","_buildPacket","raw","_getResponseType","_processDefault","rinfo","remotehost","_processStatusRead","fatalErrorData","nonFatalErrorData","FatalErrorData","readInt16BE","statusCodes","Status","runModes","Modes","_processMemoryAreaRead","_processReply","commands","Commands","CONTROLLER_STATUS_READ","MEMORY_AREA_READ","_decodePacket","self","defaultHost","DefaultHostValues","defaultOptions","DefaultOptions","timeout","createSocket","responded","DefaultFinsHeader","regsToRead","callback","packet","buffer","dataToBeWritten","regsToWrite","MEMORY_AREA_WRITE","fill","MEMORY_AREA_FILL","run","RUN","stop","STOP","SYSTEM_ERROR","IO_SETTING_ERROR","IO_POINT_OVERFLOW","CPU_BUS_ERROR","MEMORY_ERROR","NonFatalErrorData","PC_LINK_ERROR","HOST_LINK_ERROR","BATTERY_ERROR","REMOTE_IO_ERROR","SPECIAL_IO_UNIT_ERROR","IO_COLLATE_ERROR","CPU_STANDBY","MONITOR","DEBUG","Errors","NameCommand","isNaN","heightValueDWordAdjust","lowValueDWordAdjust","ModbusCore","ModbusTcpClient","core","readdirSync","file","forEach","serial","Log","ExceptionMessage","responseHandler","currentRequest","reqFifo","onClosed","logError","clearTimeout","errorCode","exceptionCode","handleErrorPDU","trashRequestId","reqId","currentRequestId","closedOnPurpose","reconnect","alloc","closed","unitId","protocolVersion","autoReconnect","reconnectTimeout","onSend","onError","onTrashCurrentRequest","injectedSocket","onSocketConnect","onSocketClose","onSocketError","onSocketData","hadErrors","len","protocolId","getSocket","setCurrentRequestId","registerOnSend","_onSend","removeListener","EventBus","holding","input","discrete","reqHandler","onSocketEnd","byteLength","ChoiseModbus","WordDisplayCobotStart","LengthOfWordDisplayCobot","LengthOfWordAdjustCobot","counter","inspect","arguments","depth","exec","writeItems","_","util","MCProtocol","readReq","writeReq","resetPending","resetTimeout","maxPDU","isoclient","isoConnectionState","requestMaxParallel","maxParallel","isAscii","octalInputOutput","parallelJobsNow","maxGap","doNotOptimize","connectCallback","readDoneCallback","writeDoneCallback","connectTimeout","PDUTimeout","globalTimeout","readPacketArray","writePacketArray","polledReadBlockList","instantWriteBlockList","globalReadBlockList","globalWriteBlockList","masterSequenceNumber","translationCB","doNothing","connectionParams","connectionID","addRemoveArray","readPacketValid","writeInQueue","connectCBIssued","outputLog","txt","debugLevel","idtext","hrtime","format","doneSending","element","sent","rcvd","processMBPacket","theData","theItem","thePointer","remainingLength","qualityBuffer","valid","errCode","toUpperCase","decimalToHexString","expectedLength","byteBuffer","processMBWriteItem","writeQualityBuffer","addr","writePostProcess","arrayLength","writeQuality","arrayIndex","datatype","bitOffset","dtypelen","processMCReadItem","quality","bitShiftAmount","bitNative","remainder","badValue","getFloatBESwap","readFloatLE","getUInt32BESwap","readUInt32LE","getInt32BESwap","readInt32LE","readInt16LE","readUInt16LE","fromCharCode","bufferizeMCItem","theByte","setFloatBESwap","writeBuffer","writeValue","writeFloatLE","setUInt32BESwap","writeUInt32LE","setInt32BESwap","writeInt32LE","writeInt16BE","writeInt16LE","writeUInt16LE","round","toCharCode","isQualityOK","isArray","MCAddrToBuffer","addrinfo","isWriting","writeLength","MCCommand","areaMCCode","writeUInt32BE","offset","requestOffset","byteLengthWrite","stringToMCAddr","useraddr","splitString2","prefix","postDotNumeric","preOctalOffset","PLCItem","replace","splitdot","addrtype","multidtypelen","wordLength","dataTypeByteLength","totalArrayLength","PLCPacket","seqNum","itemList","reqTime","timeoutError","startRegister","byteOffset","maxWordLength","byteLengthWithFill","readTransportCode","writeTransportCode","part","maxPart","isOptimized","resultReference","itemReference","clone","newObj","itemListSorter","arg","ptr","newBuf","writeFloatBE","readInt32BE","writeInt32BE","readUInt32BE","binarize","asciize","num","zero","cParam","connectNow","dropConnection","connectionCleanup","suppressCallback","onTCPConnect","apply","setKeepAlive","connectError","readWriteError","connectionReset","packetTimeout","packetType","packetSeqNum","readResponse","writeResponse","remoteAddress","remotePort","removeAllListeners","prepareWritePacket","isReading","sendWritePacket","findItem","commstate","action","addItemsNow","addItemsFlag","removeItems","removeItemsNow","removeItemsFlag","isWaiting","prepareReadPacket","sendReadPacket","clearReadPacketTimeouts","clearWritePacketTimeouts","numItems","requestList","requestNumber","sort","thisRequest","block","startElement","remainingTotalArrayLength","maxByteRequest","lengthOffset","parts","requestReference","thisPacketNumber","startOfSlice","endOfSlice","thisBlock","isOptimizableArea","curLength","returnedBfr","flagReconnect","scopePlaceholder","nextTick","area","rawdata","isReadResponse","isWriteResponse","anyBadQualities","sentPacketNum","dataPointer","packetCounter","itemCount","every","rcvdPacketNum","dataObject","k","resetNow","onClientDisconnect","tryingToConnectNow","root","previousUnderscore","breaker","ArrayProto","ObjProto","FuncProto","Function","nativeForEach","nativeMap","nativeReduce","reduce","nativeReduceRight","reduceRight","nativeFilter","nativeEvery","nativeSome","some","nativeIndexOf","nativeLastIndexOf","lastIndexOf","nativeIsArray","nativeKeys","nativeBind","_wrapped","VERSION","each","iterator","context","has","collect","results","list","reduceError","foldl","inject","memo","initial","TypeError","foldr","find","detect","any","select","all","identity","contains","include","target","invoke","method","args","isFunc","isFunction","pluck","where","attrs","first","isEmpty","findWhere","Infinity","computed","shuffle","rand","shuffled","lookupIterator","sortBy","criteria","right","group","behavior","groupBy","countBy","sortedIndex","low","high","mid","toArray","size","take","guard","last","rest","tail","drop","compact","flatten","shallow","output","without","difference","uniq","isSorted","seen","union","intersection","item","other","zip","hasIndex","range","step","idx","func","partial","bindAll","funcs","functions","f","memoize","hasher","delay","wait","throttle","previous","later","remaining","debounce","immediate","callNow","once","ran","wrap","wrapper","after","times","pairs","invert","methods","names","extend","source","prop","pick","omit","defaults","isObject","tap","interceptor","eq","aStack","bStack","className","multiline","ignoreCase","aCtor","constructor","bCtor","isEqual","isString","isElement","nodeType","isArguments","isFinite","parseFloat","isNumber","isBoolean","isNull","isUndefined","noConflict","accum","entityMap","escape","unescape","entityRegexes","RegExp","string","mixin","idCounter","uniqueId","templateSettings","evaluate","interpolate","noMatch","escapes","escaper","template","settings","matcher","variable","chain","_chain","modelLines","modePosCobot","modeBitDisplayImageLibrary","modeElementImageLibrary","Panel","state_f0","x","Lines","Labels","time","y","z","yaw","pitch","roll","dataField","posCobotSchema"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 48);\n","module.exports = require(\"mongoose\");","var refreshDataElement = false;\r\nvar refreshDataBitAdjust = false;\r\nvar refreshDataBitDisplay = false;\r\nvar refreshDataWordAdjust = false;\r\nvar refreshDataWordDisplay = false;\r\nvar refreshDataDWordAdjust = false;\r\nvar refreshDataDWordDisplay = false;\r\nvar refreshDataImage = false;\r\nvar refreshDataLabel = false;\r\nvar refreshDataLine = false;\r\nvar refreshDataPoint = false;\r\nvar refreshDataPointPickPlace = false;\r\nvar refreshDataPanel = false;\r\nvar refreshDataTextField = false;\r\nvar refreshDataTextFieldInput = false;\r\nvar refreshDataPosCobot = false;\r\nvar refreshDataBitDisplayImageLibrary = false;\r\nvar refreshDataElementImageLibrary = false;\r\n\r\nvar haveChangeElement = false;\r\nvar haveChangeBitAdjust = false;\r\nvar haveChangeBitDisplay = false;\r\nvar haveChangeWordAdjust = false;\r\nvar haveChangeWordDisplay = false;\r\nvar haveChangeDWordAdjust = false;\r\nvar haveChangeDWordDisplay = false;\r\nvar haveChangeTextField = false;\r\nvar haveChangeTextFieldInput = false;\r\n\r\n//////////////////////////////////////////////////////////////////MODBUS\r\nvar Element = [];\r\nvar OldElement = [];\r\nvar BitDisplay = [];\r\nvar OldBitDisplay = [];\r\nvar BitAdjust = [];\r\nvar OldBitAdjust = [];\r\nvar WordDisplay = [];\r\nvar OldWordDisplay = [];\r\nvar WordAdjust = [];\r\nvar OldWordAdjust = [];\r\nvar DWordDisplay = [];\r\nvar OldDWordDisplay = [];\r\nvar DWordAdjust = [];\r\nvar OldDWordAdjust = [];\r\nvar TextField = [];\r\nvar OldTextField = [];\r\nvar TextFieldInput = [];\r\nvar OldTextFieldInput = [];\r\nvar WritePosCobot=[];\r\n\r\nvar IndexSocketInputSignal = 2;\r\nvar IndexSocketBitDisplay = 3;\r\nvar IndexSocketBitAdjust = 4;\r\nvar IndexSocketWordDisplay = 5;\r\nvar IndexSocketWordAdjust = 6;\r\nvar IndexSocketDWordDisplay = 7;\r\nvar IndexSocketDWordAdjust = 8;\r\n\r\nvar CheckBitDisplay = \"\";\r\nvar CheckBitAdjust = \"\";\r\nvar CheckWordDisplay = \"\";\r\nvar CheckWordAdjust = \"\";\r\nvar CheckDWordDisplay = \"\";\r\nvar CheckDWordAdjust = \"\";\r\n\r\nvar resultBitDisplay=[];\r\nvar resultBitAdjust=[];\r\nvar resultWordDisplay=[];\r\nvar resultWordAdjust=[];\r\nvar resultDWordDisplay=[];\r\nvar resultDWordAdjust=[];\r\nvar resultPanel=[];\r\nvar resultlabel=[];\r\nvar resultline=[];\r\nvar resultElement=[];\r\nvar resultTextField=[];\r\nvar resultTextFieldInput=[];\r\nvar resultcustomeroperator;\r\nvar refreshdata;\r\nvar CustomerOperator;\r\nvar resultPosCobot=[]\r\nvar resultImage=[]\r\nvar resultBitDisplayImageLibrary=[]\r\nvar resultElementImageLibrary=[]\r\n\r\n//////////////////////////////////////////////////////////////////OMRON\r\n//0-299     ELEMENT\r\nvar ElementOmron=[];\r\nvar WordStartElementOmron=0;\r\nvar LengthOfElementOmron=100;\r\n//300-309   BITDISPLAY\r\nvar BitDisplayOMRON = [];\r\nvar WordStartBitDisplayOMRON = 300;\r\nvar LengthOfWordBitDisplayOMRON = 10;\r\n//310-319   BITADJUST\r\nvar BitAdjustOMRON = [];\r\nvar WordStartBitAdjustOMRON = WordStartBitDisplayOMRON + LengthOfWordBitDisplayOMRON;\r\nvar LengthOfWordBitAdjustOMRON = 10;\r\n//320-519   WORDDISPLAY\r\nvar WordDisplayOMRON = [];\r\nvar WordStartWordDisplayOMRON = WordStartBitAdjustOMRON + LengthOfWordBitAdjustOMRON;\r\nvar LengthOfWordWordDisplayOMRON = 200;//max 125\r\n//520-719   WORDADJUST\r\nvar WordAdjustOMRON = [];\r\nvar WordStartWordAdjustOMRON = WordStartWordDisplayOMRON + LengthOfWordWordDisplayOMRON;\r\nvar LengthOfWordWordAdjustOMRON = 200;//max 125\r\n//720-769   DWORDDISPLAY\r\nvar DWordDisplayOMRON = [];\r\nvar WordStartDWordDisplayOMRON = WordStartWordAdjustOMRON + LengthOfWordWordAdjustOMRON;\r\nvar LengthOfWordDWordDisplayOMRON = 25;//max 50\r\n//770-819   DWORDADJUST\r\nvar DWordAdjustOMRON = [];\r\nvar WordStartDWordAdjustOMRON = WordStartDWordDisplayOMRON + LengthOfWordDWordDisplayOMRON * 2;\r\nvar LengthOfWordDWordAdjustOMRON = 25;//max 50\r\n//////////////////////////////////////////////////////////////////MITSUBISHI\r\n//0-99\r\nvar ElementMitsubishi = [];\r\n//100-109\r\nvar BitDisplayMitsubishi = [];\r\n//110-119\r\nvar BitAdjustMitsubishi = [];\r\n//120-319\r\nvar WordDisplayMitsubishi = [];\r\n//320-519\r\nvar WordAdjustMitsubishi = [];\r\n//520-619\r\nvar DWordDisplayMitsubishi = [];\r\n//620-719\r\nvar DWordAdjustMitsubishi = [];\r\n\r\nmodule.exports = {\r\n    WritePosCobot,resultImage,refreshDataBitDisplayImageLibrary,resultBitDisplayImageLibrary,refreshDataElementImageLibrary,resultElementImageLibrary,\r\n    refreshDataElement,refreshDataBitAdjust, refreshDataBitDisplay, refreshDataWordAdjust, refreshDataWordDisplay, refreshDataDWordAdjust, refreshDataDWordDisplay,\r\n    refreshDataImage, refreshDataLabel, refreshDataLine, refreshDataPoint, refreshDataPointPickPlace, refreshDataPanel,refreshDataTextField,refreshDataTextFieldInput,\r\n\r\n    haveChangeElement,haveChangeBitAdjust, haveChangeBitDisplay, haveChangeWordAdjust, haveChangeWordDisplay, haveChangeDWordAdjust, haveChangeDWordDisplay,haveChangeTextField,haveChangeTextFieldInput,\r\n\r\n    Element,OldElement,ElementOmron,WordStartElementOmron,LengthOfElementOmron,\r\n    BitDisplay, BitAdjust, WordDisplay, WordAdjust, DWordDisplay, DWordAdjust,\r\n    OldBitDisplay, OldBitAdjust, OldWordDisplay, OldWordAdjust, OldDWordDisplay, OldDWordAdjust,\r\n    TextField,OldTextField,TextFieldInput,OldTextFieldInput,\r\n\r\n    IndexSocketInputSignal, IndexSocketBitAdjust, IndexSocketBitDisplay, IndexSocketWordDisplay, IndexSocketWordAdjust, IndexSocketDWordDisplay, IndexSocketDWordAdjust,\r\n    CheckBitDisplay, CheckBitAdjust, CheckWordDisplay, CheckWordAdjust, CheckDWordDisplay, CheckDWordAdjust,\r\n    resultlabel, resultline, resultElement, resultBitDisplay,resultBitAdjust,resultWordDisplay,resultWordAdjust,resultDWordDisplay,resultDWordAdjust,resultPanel,\r\n    resultTextField,resultTextFieldInput,\r\n    resultcustomeroperator, refreshdata, CustomerOperator,\r\n\r\n    BitDisplayOMRON, WordStartBitDisplayOMRON, LengthOfWordBitDisplayOMRON,\r\n    BitAdjustOMRON, WordStartBitAdjustOMRON, LengthOfWordBitAdjustOMRON,\r\n    WordDisplayOMRON, WordStartWordDisplayOMRON, LengthOfWordWordDisplayOMRON,\r\n    WordAdjustOMRON, WordStartWordAdjustOMRON, LengthOfWordWordAdjustOMRON,\r\n    DWordDisplayOMRON, WordStartDWordDisplayOMRON, LengthOfWordDWordDisplayOMRON,\r\n    DWordAdjustOMRON, WordStartDWordAdjustOMRON, LengthOfWordDWordAdjustOMRON,\r\n\r\n    ElementMitsubishi, BitDisplayMitsubishi, BitAdjustMitsubishi, WordDisplayMitsubishi, WordAdjustMitsubishi, DWordDisplayMitsubishi, DWordAdjustMitsubishi,\r\n    refreshDataPosCobot,resultPosCobot,\r\n}","module.exports = require(\"stampit\");","module.exports = require(\"express\");","module.exports = require(\"bluebird\");","function isEmpty(val) {\r\n    return (val === undefined || val == null || val.length <= 0) ? true : false;\r\n}\r\nfunction ReadBitOfPLC(WordStart, LengthOfWord, Values) {\r\n    var Array = [];\r\n    for (var i = WordStart; i < WordStart + LengthOfWord; i++) {\r\n        var temp = Number(Values[i]);\r\n        for (var j = 0; j < 16; j++) {\r\n            Array[16 * (i - WordStart) + j] = temp & 1;\r\n            temp = temp >> 1;\r\n        }\r\n    }\r\n    return Array;\r\n}\r\nfunction ReadWordOfPLC(Start, LengthOfWord, Values) {\r\n    var Array = [];\r\n    for (var i = Start; i < Start + LengthOfWord; i++) {\r\n        Array[i - Start] = (Values[i]);\r\n    }\r\n    return Array;\r\n}\r\nfunction ReadWordOfPlcToByte(Start, LengthOfWord, Values) {\r\n    var byteArray = [];\r\n    for (var index = Start; index < Start + LengthOfWord; index++) {\r\n        var byte = Values[index] & 0xff;\r\n        byteArray[2 * (index - Start)] = byte;\r\n        Values[index] = (Values[index] - byte) / 256;\r\n        byteArray[2 * (index - Start) + 1] = Values[index]\r\n    }\r\n\r\n    return byteArray;\r\n}\r\nfunction StringToAscii(str) {\r\n    var code = new Array(str.length);\r\n    for (var i = 0; i < str.length; i++) {\r\n        code[i] = str.charCodeAt(i);\r\n    }\r\n    var arrOut = [], index = 0, result = 0;\r\n    for (var i = 0; i < code.length; i++) {\r\n        if (i % 2 === 0) {\r\n            result = code[i]\r\n            if (i + 1 === code.length) arrOut[index] = result;\r\n        };\r\n        if (i % 2 === 1) {\r\n            result = result + code[i] * 256;\r\n            arrOut[index] = result;\r\n            index = index + 1;\r\n        }\r\n    }\r\n    return arrOut;\r\n}\r\nfunction ReadDWordOfPLC(WordStart, LengthOfWord, Values) {\r\n    var Array = [];\r\n    for (var i = WordStart; i < WordStart + LengthOfWord * 2; i++) {\r\n        if (i % 2 == 1) {\r\n            Array[(i - WordStart - 1) / 2] = (Values[i] * 65536 + Values[i - 1]);\r\n            if (Array[(i - WordStart - 1) / 2] < 0) {\r\n                Array[(i - WordStart - 1) / 2] = Array[(i - WordStart - 1) / 2] + 65536;\r\n            }\r\n        }\r\n    }\r\n    return Array;\r\n}\r\nfunction ConvertArray2Text(data) {\r\n    var temp = \"\";\r\n    for (var i = 0; i < data.length; i++) {\r\n        temp = temp + '|' + data[i];\r\n    }\r\n    return temp;\r\n}\r\nfunction CheckChangeValue(Variable, OldVariable) {\r\n    var temp = false;\r\n    if (!isEmpty(Variable)) {\r\n        for (var i = 0; i < Variable.length; i++) {\r\n            if (Variable[i] != OldVariable[i]) {\r\n                temp = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    return temp;\r\n}\r\nfunction CheckNegativeNumber(nb) {\r\n    if (nb < 0) { return nb + 65536 }\r\n    if (nb > 32767) { return nb - 65536 }\r\n    return nb\r\n}\r\nfunction getRandomInt(max) {\r\n    return Math.floor(Math.random() * Math.floor(max));\r\n}\r\nfunction saveJsonFile(path, dataStore) {\r\n    const fs = require('fs')\r\n\r\n    try {\r\n        if (!fs.existsSync(path)) {\r\n            fs.writeFile(path, JSON.stringify(dataStore), 'utf8', function (err) {\r\n                if (err) {\r\n                    console.log(\"An error occured while writing JSON Object to File.\");\r\n                    return console.log(err);\r\n                }\r\n\r\n                console.log(\"JSON file has been saved.\");\r\n            });\r\n        }\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\nfunction saveFeedbackFile(path, dataStore) {\r\n    const fs = require('fs')\r\n    try {\r\n        fs.writeFile(path, dataStore, 'utf8', function (err) {\r\n            if (err) {\r\n                console.log(\"An error occured while writing JSON Object to File.\");\r\n                return console.log(err);\r\n            }\r\n            console.log(\"JSON file has been saved.\");\r\n        });\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\nfunction getJsonFile(path, cb) {\r\n    const fs = require('fs')\r\n    try {\r\n        if (fs.existsSync(path)) {\r\n            fs.readFile(path, 'utf8', function (err, data) {\r\n                if (err) console.log(err);\r\n                obj = JSON.parse(data);\r\n                cb(obj)\r\n            });\r\n        } else { cb('update') }\r\n    } catch (err) {\r\n        console.error(err)\r\n        cb([])\r\n    }\r\n}\r\nfunction convertPosCobot(pos0, pos1) {\r\n    var data =  [];\r\n    data[0]=parseInt(pos1 % 256)\r\n    data[1]=parseInt(pos1 / 256)\r\n    data[2]=parseInt(pos0 % 256)\r\n    data[3]=parseInt(pos0 / 256)\r\n    return Buffer.from([ data[3], data[2], data[1], data[0] ]).readFloatBE(0)\r\n}\r\nfunction getIndexCobotWriteMB(indexBit,index) {\r\n    if(index%10 <= indexBit){\r\n        return index/10\r\n    }\r\n    else{\r\n        return index/10+1\r\n    }\r\n}\r\nmodule.exports = {\r\n    ReadWordOfPlcToByte, StringToAscii, ReadBitOfPLC, ReadWordOfPLC,\r\n    ReadDWordOfPLC, ConvertArray2Text, CheckChangeValue, CheckNegativeNumber,\r\n    getRandomInt, saveJsonFile, getJsonFile, saveFeedbackFile,\r\n    convertPosCobot,getIndexCobotWriteMB\r\n}","module.exports = require(\"fs\");","module.exports = require(\"net\");","module.exports = require(\"util\");","module.exports = require(\"stampit-log\");","var map = {\n\t\"./ReadCoils\": 29,\n\t\"./ReadCoils.js\": 29,\n\t\"./ReadDiscreteInputs\": 30,\n\t\"./ReadDiscreteInputs.js\": 30,\n\t\"./ReadHoldingRegisters\": 31,\n\t\"./ReadHoldingRegisters.js\": 31,\n\t\"./ReadInputRegisters\": 32,\n\t\"./ReadInputRegisters.js\": 32,\n\t\"./WriteMultipleCoils\": 33,\n\t\"./WriteMultipleCoils.js\": 33,\n\t\"./WriteMultipleRegisters\": 34,\n\t\"./WriteMultipleRegisters.js\": 34,\n\t\"./WriteSingleCoil\": 35,\n\t\"./WriteSingleCoil.js\": 35,\n\t\"./WriteSingleRegister\": 36,\n\t\"./WriteSingleRegister.js\": 36\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 10;","module.exports = require(\"config\");","module.exports = require(\"path\");","var mongoose=require('mongoose')\r\nvar Schema=mongoose.Schema;\r\n\r\nvar PointSchema=new Schema({\r\n    type:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    number:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    offsetInX:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    offsetInY:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    offsetInZ:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    offsetInR:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    offsetInAddX:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    offsetInAddY:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    PlaceX:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    PlaceY:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n})\r\n\r\nmodule.exports=mongoose.model('points',PointSchema)","var mongoose=require('mongoose')\r\nvar Schema=mongoose.Schema;\r\n\r\nvar ElementSchema=new Schema({\r\n    parent:{\r\n        type:String,\r\n        default:''\r\n    },\r\n    tag:{\r\n        type:String,\r\n        required:true\r\n    },\r\n    left:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    top:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    nameElement:{\r\n        type:String,\r\n        default:''\r\n    },\r\n    src:{\r\n        type:String,\r\n        required:true\r\n    },\r\n    state_m:{\r\n        type:Number,\r\n        default:0\r\n    },\r\n    state_cm:{\r\n        type:Number,\r\n        default:0\r\n    },\r\n    state_F0:{\r\n        type:Number,\r\n        default:0\r\n    },\r\n    state_F1:{\r\n        type:Number,\r\n        default:0\r\n    },\r\n    state_Fault:{\r\n        type:Number,\r\n        default:0\r\n    },\r\n    state_Interlock:{\r\n        type:Number,\r\n        default:0\r\n    },\r\n})\r\n//a setter\r\n//FoodSchema.path('name').set(inputString)=>{\r\n//    return inputString[0].toUpperCase() + inputString.slice(1);\r\n//})\r\nmodule.exports=mongoose.model('elements',ElementSchema)","var mongoose=require('mongoose')\r\nvar Schema=mongoose.Schema;\r\n\r\nvar LabelSchema=new Schema({\r\n    parent:{\r\n        type:String,\r\n        default:''\r\n    },\r\n    left:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    top:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    width:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    text:{\r\n        type:String,\r\n        required:true\r\n    },\r\n    color:{\r\n        type:String,\r\n        default:'black'\r\n    },\r\n    fontSize:{\r\n        type:Number,\r\n        default:14\r\n    }\r\n})\r\n//a setter\r\n//FoodSchema.path('name').set(inputString)=>{\r\n//    return inputString[0].toUpperCase() + inputString.slice(1);\r\n//})\r\nmodule.exports=mongoose.model('labels',LabelSchema)","var mongoose=require('mongoose')\r\nvar Schema=mongoose.Schema;\r\n\r\nvar LineSchema=new Schema({\r\n    parent:{\r\n        type:String,\r\n        default:''\r\n    },\r\n    left:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    top:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    length:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    type:{\r\n        type:String,\r\n        required:true\r\n    },\r\n    idRun:{\r\n        type:String,\r\n        default:''\r\n    },\r\n})\r\n//a setter\r\n//FoodSchema.path('name').set(inputString)=>{\r\n//    return inputString[0].toUpperCase() + inputString.slice(1);\r\n//})\r\nmodule.exports=mongoose.model('lines',LineSchema)","var mongoose=require('mongoose')\r\nvar Schema=mongoose.Schema;\r\n\r\nvar WordDisplaySchema=new Schema({\r\n    parent:{\r\n        type:String,\r\n        default:''\r\n    },\r\n    left:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    top:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    width:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    text:{\r\n        type:String,\r\n        required:true\r\n    },\r\n    tag:{\r\n        type:String,\r\n        required:true\r\n    },\r\n    fontSize:{\r\n        type:String,\r\n        required:true\r\n    },\r\n})\r\n//a setter\r\n//FoodSchema.path('name').set(inputString)=>{\r\n//    return inputString[0].toUpperCase() + inputString.slice(1);\r\n//})\r\nmodule.exports=mongoose.model('wordDisplays',WordDisplaySchema)","var mongoose=require('mongoose')\r\nvar Schema=mongoose.Schema;\r\n\r\nvar WordAdjustSchema=new Schema({\r\n    parent:{\r\n        type:String,\r\n        default:''\r\n    },\r\n    left:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    top:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    width:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    height:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    text:{\r\n        type:String,\r\n        required:true\r\n    },\r\n    tag:{\r\n        type:String,\r\n        required:true\r\n    },\r\n    fontSize:{\r\n        type:String,\r\n        required:true\r\n    },\r\n})\r\n//a setter\r\n//FoodSchema.path('name').set(inputString)=>{\r\n//    return inputString[0].toUpperCase() + inputString.slice(1);\r\n//})\r\nmodule.exports=mongoose.model('wordAdjusts',WordAdjustSchema)","var mongoose=require('mongoose')\r\nvar Schema=mongoose.Schema;\r\n\r\nvar DWordDisplaySchema=new Schema({\r\n    parent:{\r\n        type:String,\r\n        default:''\r\n    },\r\n    left:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    top:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    width:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    text:{\r\n        type:String,\r\n        required:true\r\n    },\r\n    tag:{\r\n        type:String,\r\n        required:true\r\n    },\r\n    fontSize:{\r\n        type:String,\r\n        required:true\r\n    },\r\n})\r\n//a setter\r\n//FoodSchema.path('name').set(inputString)=>{\r\n//    return inputString[0].toUpperCase() + inputString.slice(1);\r\n//})\r\nmodule.exports=mongoose.model('dwordDisplays',DWordDisplaySchema)","var mongoose=require('mongoose')\r\nvar Schema=mongoose.Schema;\r\n\r\nvar DWordAdjustSchema=new Schema({\r\n    parent:{\r\n        type:String,\r\n        default:''\r\n    },\r\n    left:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    top:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    width:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    height:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    text:{\r\n        type:String,\r\n        required:true\r\n    },\r\n    tag:{\r\n        type:String,\r\n        required:true\r\n    },\r\n    fontSize:{\r\n        type:String,\r\n        required:true\r\n    },\r\n})\r\n//a setter\r\n//FoodSchema.path('name').set(inputString)=>{\r\n//    return inputString[0].toUpperCase() + inputString.slice(1);\r\n//})\r\nmodule.exports=mongoose.model('dwordAdjusts',DWordAdjustSchema)","var mongoose=require('mongoose')\r\nvar Schema=mongoose.Schema;\r\n\r\nvar BitDisplaySchema=new Schema({\r\n    parent:{\r\n        type:String,\r\n        default:''\r\n    },\r\n    status:{\r\n        type:Boolean,\r\n        default:false\r\n    },\r\n    left:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    top:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    width:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    text0:{\r\n        type:String,\r\n        default:''\r\n    },\r\n    text1:{\r\n        type:String,\r\n        default:''\r\n    },\r\n    color0:{\r\n        type:String,\r\n        default:''\r\n    },\r\n    color1:{\r\n        type:String,\r\n        default:''\r\n    },\r\n    nameImage0:{\r\n        type:String,\r\n        default:''\r\n    },\r\n    nameImage1:{\r\n        type:String,\r\n        default:''\r\n    },\r\n    tag:{\r\n        type:String,\r\n        required:true\r\n    },\r\n    type:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    fontSize:{\r\n        type:Number,\r\n        default:14,\r\n        required:false\r\n    },\r\n})\r\n//a setter\r\n//FoodSchema.path('name').set(inputString)=>{\r\n//    return inputString[0].toUpperCase() + inputString.slice(1);\r\n//})\r\nmodule.exports=mongoose.model('bitDisplays',BitDisplaySchema)","var mongoose=require('mongoose')\r\nvar Schema=mongoose.Schema;\r\n\r\nvar BitAdjustSchema=new Schema({\r\n    parent:{\r\n        type:String,\r\n        default:''\r\n    },\r\n    status:{\r\n        type:Boolean,\r\n        default:false\r\n    },\r\n    left:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    top:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    width:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    height:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    text:{\r\n        type:String,\r\n        default:''\r\n    },\r\n    tag:{\r\n        type:String,\r\n        required:true\r\n    },\r\n    type:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    fontSize:{\r\n        type:Number,\r\n        default:14\r\n    },\r\n})\r\n//a setter\r\n//FoodSchema.path('name').set(inputString)=>{\r\n//    return inputString[0].toUpperCase() + inputString.slice(1);\r\n//})\r\nmodule.exports=mongoose.model('bitAdjusts',BitAdjustSchema)","var mongoose=require('mongoose')\r\nvar Schema=mongoose.Schema;\r\n\r\nvar PanelSchema=new Schema({\r\n    parent:{\r\n        type:String,\r\n        default:''\r\n    },\r\n    left:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    top:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    width:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    height:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    backgroundColor:{\r\n        type:String,\r\n        default:'#4c7549'\r\n    },\r\n    borderRadius:{\r\n        type:Number,\r\n        default:5\r\n    },\r\n    boxShadow1:{\r\n        type:Number,\r\n        default:10\r\n    },\r\n    boxShadow2:{\r\n        type:Number,\r\n        default:10\r\n    },\r\n    boxShadow3:{\r\n        type:Number,\r\n        default:20\r\n    },\r\n    boxShadowColor:{\r\n        type:String,\r\n        default:'#100'\r\n    },\r\n    zIndex:{\r\n        type:Number,\r\n        default:0\r\n    },\r\n    margin:{\r\n        type:Number,\r\n        default:10\r\n    },\r\n    padding:{\r\n        type:Number,\r\n        default:10,\r\n    }\r\n})\r\n//a setter\r\n//FoodSchema.path('name').set(inputString)=>{\r\n//    return inputString[0].toUpperCase() + inputString.slice(1);\r\n//})\r\nmodule.exports=mongoose.model('panels',PanelSchema)","var mongoose=require('mongoose')\r\nvar Schema=mongoose.Schema;\r\n\r\nvar TextFieldSchema=new Schema({\r\n    parent:{\r\n        type:String,\r\n        default:''\r\n    },\r\n    tag:{\r\n        type:String,\r\n        required:true\r\n    },\r\n    label:{\r\n        type:String,\r\n        required:true\r\n    },\r\n    value:{\r\n        type:String,\r\n        required:true\r\n    },\r\n    left:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    top:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    width:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    color:{\r\n        type:String,\r\n        required:true\r\n    },  \r\n    fontSize:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    rows:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n})\r\n//a setter\r\n//FoodSchema.path('name').set(inputString)=>{\r\n//    return inputString[0].toUpperCase() + inputString.slice(1);\r\n//})\r\nmodule.exports=mongoose.model('textFields',TextFieldSchema)","var mongoose=require('mongoose')\r\nvar Schema=mongoose.Schema;\r\n\r\nvar TextFieldInputSchema=new Schema({\r\n    parent:{\r\n        type:String,\r\n        default:''\r\n    },\r\n    tag:{\r\n        type:String,\r\n        required:true\r\n    },\r\n    label:{\r\n        type:String,\r\n        required:true\r\n    },\r\n    value:{\r\n        type:String,\r\n        required:true\r\n    },\r\n    left:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    top:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    width:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    color:{\r\n        type:String,\r\n        required:true\r\n    },  \r\n    fontSize:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    rows:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n})\r\n//a setter\r\n//FoodSchema.path('name').set(inputString)=>{\r\n//    return inputString[0].toUpperCase() + inputString.slice(1);\r\n//})\r\nmodule.exports=mongoose.model('textFieldInputs',TextFieldInputSchema)","var mongoose=require('mongoose')\r\nvar Schema=mongoose.Schema;\r\n\r\nvar ImageSchema=new Schema({\r\n    name:{\r\n        type:String,\r\n        default:''\r\n    },\r\n    img:{\r\n        type:String,\r\n        default:''\r\n    },\r\n    date:{\r\n        type:Date,\r\n        default:new Date()\r\n    }\r\n    \r\n})\r\nmodule.exports=mongoose.model('bitDisplay_Image_Library',ImageSchema)","var mongoose=require('mongoose')\r\nvar Schema=mongoose.Schema;\r\n\r\nvar ImageSchema=new Schema({\r\n    name:{\r\n        type:String,\r\n        unique:true,\r\n        default:''\r\n    },\r\n    imgRun:{\r\n        type:String,\r\n        default:''\r\n    },\r\n    imgStop:{\r\n        type:String,\r\n        default:''\r\n    },\r\n    imgLock:{\r\n        type:String,\r\n        default:''\r\n    },\r\n    imgFault:{\r\n        type:String,\r\n        default:''\r\n    },\r\n    date:{\r\n        type:Date,\r\n        default: Date.now,\r\n        timestamps: true\r\n    }\r\n    \r\n})\r\nmodule.exports=mongoose.model('element_Image_Library',ImageSchema)","module.exports = require(\"stampit-state-machine\");","'use strict'\n\nvar Stampit = require('stampit')\nvar Promise = require('bluebird')\n\nmodule.exports = Stampit()\n  .init(function () {\n    var init = function () {\n      this.addResponseHandler(1, onResponse)\n    }.bind(this)\n\n    var onResponse = function (pdu, request) {\n      this.log.debug('handling read coils response.')\n\n      var fc = pdu.readUInt8(0)\n      var byteCount = pdu.readUInt8(1)\n\n      var resp = {\n        fc: fc,\n        byteCount: byteCount,\n        payload: pdu.slice(2),\n        coils: []\n      }\n\n      if (fc !== 1) {\n        request.defer.reject(new Error('received unexpected function code'))\n        return\n      }\n\n      var cntr = 0\n      for (var i = 0; i < byteCount; i += 1) {\n        var h = 1\n        var cur = pdu.readUInt8(2 + i)\n        for (var j = 0; j < 8; j += 1) {\n          resp.coils[cntr] = (cur & h) > 0\n          h = h << 1\n          cntr += 1\n        }\n      }\n\n      request.defer.resolve(resp)\n    }.bind(this)\n\n    this.readCoils = function (start, quantity) {\n      return new Promise(function (resolve, reject) {\n        var fc = 1\n        var pdu = Buffer.allocUnsafe(5)\n\n        pdu.writeUInt8(fc, 0)\n        pdu.writeUInt16BE(start, 1)\n        pdu.writeUInt16BE(quantity, 3)\n\n        this.queueRequest(fc, pdu, { resolve: resolve, reject: reject })\n      }.bind(this))\n    }\n\n    init()\n  })\n","'use strict'\n\nvar Stampit = require('stampit')\nvar Promise = require('bluebird')\n\nmodule.exports = Stampit()\n  .init(function () {\n    var init = function () {\n      this.addResponseHandler(2, onResponse)\n    }.bind(this)\n\n    var onResponse = function (pdu, request) {\n      this.log.debug('handling read discrete inputs response.')\n\n      var fc = pdu.readUInt8(0)\n      var byteCount = pdu.readUInt8(1)\n      var cntr = 0\n      var resp = {\n        fc: fc,\n        byteCount: byteCount,\n        payload: pdu.slice(2),\n        coils: []\n      }\n\n      if (fc !== 2) {\n        request.defer.reject(new Error('received unexpected function code'))\n        return\n      }\n\n      for (var i = 0; i < byteCount; i += 1) {\n        var h = 1\n        var cur = pdu.readUInt8(2 + i)\n        for (var j = 0; j < 8; j += 1) {\n          resp.coils[cntr] = (cur & h) > 0\n          h = h << 1\n          cntr += 1\n        }\n      }\n\n      request.defer.resolve(resp)\n    }.bind(this)\n\n    this.readDiscreteInputs = function (start, quantity) {\n      return new Promise(function (resolve, reject) {\n        var fc = 2\n        var pdu = Buffer.allocUnsafe(5)\n\n        pdu.writeUInt8(fc)\n        pdu.writeUInt16BE(start, 1)\n        pdu.writeUInt16BE(quantity, 3)\n\n        if (quantity > 2000) {\n          reject()\n          return\n        }\n\n        this.queueRequest(fc, pdu, { resolve: resolve, reject: reject })\n      }.bind(this))\n    }\n\n    init()\n  })\n","'use strict'\n\nvar Stampit = require('stampit')\nvar Promise = require('bluebird')\n\nmodule.exports = Stampit()\n  .init(function () {\n    var init = function () {\n      this.addResponseHandler(3, onResponse)\n    }.bind(this)\n\n    var onResponse = function (pdu, request) {\n      this.log.debug('handling read holding registers response.')\n\n      var fc = pdu.readUInt8(0)\n      var byteCount = pdu.readUInt8(1)\n\n      var resp = {\n        fc: fc,\n        byteCount: byteCount,\n        payload: pdu.slice(2),\n        register: []\n      }\n\n      if (fc !== 3) {\n        request.defer.reject(new Error('received unexpected function code'))\n        return\n      }\n\n      var registerCount = byteCount / 2\n\n      for (var i = 0; i < registerCount; i += 1) {\n        resp.register.push(pdu.readUInt16BE(2 + (i * 2)))\n      }\n\n      request.defer.resolve(resp)\n    }.bind(this)\n\n    this.readHoldingRegisters = function (start, quantity) {\n      return new Promise(function (resolve, reject) {\n        this.log.debug('Starting read holding registers request.')\n\n        var fc = 3\n        var pdu = Buffer.allocUnsafe(5)\n\n        pdu.writeUInt8(fc)\n        pdu.writeUInt16BE(start, 1)\n        pdu.writeUInt16BE(quantity, 3)\n\n        this.queueRequest(fc, pdu, { resolve: resolve, reject: reject })\n      }.bind(this))\n    }\n\n    init()\n  })\n","'use strict'\n\nvar Stampit = require('stampit')\nvar Promise = require('bluebird')\n\nmodule.exports = Stampit()\n  .init(function () {\n    var init = function () {\n      this.addResponseHandler(4, onResponse)\n    }.bind(this)\n\n    var onResponse = function (pdu, request) {\n      this.log.debug('handling read input registers response.')\n\n      var fc = pdu.readUInt8(0)\n      var byteCount = pdu.readUInt8(1)\n\n      var resp = {\n        fc: fc,\n        byteCount: byteCount,\n        payload: pdu.slice(2),\n        register: []\n      }\n\n      if (fc !== 4) {\n        request.defer.reject(new Error('received unexpected function code'))\n        return\n      }\n\n      var registerCount = byteCount / 2\n\n      for (var i = 0; i < registerCount; i += 1) {\n        resp.register.push(pdu.readUInt16BE(2 + (i * 2)))\n      }\n\n      request.defer.resolve(resp)\n    }.bind(this)\n\n    this.readInputRegisters = function (start, quantity) {\n      return new Promise(function (resolve, reject) {\n        var fc = 4\n        var pdu = Buffer.allocUnsafe(5)\n\n        pdu.writeUInt8(fc)\n        pdu.writeUInt16BE(start, 1)\n        pdu.writeUInt16BE(quantity, 3)\n\n        this.queueRequest(fc, pdu, { resolve: resolve, reject: reject })\n      }.bind(this))\n    }\n\n    init()\n  })\n","'use strict'\n\nvar stampit = require('stampit')\nvar Promise = require('bluebird')\n\nmodule.exports = stampit()\n  .init(function () {\n    var init = function () {\n      this.addResponseHandler(15, onResponse)\n    }.bind(this)\n\n    var onResponse = function (pdu, request) {\n      this.log.debug('handling multiple coils response.')\n\n      var fc = pdu.readUInt8(0)\n      var startAddress = pdu.readUInt16BE(1)\n      var quantity = pdu.readUInt16BE(3)\n\n      var resp = {\n        fc: fc,\n        startAddress: startAddress,\n        quantity: quantity\n      }\n\n      if (fc !== 15) {\n        request.defer.reject(new Error('received unexpected function code'))\n        return\n      }\n\n      request.defer.resolve(resp)\n    }.bind(this)\n\n    this.writeMultipleCoils = function (startAddress, coils, N) {\n      return new Promise(function (resolve, reject) {\n        var fc = 15\n        var basePdu = Buffer.allocUnsafe(6)\n        var pdu\n\n        basePdu.writeUInt8(fc, 0)\n        basePdu.writeUInt16BE(startAddress, 1)\n\n        if (coils instanceof Buffer) {\n          basePdu.writeUInt16BE(N, 3)\n          basePdu.writeUInt8(coils.length, 5)\n          pdu = Buffer.concat([basePdu, coils])\n        } else if (coils instanceof Array) {\n          if (coils.length > 1968) {\n            reject()\n            return\n          }\n\n          var byteCount = Math.ceil(coils.length / 8)\n          var curByte = 0\n          var curByteIdx = 0\n          var cntr = 0\n          var payloadPdu = Buffer.allocUnsafe(byteCount)\n\n          basePdu.writeUInt16BE(coils.length, 3)\n          basePdu.writeUInt8(byteCount, 5)\n\n          for (var i = 0; i < coils.length; i += 1) {\n            curByte += coils[i] ? Math.pow(2, cntr) : 0\n\n            cntr = (cntr + 1) % 8\n\n            if (cntr === 0 || i === coils.length - 1) {\n              payloadPdu.writeUInt8(curByte, curByteIdx)\n              curByteIdx = curByteIdx + 1\n              curByte = 0\n            }\n          }\n\n          pdu = Buffer.concat([basePdu, payloadPdu])\n        }\n\n        this.queueRequest(fc, pdu, { resolve: resolve, reject: reject })\n      }.bind(this))\n    }\n\n    init()\n  })\n","'use strict'\n\nvar stampit = require('stampit')\nvar Promise = require('bluebird')\n\nmodule.exports = stampit()\n  .init(function () {\n    var init = function () {\n      this.addResponseHandler(16, onResponse)\n    }.bind(this)\n\n    var onResponse = function (pdu, request) {\n      this.log.debug('handling multiple registers response.')\n\n      var fc = pdu.readUInt8(0)\n      var startAddress = pdu.readUInt16BE(1)\n      var quantity = pdu.readUInt16BE(3)\n\n      var resp = {\n        fc: fc,\n        startAddress: startAddress,\n        quantity: quantity\n      }\n\n      if (fc !== 16) {\n        request.defer.reject(new Error('received unexpected function code'))\n        return\n      }\n\n      request.defer.resolve(resp)\n    }.bind(this)\n\n    this.writeMultipleRegisters = function (startAddress, register) {\n      return new Promise(function (resolve, reject) {\n        var fc = 16\n        var basePdu = Buffer.allocUnsafe(6)\n        var pdu\n\n        basePdu.writeUInt8(fc)\n        basePdu.writeUInt16BE(startAddress, 1)\n\n        if (register instanceof Buffer) {\n          if (register.length / 2 > 0x007b) {\n            reject()\n          }\n\n          basePdu.writeUInt16BE(register.length / 2, 3)\n          basePdu.writeUInt8(register.length, 5)\n\n          pdu = Buffer.concat([basePdu, register])\n        } else if (register instanceof Array) {\n          if (register.length > 0x007b) {\n            reject()\n            return\n          }\n\n          var byteCount = Math.ceil(register.length * 2)\n          var payloadPdu = Buffer.allocUnsafe(byteCount)\n\n          basePdu.writeUInt16BE(register.length, 3)\n          basePdu.writeUInt8(byteCount, 5)\n\n          for (var i = 0; i < register.length; i += 1) {\n            payloadPdu.writeUInt16BE(register[i], 2 * i)\n          }\n\n          pdu = Buffer.concat([basePdu, payloadPdu])\n        } else {\n          reject()\n          return\n        }\n\n        this.queueRequest(fc, pdu, { resolve: resolve, reject: reject })\n      }.bind(this))\n    }\n\n    init()\n  })\n","'use strict'\n\nvar Stampit = require('stampit')\nvar Promise = require('bluebird')\n\nmodule.exports = Stampit()\n  .init(function () {\n    var init = function () {\n      this.addResponseHandler(5, onResponse)\n    }.bind(this)\n\n    var onResponse = function (pdu, request) {\n      this.log.debug('handling write single coil response.')\n\n      var fc = pdu.readUInt8(0)\n      var outputAddress = pdu.readUInt16BE(1)\n      var outputValue = pdu.readUInt16BE(3)\n\n      var resp = {\n        fc: fc,\n        outputAddress: outputAddress,\n        outputValue: outputValue === 0x0000 ? false : outputValue === 0xFF00 ? true : undefined\n      }\n\n      if (fc !== 5) {\n        request.defer.reject(new Error('received unexpected function code'))\n        return\n      }\n\n      request.defer.resolve(resp)\n    }.bind(this)\n\n    this.writeSingleCoil = function (address, value) {\n      return new Promise(function (resolve, reject) {\n        var fc = 5\n        var payload = (value instanceof Buffer) ? (value.readUInt8(0) > 0) : value\n        var pdu = Buffer.allocUnsafe(5)\n\n        pdu.writeUInt8(fc, 0)\n        pdu.writeUInt16BE(address, 1)\n        pdu.writeUInt16BE(payload ? 0xff00 : 0x0000, 3)\n\n        this.queueRequest(fc, pdu, { resolve: resolve, reject: reject })\n      }.bind(this))\n    }\n\n    init()\n  })\n","'use strict'\n\nvar Stampit = require('stampit')\nvar Promise = require('bluebird')\n\nmodule.exports = Stampit()\n  .init(function () {\n    var init = function () {\n      this.addResponseHandler(6, onResponse)\n    }.bind(this)\n\n    var onResponse = function (pdu, request) {\n      this.log.debug('handling write single register response.')\n\n      var fc = pdu.readUInt8(0)\n      var registerAddress = pdu.readUInt16BE(1)\n      var registerValue = pdu.readUInt16BE(3)\n\n      var resp = {\n        fc: fc,\n        registerAddress: registerAddress,\n        registerValue: registerValue,\n        registerAddressRaw: pdu.slice(1, 3),\n        registerValueRaw: pdu.slice(3, 5)\n      }\n\n      if (fc !== 6) {\n        request.defer.reject(new Error('received unexpected function code'))\n        return\n      }\n\n      request.defer.resolve(resp)\n    }.bind(this)\n\n    this.writeSingleRegister = function (address, value) {\n      return new Promise(function (resolve, reject) {\n        var fc = 6\n        var payload = (value instanceof Buffer) ? value.readUInt16BE(0) : value\n        var pdu = Buffer.allocUnsafe(5)\n\n        pdu.writeUInt8(fc, 0)\n        pdu.writeUInt16BE(address, 1)\n        pdu.writeUInt16BE(payload, 3)\n\n        this.queueRequest(fc, pdu, { resolve: resolve, reject: reject })\n      }.bind(this))\n    }\n\n    init()\n  })\n","'use strict'\nvar stampit = require('stampit')\nvar ModbusServerCore = require('./modbus-server-core.js')\nvar StateMachine = require('stampit-state-machine')\nvar ClientSocket = require('./modbus-tcp-server-client.js')\n\nmodule.exports = stampit()\n  .compose(ModbusServerCore)\n  .compose(StateMachine)\n  .init(function () {\n    let server\n    let socketList = []\n    let fifo = []\n    let clients = []\n\n    let init = function () {\n      if (!this.port) {\n        this.port = 502\n      }\n\n      if (!this.hostname) {\n        this.hostname = '0.0.0.0'\n      }\n\n      /* dependency injection for the net module */\n      let net = this.injNet || require('net')\n\n      server = net.createServer()\n\n      server.on('connection', function (s) {\n        let node = s.address()\n        this.log.debug('new connection', node)\n\n        if (this.whiteListIPs && this.whiteListIPs.indexOf(node.address) < 0) {\n          this.log.debug('client connection REJECTED', node)\n          s.end()\n          return false\n        }\n\n        clients.push(s)\n        initiateSocket(s)\n      }.bind(this))\n\n      server.listen(this.port, this.hostname, function (err) {\n        if (err) {\n          this.log.debug('error while listening', err)\n          this.emit('error', err)\n          return\n        }\n      }.bind(this))\n\n      this.log.debug('server is listening on port', this.hostname + ':' + this.port)\n\n      this.on('newState_ready', flush)\n\n      this.setState('ready')\n    }.bind(this)\n\n    var flush = function () {\n      if (this.inState('processing')) {\n        return\n      }\n\n      if (fifo.length === 0) {\n        return\n      }\n\n      this.setState('processing')\n\n      var current = fifo.shift()\n\n      this.onData(current.pdu, function (response) {\n        this.log.debug('sending tcp data')\n\n        var head = Buffer.allocUnsafe(7)\n\n        head.writeUInt16BE(current.request.trans_id, 0)\n        head.writeUInt16BE(current.request.protocol_ver, 2)\n        head.writeUInt16BE(response.length + 1, 4)\n        head.writeUInt8(current.request.unit_id, 6)\n\n        var pkt = Buffer.concat([head, response])\n\n        current.socket.write(pkt)\n\n        this.setState('ready')\n      }.bind(this))\n    }.bind(this)\n\n    var initiateSocket = function (socket) {\n      let socketId = socketList.length\n\n      var requestHandler = function (req) {\n        fifo.push(req)\n        flush()\n      }\n\n      var removeHandler = function () {\n        socketList[socketId] = undefined\n        /* remove undefined on the end of the array */\n        for (let i = socketList.length - 1; i >= 0; i -= 1) {\n          let cur = socketList[i]\n          if (cur !== undefined) {\n            break\n          }\n\n          socketList.splice(i, 1)\n        }\n        this.log.debug('Client connection closed, remaining clients. ', socketList.length)\n      }.bind(this)\n\n      let clientSocket = ClientSocket({\n        socket: socket,\n        socketId: socketId,\n        onRequest: requestHandler,\n        onEnd: removeHandler\n      })\n\n      socketList.push(clientSocket)\n    }.bind(this)\n\n    this.close = function (cb) {\n      for (var c in clients) {\n        clients[c].destroy()\n      }\n\n      server.close(function () {\n        server.unref()\n        if (cb) { cb() }\n      })\n    }\n\n    init()\n  })\n","var map = {\n\t\"./ReadCoils\": 39,\n\t\"./ReadCoils.js\": 39,\n\t\"./ReadDiscreteInputs\": 40,\n\t\"./ReadDiscreteInputs.js\": 40,\n\t\"./ReadHoldingRegisters\": 41,\n\t\"./ReadHoldingRegisters.js\": 41,\n\t\"./ReadInputRegisters\": 42,\n\t\"./ReadInputRegisters.js\": 42,\n\t\"./WriteMultipleCoils\": 43,\n\t\"./WriteMultipleCoils.js\": 43,\n\t\"./WriteMultipleRegisters\": 44,\n\t\"./WriteMultipleRegisters.js\": 44,\n\t\"./WriteSingleCoil\": 45,\n\t\"./WriteSingleCoil.js\": 45,\n\t\"./WriteSingleRegister\": 46,\n\t\"./WriteSingleRegister.js\": 46\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 38;","'use strict'\n\nvar stampit = require('stampit')\n\nmodule.exports = stampit()\n  .init(function () {\n    var init = function () {\n      this.log.debug('initiating read coils request handler.')\n\n      if (!this.responseDelay) {\n        this.responseDelay = 0\n      }\n\n      this.setRequestHandler(1, onRequest)\n    }.bind(this)\n\n    var onRequest = function (pdu, cb) {\n      setTimeout(function () {\n        this.log.debug('handling read coils request.')\n\n        if (pdu.length !== 5) {\n          let buf = Buffer.allocUnsafe(2)\n\n          buf.writeUInt8(0x81, 0)\n          buf.writeUInt8(0x02, 1)\n          cb(buf)\n          return\n        }\n\n        var start = pdu.readUInt16BE(1)\n        var quantity = pdu.readUInt16BE(3)\n\n        this.emit('readCoilsRequest', start, quantity)\n\n        var mem = this.getCoils()\n\n        if (start > mem.length * 8 || start + quantity > mem.length * 8) {\n          let buf = Buffer.allocUnsafe(2)\n          buf.writeUInt8(0x81, 0)\n          buf.writeUInt8(0x02, 1)\n          cb(buf)\n          return\n        }\n\n        var val = 0\n        var thisByteBitCount = 0\n        var byteIdx = 2\n        var byteCount = Math.ceil(quantity / 8)\n        var response = Buffer.allocUnsafe(2 + byteCount)\n\n        response.writeUInt8(0x01, 0)\n        response.writeUInt8(byteCount, 1)\n\n        for (var totalBitCount = start; totalBitCount < start + quantity; totalBitCount += 1) {\n          var buf = mem.readUInt8(Math.floor(totalBitCount / 8))\n          var mask = 1 << (totalBitCount % 8)\n\n          if (buf & mask) {\n            val += 1 << (thisByteBitCount % 8)\n          }\n\n          thisByteBitCount += 1\n\n          if (thisByteBitCount % 8 === 0 || totalBitCount === (start + quantity) - 1) {\n            response.writeUInt8(val, byteIdx)\n            val = 0; byteIdx = byteIdx + 1\n          }\n        }\n\n        cb(response)\n      }.bind(this), this.responseDelay)\n    }.bind(this)\n\n    init()\n  })\n","'use strict'\n\nvar stampit = require('stampit')\n\nvar handler = stampit()\n  .init(function () {\n    var init = function () {\n      this.log.debug('initiating read discrete inputs request handler.')\n\n      if (!this.responseDelay) {\n        this.responseDelay = 0\n      }\n\n      this.setRequestHandler(2, onRequest)\n    }.bind(this)\n\n    var onRequest = function (pdu, cb) {\n      setTimeout(function () {\n        this.log.debug('handling read discrete inputs request.')\n\n        if (pdu.length !== 5) {\n          this.log.debug('wrong pdu length.')\n\n          let buf = Buffer.allocUnsafe(2)\n\n          buf.writeUInt8(0x82, 0)\n          buf.writeUInt8(0x02, 1)\n          cb(buf)\n\n          return\n        }\n\n        var start = pdu.readUInt16BE(1)\n        var quantity = pdu.readUInt16BE(3)\n\n        this.emit('readDiscreteInputsRequest', start, quantity)\n\n        var mem = this.getDiscrete()\n\n        if (start > mem.length * 8 || start + quantity > mem.length * 8) {\n          this.log.debug('wrong pdu length.')\n\n          let buf = Buffer.allocUnsafe(2)\n\n          buf.writeUInt8(0x82, 0)\n          buf.writeUInt8(0x02, 1)\n          cb(buf)\n\n          return\n        }\n\n        var val = 0\n        var thisByteBitCount = 0\n        var byteIdx = 2\n        var byteCount = Math.ceil(quantity / 8)\n        var response = Buffer.allocUnsafe(2 + byteCount)\n\n        response.writeUInt8(0x02, 0)\n        response.writeUInt8(byteCount, 1)\n\n        for (var totalBitCount = start; totalBitCount < start + quantity; totalBitCount += 1) {\n          var buf = mem.readUInt8(Math.floor(totalBitCount / 8))\n          var mask = 1 << (totalBitCount % 8)\n\n          if (buf & mask) {\n            val += 1 << (thisByteBitCount % 8)\n          }\n\n          thisByteBitCount += 1\n\n          if (thisByteBitCount % 8 === 0 || totalBitCount === (start + quantity) - 1) {\n            response.writeUInt8(val, byteIdx)\n            val = 0; byteIdx = byteIdx + 1\n          }\n        }\n\n        cb(response)\n      }.bind(this), this.responseDelay)\n    }.bind(this)\n\n    init()\n  })\n\nmodule.exports = handler\n","'use strict'\n\nvar stampit = require('stampit')\n\nmodule.exports = stampit()\n  .init(function () {\n    var init = function () {\n      this.log.debug('initiating read holding registers request handler.')\n\n      if (!this.responseDelay) {\n        this.responseDelay = 0\n      }\n\n      this.setRequestHandler(3, onRequest)\n    }.bind(this)\n\n    var onRequest = function (pdu, cb) {\n      setTimeout(function () {\n        this.log.debug('handling read holding registers request.')\n\n        if (pdu.length !== 5) {\n          this.log.debug('wrong pdu length.')\n\n          let buf = Buffer.allocUnsafe(2)\n\n          buf.writeUInt8(0x83, 0)\n          buf.writeUInt8(0x02, 1)\n          cb(buf)\n\n          return\n        }\n\n        var start = pdu.readUInt16BE(1)\n        var byteStart = start * 2\n        var quantity = pdu.readUInt16BE(3)\n\n        this.emit('readHoldingRegistersRequest', byteStart, quantity)\n\n        var mem = this.getHolding()\n\n        if (byteStart > mem.length || byteStart + (quantity * 2) > mem.length) {\n          this.log.debug('request outside register boundaries.')\n          let buf = Buffer.allocUnsafe(2)\n\n          buf.writeUInt8(0x83, 0)\n          buf.writeUInt8(0x02, 1)\n          cb(buf)\n          return\n        }\n\n        var head = Buffer.allocUnsafe(2)\n\n        head.writeUInt8(0x03, 0)\n        head.writeUInt8(quantity * 2, 1)\n\n        var response = Buffer.concat([head, mem.slice(byteStart, byteStart + quantity * 2)])\n\n        this.log.debug('finished read holding register request.')\n\n        cb(response)\n      }.bind(this), this.responseDelay)\n    }.bind(this)\n\n    init()\n  })\n","'use strict'\n\nvar stampit = require('stampit')\n\nmodule.exports = stampit()\n  .init(function () {\n    var init = function () {\n      this.log.debug('initiating read input registers request handler.')\n\n      if (!this.responseDelay) {\n        this.responseDelay = 0\n      }\n\n      this.setRequestHandler(4, onRequest)\n    }.bind(this)\n\n    var onRequest = function (pdu, cb) {\n      setTimeout(function () {\n        this.log.debug('handling read input registers request.')\n\n        if (pdu.length !== 5) {\n          let buf = Buffer.allocUnsafe(2)\n\n          buf.writeUInt8(0x84, 0)\n          buf.writeUInt8(0x02, 1)\n          cb(buf)\n          return\n        }\n\n        var start = pdu.readUInt16BE(1)\n        var byteStart = start * 2\n        var quantity = pdu.readUInt16BE(3)\n\n        this.emit('readInputRegistersRequest', byteStart, quantity)\n\n        var mem = this.getInput()\n\n        if (byteStart > mem.length || byteStart + (quantity * 2) > mem.length) {\n          let buf = Buffer.allocUnsafe(2)\n\n          buf.writeUInt8(0x84, 0)\n          buf.writeUInt8(0x02, 1)\n          cb(buf)\n          return\n        }\n\n        var head = Buffer.allocUnsafe(2)\n\n        head.writeUInt8(0x04, 0)\n        head.writeUInt8(quantity * 2, 1)\n\n        var response = Buffer.concat([head, mem.slice(byteStart, byteStart + quantity * 2)])\n\n        cb(response)\n      }.bind(this), this.responseDelay)\n    }.bind(this)\n\n    init()\n  })\n","'use strict'\n\nvar stampit = require('stampit')\n\nmodule.exports = stampit()\n  .init(function () {\n    var init = function () {\n      this.log.debug('initiating write multiple coils request handler.')\n\n      if (!this.responseDelay) {\n        this.responseDelay = 0\n      }\n\n      this.setRequestHandler(15, onRequest)\n    }.bind(this)\n\n    var onRequest = function (pdu, cb) {\n      setTimeout(function () {\n        this.log.debug('handling write multiple coils request.')\n\n        if (pdu.length < 3) {\n          let buf = Buffer.allocUnsafe(2)\n\n          buf.writeUInt8(0x8F, 0)\n          buf.writeUInt8(0x02, 1)\n          cb(buf)\n          return\n        }\n\n        var start = pdu.readUInt16BE(1)\n        var quantity = pdu.readUInt16BE(3)\n        var byteCount = pdu.readUInt8(5)\n\n        this.emit('preWriteMultipleCoilsRequest', start, quantity, byteCount)\n\n        var mem = this.getCoils()\n\n        // error response\n        if (start > mem.length * 8 || start + quantity > mem.length * 8) {\n          let buf = Buffer.allocUnsafe(2)\n\n          buf.writeUInt8(0x8F, 0)\n          buf.writeUInt8(0x02, 1)\n          cb(buf)\n          return\n        }\n\n        var response = Buffer.allocUnsafe(5)\n\n        response.writeUInt8(0x0F, 0)\n        response.writeUInt16BE(start, 1)\n        response.writeUInt16BE(quantity, 3)\n\n        var oldValue\n        var newValue\n        var current = pdu.readUInt8(6 + 0)\n        var j = 0\n\n        for (var i = start; i < start + quantity; i += 1) {\n          // reading old value from the coils register\n          oldValue = mem.readUInt8(Math.floor(i / 8))\n\n          // apply new value\n          if (Math.pow(2, j % 8) & current) {\n            newValue = oldValue | Math.pow(2, i % 8)\n          } else {\n            newValue = oldValue & ~Math.pow(2, i % 8)\n          }\n\n          // write to buffer\n          mem.writeUInt8(newValue, Math.floor(i / 8))\n\n          // read new value from request pdu\n          j += 1\n\n          if (j % 8 === 0 && j < quantity) {\n            current = pdu.readUInt8(6 + Math.floor(j / 8))\n          }\n        }\n\n        this.emit('postWriteMultipleCoilsRequest', start, quantity, byteCount)\n\n        cb(response)\n      }.bind(this), this.responseDelay)\n    }.bind(this)\n\n    init()\n  })\n","'use strict'\n\nvar stampit = require('stampit')\n\nmodule.exports = stampit()\n  .init(function () {\n    var init = function () {\n      this.log.debug('initiating write multiple registers request handler.')\n\n      if (!this.responseDelay) {\n        this.responseDelay = 0\n      }\n\n      this.setRequestHandler(16, onRequest)\n    }.bind(this)\n\n    var onRequest = function (pdu, cb) {\n      setTimeout(function () {\n        this.log.debug('handling write multiple registers request.')\n\n        if (pdu.length < 3) {\n          let buf = Buffer.allocUnsafe(2)\n\n          buf.writeUInt8(0x90, 0)\n          buf.writeUInt8(0x02, 1)\n          cb(buf)\n          return\n        }\n\n        var start = pdu.readUInt16BE(1)\n        var byteStart = start * 2\n        var quantity = pdu.readUInt16BE(3)\n        var byteCount = pdu.readUInt8(5)\n\n        if (quantity > 0x007b) {\n          let buf = Buffer.allocUnsafe(2)\n\n          buf.writeUInt8(0x90, 0)\n          buf.writeUInt8(0x03, 1)\n          cb(buf)\n          return\n        }\n\n        this.emit('preWriteMultipleRegistersRequest', byteStart, quantity, byteCount)\n\n        var mem = this.getHolding()\n\n        if (byteStart > mem.length || byteStart + (quantity * 2) > mem.length) {\n          var buf = Buffer.allocUnsafe(2)\n\n          buf.writeUInt8(0x90, 0)\n          buf.writeUInt8(0x02, 1)\n          cb(buf)\n          return\n        }\n\n        var response = Buffer.allocUnsafe(5)\n        response.writeUInt8(0x10, 0)\n        response.writeUInt16BE(start, 1)\n        response.writeUInt16BE(quantity, 3)\n\n        pdu.copy(mem, byteStart, 6, 6 + byteCount)\n\n        this.emit('postWriteMultipleRegistersRequest', byteStart, quantity, byteCount)\n\n        cb(response)\n      }.bind(this), this.responseDelay)\n    }.bind(this)\n\n    init()\n  })\n","'use strict'\n\nvar stampit = require('stampit')\n\nmodule.exports = stampit()\n  .init(function () {\n    var init = function () {\n      this.log.debug('initiating write single coil request handler.')\n\n      if (!this.responseDelay) {\n        this.responseDelay = 0\n      }\n\n      this.setRequestHandler(5, onRequest)\n    }.bind(this)\n\n    var onRequest = function (pdu, cb) {\n      setTimeout(function () {\n        this.log.debug('handling write single coil request.')\n\n        if (pdu.length !== 5) {\n          let buf = Buffer.allocUnsafe(2)\n\n          buf.writeUInt8(0x85, 0)\n          buf.writeUInt8(0x02, 1)\n          cb(buf)\n          return\n        }\n\n        var address = pdu.readUInt16BE(1)\n        var value = !(pdu.readUInt16BE(3) === 0x0000)\n\n        if (pdu.readUInt16BE(3) !== 0x0000 && pdu.readUInt16BE(3) !== 0xFF00) {\n          let buf = Buffer.allocUnsafe(2)\n\n          buf.writeUInt8(0x85, 0)\n          buf.writeUInt8(0x03, 1)\n          cb(buf)\n          return\n        }\n\n        this.emit('preWriteSingleCoilRequest', address, value)\n\n        var mem = this.getCoils()\n\n        if (address > mem.length * 8) {\n          var buf = Buffer.allocUnsafe(2)\n\n          buf.writeUInt8(0x85, 0)\n          buf.writeUInt8(0x02, 1)\n          cb(buf)\n          return\n        }\n\n        var response = Buffer.allocUnsafe(5)\n\n        response.writeUInt8(5, 0)\n        response.writeUInt16BE(address, 1)\n        response.writeUInt16BE(value ? 0xFF00 : 0x0000, 3)\n\n        var oldValue = mem.readUInt8(Math.floor(address / 8))\n        var newValue\n\n        if (value) {\n          newValue = oldValue | Math.pow(2, address % 8)\n        } else {\n          newValue = oldValue & ~Math.pow(2, address % 8)\n        }\n\n        mem.writeUInt8(newValue, Math.floor(address / 8))\n\n        this.emit('postWriteSingleCoilRequest', address, value)\n\n        cb(response)\n      }.bind(this), this.responseDelay)\n    }.bind(this)\n\n    init()\n  })\n","'use strict'\n\nvar stampit = require('stampit')\n\nmodule.exports = stampit()\n  .init(function () {\n    var init = function () {\n      this.log.debug('initiating write single register request handler.')\n\n      if (!this.responseDelay) {\n        this.responseDelay = 0\n      }\n\n      this.setRequestHandler(6, onRequest)\n    }.bind(this)\n\n    var onRequest = function (pdu, cb) {\n      setTimeout(function () {\n        this.log.debug('handling write single register request.')\n\n        if (pdu.length !== 5) {\n          let buf = Buffer.allocUnsafe(2)\n\n          buf.writeUInt8(0x86, 0)\n          buf.writeUInt8(0x02, 1)\n          cb(buf)\n          return\n        }\n\n        var address = pdu.readUInt16BE(1)\n        var byteAddress = address * 2\n        var value = pdu.readUInt16BE(3)\n\n        this.emit('preWriteSingleRegisterRequest', byteAddress, value)\n\n        var mem = this.getHolding()\n\n        if (byteAddress > mem.length) {\n          let buf = Buffer.allocUnsafe(2)\n\n          buf.writeUInt8(0x86, 0)\n          buf.writeUInt8(0x02, 1)\n          cb(buf)\n          return\n        }\n\n        var response = Buffer.allocUnsafe(5)\n\n        response.writeUInt8(0x06)\n        response.writeUInt16BE(address, 1)\n        response.writeUInt16BE(value, 3)\n\n        mem.writeUInt16BE(value, byteAddress)\n\n        this.emit('postWriteSingleRegisterRequest', byteAddress, value)\n\n        cb(response)\n      }.bind(this), this.responseDelay)\n    }.bind(this)\n\n    init()\n  })\n","module.exports = require(\"child_process\");","var config = require('config');\r\nconst bcrypt = require('bcrypt');\r\nconst si = require('systeminformation');\r\nconst port = config.Port;\r\nvar app = require('./app');\r\nvar server = require(\"http\").Server(app);\r\n// var server = requibre(\"http\").Server();\r\nvar io = require(\"socket.io\")(server);\r\nserver.listen(process.env.PORT || port, '');\r\nvar Variables = require('./Variable.js');\r\nvar SubFunction = require('./SubFunction.js');\r\nvar OldWrite=-1;\r\nsi.system()\r\n  .then(data => {\r\n    bcrypt.compare(data.uuid + '1101111010', config.license, function (error, res) {\r\n      if (res === true) {\r\n        console.log('Check LICENSE OK')\r\n      }\r\n      if (res === false) {\r\n        console.log('Check LICENSE NG')\r\n        SubFunction.saveFeedbackFile('./Store/LicenseFeedback.json', data.uuid);\r\n        setTimeout(ExitProcess, 3000);\r\n      }\r\n      if (error) {\r\n        console.error(error)\r\n        SubFunction.saveFeedbackFile('./Store/LicenseFeedback.json', error);\r\n        setTimeout(ExitProcess, 3000);\r\n      }\r\n    })\r\n  })\r\n  .catch(error => {\r\n    console.error(error)\r\n    SubFunction.saveJsonFile('./Store/LicenseFeedback.json', error);\r\n    setTimeout(ExitProcess, 3000);\r\n  });\r\nprocess.on('uncaughtException', function (err) {\r\n  console.log('Caught exception: ', err);\r\n});\r\nfunction getDateTime() {\r\n\r\n  var date = new Date();\r\n\r\n  var hour = date.getHours();\r\n  hour = (hour < 10 ? \"0\" : \"\") + hour;\r\n\r\n  var min = date.getMinutes();\r\n  min = (min < 10 ? \"0\" : \"\") + min;\r\n\r\n  var sec = date.getSeconds();\r\n  sec = (sec < 10 ? \"0\" : \"\") + sec;\r\n\r\n  return hour + \":\" + min + \":\" + sec;\r\n\r\n}\r\nvar sendTime = setInterval(function () {\r\n  Variables.TextField[0] = getDateTime();\r\n}, 1000);\r\n//Omron\r\n{\r\n  if (config.PLC_Omron) {\r\n    var fins = require('./libFins/index');\r\n    var client = fins.FinsClient(9600, config.PLC_Omron_IP);\r\n    client.on('open', function () {\r\n      console.log(\"Ket noi den PLC\");\r\n      Variables.TextField[1] = \"Opening Connect to PLC\";\r\n      StatusConnectPLC = 1;\r\n    });\r\n    client.on('error', function (error) {\r\n      StatusConnectPLC = 0;\r\n      Variables.TextField[1] = \"Error\";\r\n      console.log(\"Error: \", error);\r\n    });\r\n    client.on('close', function (close) {\r\n      StatusConnectPLC = 0;\r\n      Variables.TextField[1] = \"Close\";\r\n      console.log(\"clossing\");\r\n    })\r\n    client.on('reply', function (msg) {\r\n      StatusConnectPLC = 1;\r\n      Variables.TextField[1] = \"Connected\";\r\n      if (msg.command == '0101') {\r\n        Variables.Element=SubFunction.ReadWordOfPLC(config.PLC_Omron_WordStartElement, config.PLC_Omron_LengthOfWordElement, msg.values);\r\n        Variables.BitAdjust = SubFunction.ReadBitOfPLC(config.PLC_Omron_WordStartBitAdjust, config.PLC_Omron_LengthOfWordBitAdjust, msg.values);\r\n        Variables.BitDisplay = SubFunction.ReadBitOfPLC(config.PLC_Omron_WordStartBitDisplay, config.PLC_Omron_LengthOfWordBitDisplay, msg.values);\r\n        Variables.WordDisplay = SubFunction.ReadWordOfPLC(config.PLC_Omron_WordStartWordDisplay, config.PLC_Omron_LengthOfWordWordDisplay, msg.values);\r\n        Variables.WordAdjust = SubFunction.ReadWordOfPLC(config.PLC_Omron_WordStartWordAdjust, config.PLC_Omron_LengthOfWordWordAdjust, msg.values);\r\n        Variables.DWordDisplay = SubFunction.ReadDWordOfPLC(config.PLC_Omron_WordStartDWordDisplay, Variables.PLC_Omron_LengthOfWordDWordDisplay, msg.values);\r\n        Variables.DWordAdjust = SubFunction.ReadDWordOfPLC(config.PLC_Omron_WordStartDWordAdjust, config.PLC_Omron_LengthOfWordDWordAdjust, msg.values);\r\n\r\n        // Variables.WritePosCobot=SubFunction.ReadWordOfPLC(820,10,msg.values);\r\n        // console.log(Variables.WritePosCobot)\r\n        // Variables.Command = SubFunction.ReadWordOfPlcToByte(Variables.Command_Start, Variables.Command_Length, msg.values)\r\n        // Variables.Message = SubFunction.ReadWordOfPlcToByte(Variables.Message_Start, Variables.Message_Length, msg.values)\r\n        if (config.PLC_Omron_Debug) { console.log(msg.values) }\r\n      }\r\n    });\r\n    var myInt = setInterval(function () {\r\n      client.read('D0', config.PLC_Omron_Size_D0, function (err, bytes) {\r\n      });\r\n    }, 200);\r\n    var SocketIO_Web = require('./SocketIO_Omron')(io, client)\r\n  }\r\n}\r\n//Schneider\r\n{\r\n  if (config.PLC_Schneider) {\r\n    const modbus = require('./libModbus/jsmodbus')\r\n    var clientMB = modbus.client.tcp.complete({\r\n      // 'host':'127.0.0.1',\r\n      'host': config.PLC_Schneider_IP,\r\n      'port': 502,\r\n      'autoReconnect': true,\r\n      'reconnectTimeout': 2000,\r\n      'timeout': 5000,\r\n      'unitId': 0\r\n    });\r\n\r\n    clientMB.connect();\r\n    clientMB.on('connect', function () {\r\n      console.log(\"Da connect to Schneider\");\r\n      Variables.StatusModbus = true;\r\n      StatusConnectPLC = 1;\r\n      var ModbusCobot = require('./Modbus_Cobot')(clientMB, io)\r\n      setInterval(function () {\r\n        try {\r\n          clientMB.readHoldingRegisters(0, 10).then(function (resp) {\r\n            Variables.StatusCobot = resp.register\r\n            console.log(resp.register)\r\n            if (Variables.StatusCobot[0] === 2) {\r\n              let arr = [0]\r\n              clientMB.writeMultipleRegisters(9001, arr)\r\n                .then(function (resp) {\r\n                  console.log(resp);\r\n                }, console.error);\r\n              var str = '2Patrolonce Route2';\r\n              // var arrOut = SubFunction.StringToAscii(str)\r\n              // client.write('D520', arrOut);\r\n            }\r\n          }).catch(function (err) {\r\n            console.log(err)\r\n          }).done()\r\n        }\r\n        catch (err) { console.log(err); StatusConnectPLC = 0; }\r\n      }, 1000)\r\n    })\r\n    clientMB.on('error', function (err) {\r\n      StatusConnectPLC = 0;\r\n      console.log(\"Error::\" + StatusConnectPLC + err);\r\n      Variables.StatusModbus = false;\r\n    })\r\n  }\r\n}\r\n//Cobot\r\n{\r\n  // if (config.Cobot) {\r\n  //   var InitialSet = false;\r\n  //   var oldX, oldY, oldZ, oldYaw, oldPitch, oldRoll, X, Y, Z, Yaw, Pitch, Roll;\r\n  //   var modelPosCobot = require('./models/model_posCobot');\r\n  //   const modbus = require('jsmodbus')\r\n  //   var clientMB = modbus.client.tcp.complete({\r\n  //     // 'host':'127.0.0.1',\r\n  //     'host': config.Cobot_IP,\r\n  //     'port': 502,\r\n  //     'autoReconnect': true,\r\n  //     'reconnectTimeout': 1000,\r\n  //     'timeout': 5000,\r\n  //     'unitId': 0\r\n  //   });\r\n  //   console.log('prepare connect cobot')\r\n  //   clientMB.connect();\r\n  //   clientMB.on('connect', function () {\r\n  //     console.log(\"Da connect to Cobot___________\");\r\n  //     Variables.StatusModbus = true;\r\n  //     StatusConnectPLC = 1;\r\n  //     // var ModbusCobot = require('./Modbus_Cobot')(clientMB, io)\r\n  //     if (config.Cobot_Write) {\r\n  //       setInterval(function () {\r\n  //         try {\r\n  //           console.log('read mb')\r\n  //           clientMB.readInputRegisters(7025, 12).then(function (resp) {\r\n  //             X = parseInt(SubFunction.convertPosCobot(resp.register[0], resp.register[1]));\r\n  //             Y = parseInt(SubFunction.convertPosCobot(resp.register[2], resp.register[3]));\r\n  //             Z = parseInt(SubFunction.convertPosCobot(resp.register[4], resp.register[5]));\r\n  //             Yaw = parseInt(SubFunction.convertPosCobot(resp.register[6], resp.register[7]));\r\n  //             Pitch = parseInt(SubFunction.convertPosCobot(resp.register[8], resp.register[9]));\r\n  //             Roll = parseInt(SubFunction.convertPosCobot(resp.register[10], resp.register[11]));\r\n  //             if (!InitialSet) {\r\n  //               InitialSet = true;\r\n  //               oldX = X;\r\n  //               oldY = Y\r\n  //               oldZ = Z\r\n  //               oldYaw = Yaw\r\n  //               oldPitch = Pitch\r\n  //               oldRoll = Roll\r\n  //             }\r\n  //             if (X !== oldX || Y !== oldY || Z !== oldZ || Yaw !== oldYaw || Pitch !== oldPitch || Roll !== oldRoll) {\r\n  //               oldX = X;\r\n  //               oldY = Y\r\n  //               oldZ = Z\r\n  //               oldYaw = Yaw\r\n  //               oldPitch = Pitch\r\n  //               oldRoll = Roll\r\n  //               const newPosCobot = new modelPosCobot({\r\n  //                 parent: 'Cobot',\r\n  //                 type: 'test',\r\n  //                 x: X,\r\n  //                 y: Y,\r\n  //                 z: Z,\r\n  //                 yaw: Yaw,\r\n  //                 pitch: Pitch,\r\n  //                 roll: Roll,\r\n  //                 time:new Date().toISOString()\r\n  //               });\r\n  //               newPosCobot.save((err) => {\r\n  //                 if (err) {\r\n  //                   console.log(\"insert db error\", err);\r\n  //                 } else {\r\n  //                   console.log(\"insert db ok\");\r\n  //                 }\r\n  //               });\r\n  //             }\r\n  //           }).catch(function (err) {\r\n  //             console.log(err)\r\n  //           }).done()\r\n  //         }\r\n  //         catch (err) { console.log(err); StatusConnectPLC = 0; }\r\n  //       }, 50)\r\n  //     }\r\n  //     if (config.Cobot_Read) {\r\n  //       setInterval(function () {\r\n  //         try {\r\n  //           if (Variables.resultPosCobot.length > 0) {\r\n  //             try {\r\n  //               let arrWrite = [];\r\n  //               let indexBit=0;\r\n  //               clientMB\r\n  //                 .readHoldingRegisters(9000, 10)\r\n  //                 .then(function (resp) {\r\n  //                   if (resp.register[0] < Variables.resultPosCobot.length && OldWrite!==resp.register[0]) {\r\n  //                     OldWrite=resp.register[0];\r\n  //                     console.log(Variables.resultPosCobot[0])\r\n  //                     console.log(Variables.resultPosCobot[1])\r\n  //                     indexBit=0;\r\n  //                     arrWrite[0] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].x);\r\n  //                     arrWrite[1] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].y);\r\n  //                     arrWrite[2] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].z);\r\n  //                     arrWrite[3] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].yaw);\r\n  //                     arrWrite[4] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].pitch);\r\n  //                     arrWrite[5] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].roll);\r\n\r\n  //                     indexBit=1;\r\n  //                     arrWrite[6] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].x);\r\n  //                     arrWrite[7] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].y);\r\n  //                     arrWrite[8] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].z);\r\n  //                     arrWrite[9] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].yaw);\r\n  //                     arrWrite[10] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].pitch);\r\n  //                     arrWrite[11] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].roll);\r\n\r\n  //                     indexBit=2;\r\n  //                     arrWrite[12] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].x);\r\n  //                     arrWrite[13] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].y);\r\n  //                     arrWrite[14] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].z);\r\n  //                     arrWrite[15] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].yaw);\r\n  //                     arrWrite[16] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].pitch);\r\n  //                     arrWrite[17] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].roll);\r\n                      \r\n  //                     indexBit=3;\r\n  //                     arrWrite[18] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].x);\r\n  //                     arrWrite[19] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].y);\r\n  //                     arrWrite[20] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].z);\r\n  //                     arrWrite[21] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].yaw);\r\n  //                     arrWrite[22] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].pitch);\r\n  //                     arrWrite[23] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].roll);\r\n                      \r\n  //                     indexBit=4;\r\n  //                     arrWrite[24] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].x);\r\n  //                     arrWrite[25] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].y);\r\n  //                     arrWrite[26] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].z);\r\n  //                     arrWrite[27] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].yaw);\r\n  //                     arrWrite[28] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].pitch);\r\n  //                     arrWrite[29] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].roll);\r\n                      \r\n  //                     indexBit=5;\r\n  //                     arrWrite[30] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].x);\r\n  //                     arrWrite[31] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].y);\r\n  //                     arrWrite[32] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].z);\r\n  //                     arrWrite[33] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].yaw);\r\n  //                     arrWrite[34] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].pitch);\r\n  //                     arrWrite[35] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].roll);\r\n                      \r\n  //                     indexBit=6;\r\n  //                     arrWrite[36] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].x);\r\n  //                     arrWrite[37] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].y);\r\n  //                     arrWrite[38] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].z);\r\n  //                     arrWrite[39] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].yaw);\r\n  //                     arrWrite[40] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].pitch);\r\n  //                     arrWrite[41] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].roll);\r\n                      \r\n  //                     indexBit=7;\r\n  //                     arrWrite[42] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].x);\r\n  //                     arrWrite[43] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].y);\r\n  //                     arrWrite[44] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].z);\r\n  //                     arrWrite[45] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].yaw);\r\n  //                     arrWrite[46] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].pitch);\r\n  //                     arrWrite[47] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].roll);\r\n                      \r\n  //                     indexBit=8;\r\n  //                     arrWrite[48] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].x);\r\n  //                     arrWrite[49] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].y);\r\n  //                     arrWrite[50] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].z);\r\n  //                     arrWrite[51] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].yaw);\r\n  //                     arrWrite[52] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].pitch);\r\n  //                     arrWrite[53] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].roll);\r\n                      \r\n  //                     indexBit=9;\r\n  //                     arrWrite[54] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].x);\r\n  //                     arrWrite[55] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].y);\r\n  //                     arrWrite[56] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].z);\r\n  //                     arrWrite[57] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].yaw);\r\n  //                     arrWrite[58] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].pitch);\r\n  //                     arrWrite[59] = SubFunction.CheckNegativeNumber(Variables.resultPosCobot[SubFunction.getIndexCobotWriteMB(indexBit, resp.register[0]) * 10 + indexBit].roll);\r\n\r\n\r\n  //                     console.log(arrWrite)\r\n  //                     clientMB.writeMultipleRegisters(9005, arrWrite)\r\n  //                       .then(function (resp) {\r\n  //                         console.log(resp);\r\n  //                       }, console.error);\r\n  //                   }\r\n  //                 })\r\n  //                 .catch(function () {\r\n  //                   console.error(\r\n  //                     require(\"util\").inspect(arguments, {\r\n  //                       depth: null\r\n  //                     })\r\n  //                   );\r\n  //                 });\r\n  //             }\r\n  //             catch (err) { console.log(err); StatusConnectPLC = 0; }\r\n  //           }\r\n\r\n  //         }\r\n  //         catch (err) { console.log(err); StatusConnectPLC = 0; }\r\n  //       }, 10)\r\n  //     }\r\n  //     clientMB.on('error', function (err) {\r\n  //       StatusConnectPLC = 0;\r\n  //       console.log(\"Error::\" + StatusConnectPLC + err);\r\n  //       Variables.StatusModbus = false;\r\n  //     })\r\n  //   })\r\n  // }\r\n}\r\n//Mobile\r\n{\r\n  if (config.MobileRobot) {\r\n    var net = require('net');\r\n    var clientMobile = new net.Socket();\r\n    Variables.BitAdjust = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];//20\r\n    Variables.BitDisplay = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];//20\r\n    Variables.WordAdjust = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];//20\r\n    Variables.WordDisplay = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];//20\r\n    Variables.DWordAdjust = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];//20\r\n    Variables.DWordDisplay = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];//20\r\n    Variables.TextField = [\"\", \"\"];\r\n    var ArrayTextStore = [\"\", \"\", \"\", \"\", \"\"]\r\n    ConnectMobile = () => {\r\n      try {\r\n        console.log('Prepare Connect Mobile')\r\n        Variables.TextField[1] = \"Prepare Connect Mobile\"\r\n        // clientMobile.removeAllListeners()\r\n        clientMobile.connect(config.MobileRobot_Port, config.MobileRobot_IP, function () {\r\n          console.log('Connected');\r\n          Variables.TextField[1] = \"Connected\"\r\n          Variables.BitDisplay[0] = 1;\r\n        });\r\n      }\r\n      catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n    ReconnectMobile = () => {\r\n      Variables.BitDisplay[0] = 0;\r\n      Variables.TextField[1] = \"Reconnect to Mobile\"\r\n      setTimeout(() => {\r\n        // clientMobile.removeAllListeners()\r\n        ConnectMobile()\r\n      }, 5000)\r\n    }\r\n    ConnectMobile();\r\n\r\n    clientMobile.on('error', function () {\r\n      console.log('ERROR')\r\n      Variables.TextField[1] = \"Error\"\r\n      Variables.BitDisplay[0] = 0;\r\n    })\r\n    clientMobile.on('close', function (e) {\r\n      console.log('CLOSE')\r\n      Variables.TextField[1] = \"Close\"\r\n      ReconnectMobile()\r\n      Variables.BitDisplay[0] = 0;\r\n    });\r\n\r\n    clientMobile.on('data', function (data) {\r\n      var temp = data + '';\r\n      ArrayTextStore[4] = ArrayTextStore[3];\r\n      ArrayTextStore[3] = ArrayTextStore[2];\r\n      ArrayTextStore[2] = ArrayTextStore[1];\r\n      ArrayTextStore[1] = ArrayTextStore[0];\r\n      ArrayTextStore[0] = temp;\r\n      console.log(temp);\r\n      Variables.TextField[1] = ArrayTextStore[4] + \"\\r\\n\" + ArrayTextStore[3] + \"\\r\\n\" + ArrayTextStore[2] + \"\\r\\n\" + ArrayTextStore[1] + \"\\r\\n\" + ArrayTextStore[0]\r\n      io.sockets.emit('StatusMobile', temp);\r\n      if (data == 'Enter password:\\r\\n') {\r\n        console.log(\"send password\");\r\n        clientMobile.write('omron\\r\\n');\r\n      }\r\n      // if (data == 'Finish\\r\\n') {\r\n      //   console.log(\"send password\");\r\n      //   let arr = [1]\r\n      //   clientMB.writeMultipleRegisters(9001, arr)\r\n      //     .then(function (resp) {\r\n      //       console.log(resp);\r\n      //     }, console.error);\r\n      // }\r\n    });\r\n    var SocketIO_Web = require('./SocketIO_MobileRobot')(io, clientMobile)\r\n  }\r\n}\r\n\r\n//Mitsubishi\r\n{\r\n  if (config.PLC_Mitsubishi) {\r\n    var mc = require('./libMcprotocal/mcprotocol/mcprotocol');\r\n    var conn = new mc;\r\n    var setVariables = {\r\n      DataRegister: 'D0,' + config.PLC_Mitsubishi_Size_D0, \t// 5 words starting at D0\r\n      ComPC: config.PLC_Mitsubishi_ComPC + ',10'\r\n      // TEST2: 'M6990,28', \t\t\t// 28 bits at M6990\r\n      // TEST3: 'CN199,2',\t\t\t// ILLEGAL as CN199 is 16-bit, CN200 is 32-bit, must request separately\r\n      // TEST4: 'R2000,2',\t\t\t// 2 words at R2000\r\n      // TEST5: 'X034',\t\t\t\t// Simple input\r\n      // TEST6: 'D6000.1,20',\t\t\t// 20 bits starting at D6000.1\r\n      // TEST7: 'D6001.2',\t\t\t\t// Single bit at D6001\r\n      // TEST8: 'S4,2',\t\t\t\t// 2 bits at S4\r\n      // TEST9: 'RFLOAT5000,40'\t\t// 40 floating point numbers at R5000\t\r\n    };\t\t\t\t\t\t\t\t\t\t// See setTranslationCB below for more examples\r\n    conn.initiateConnection({ port: 5050, host: config.PLC_Mitsubishi_IP, ascii: false }, connected);\r\n    function connected(err) {\r\n      if (typeof (err) !== \"undefined\") {\r\n        // We have an error.  Maybe the PLC is not reachable. \r\n        Variables.TextField[1] = err\r\n        console.log(err);\r\n        // process.exit();\r\n      }\r\n      Variables.TextField[1] = 'Connected'\r\n      console.log('Connected PLC Mitsubishi success')\r\n      conn.setTranslationCB(function (tag) { return setVariables[tag]; }); \t// This sets the \"translation\" to allow us to work with object names defined in our app not in the module\r\n      // conn.addItems(['TEST1', 'TEST4']);\t\r\n      conn.addItems('DataRegister');\r\n      //\tconn.removeItems(['TEST2', 'TEST3']);  // We could do this.  \r\n      //\tconn.writeItems(['TEST5', 'TEST7'], [ true, true ], valuesWritten);  \t// You can write an array of items as well.  \r\n      // conn.writeItems('TEST4', [ 666, 777 ], valuesWritten);  \t\t\t\t// You can write a single array item too.  \r\n\r\n      var myInt = setInterval(function () {\r\n        conn.readAllItems(valuesReady);\r\n      }, 500);\r\n    }\r\n    function valuesReady(anythingBad, values) {\r\n      if (anythingBad) {\r\n        console.log(\"SOMETHING WENT WRONG READING VALUES!!!!\");\r\n        Variables.TextField[1] = \"SOMETHING WENT WRONG READING VALUES!!!!\"\r\n      }\r\n      if (values) {\r\n        if (values.DataRegister[0] === 'BAD 255') {\r\n          Variables.TextField[1] = 'Disconnect PLC'\r\n        } else {\r\n          Variables.TextField[1] = 'Connected PLC'\r\n        }\r\n        Variables.ElementMitsubishi = SubFunction.ReadWordOfPLC(config.PLC_Mitsubishi_WordStartElement, config.PLC_Mitsubishi_LengthOfWordElement, values.DataRegister);\r\n        Variables.BitAdjustMitsubishi = SubFunction.ReadBitOfPLC(config.PLC_Mitsubishi_WordStartBitAdjust, config.PLC_Mitsubishi_LengthOfWordBitAdjust, values.DataRegister);\r\n        Variables.BitDisplayMitsubishi = SubFunction.ReadBitOfPLC(config.PLC_Mitsubishi_WordStartBitDisplay, config.PLC_Mitsubishi_LengthOfWordBitDisplay, values.DataRegister);\r\n        Variables.WordDisplayMitsubishi = SubFunction.ReadWordOfPLC(config.PLC_Mitsubishi_WordStartWordDisplay, config.PLC_Mitsubishi_LengthOfWordWordDisplay, values.DataRegister);\r\n        Variables.WordAdjustMitsubishi = SubFunction.ReadWordOfPLC(config.PLC_Mitsubishi_WordStartWordAdjust, config.PLC_Mitsubishi_LengthOfWordWordAdjust, values.DataRegister);\r\n        Variables.DWordDisplayMitsubishi = SubFunction.ReadDWordOfPLC(config.PLC_Mitsubishi_WordStartDWordDisplay, Variables.PLC_Mitsubishi_LengthOfWordDWordDisplay, values.DataRegister);\r\n        Variables.DWordAdjustMitsubishi = SubFunction.ReadDWordOfPLC(config.PLC_Mitsubishi_WordStartDWordAdjust, config.PLC_Mitsubishi_LengthOfWordDWordAdjust, values.DataRegister);\r\n\r\n        Variables.Element = Variables.ElementMitsubishi;\r\n        Variables.BitAdjust = Variables.BitAdjustMitsubishi;\r\n        Variables.BitDisplay = Variables.BitDisplayMitsubishi;\r\n        Variables.WordAdjust = Variables.WordAdjustMitsubishi;\r\n        Variables.WordDisplay = Variables.WordDisplayMitsubishi;\r\n        Variables.DWordAdjust = Variables.DWordAdjustMitsubishi;\r\n        Variables.DWordDisplay = Variables.DWordDisplayMitsubishi;\r\n      }\r\n    }\r\n    function valuesWritten(anythingBad) {\r\n      if (anythingBad) {\r\n        console.log(\"SOMETHING WENT WRONG WRITING VALUES!!!!\");\r\n        Variables.TextField[1] = \"SOMETHING WENT WRONG WRITING VALUES!!!!\"\r\n      }\r\n      console.log(\"Done writing.\");\r\n      doneWriting = true;\r\n      // if (doneReading) { process.exit(); }\r\n    }\r\n    var SocketIO_Web = require('./SocketIO_Mitsubishi')(io, conn)\r\n  }\r\n}\r\n//Call Value---------------------------------------------------------------------------------------------------------------------------\r\n// Variables.ChoiseCobot=true;\r\n//var SocketIO_Point = require('./SocketIO_Point')(io, clientMB)\r\n//var modelPoint = require('./models/model_point');\r\n// var ModbusCobot = require('./Modbus_Cobot')(clientMB, io)\r\nvar Mongodb = require('./Mongodb')(io)\r\n\r\nsetInterval(function () {\r\n  if (JSON.stringify(Variables.Element) !== JSON.stringify(Variables.OldElement)) {\r\n    Variables.OldElement = Variables.Element.slice();\r\n    Variables.haveChangeElement = true;\r\n  }\r\n  if (JSON.stringify(Variables.BitAdjust) !== JSON.stringify(Variables.OldBitAdjust)) {\r\n    Variables.OldBitAdjust = Variables.BitAdjust.slice();\r\n    Variables.haveChangeBitAdjust = true;\r\n  }\r\n  if (JSON.stringify(Variables.BitDisplay) !== JSON.stringify(Variables.OldBitDisplay)) {\r\n    Variables.OldBitDisplay = Variables.BitDisplay.slice();\r\n    Variables.haveChangeBitDisplay = true;\r\n  }\r\n  if (JSON.stringify(Variables.WordAdjust) !== JSON.stringify(Variables.OldWordAdjust)) {\r\n    Variables.OldWordAdjust = Variables.WordAdjust.slice();\r\n    Variables.haveChangeWordAdjust = true;\r\n  }\r\n  if (JSON.stringify(Variables.WordDisplay) !== JSON.stringify(Variables.OldWordDisplay)) {\r\n    Variables.OldWordDisplay = Variables.WordDisplay.slice();\r\n    Variables.haveChangeWordDisplay = true;\r\n  }\r\n  if (JSON.stringify(Variables.DWordAdjust) !== JSON.stringify(Variables.OldDWordAdjust)) {\r\n    Variables.OldDWordAdjust = Variables.DWordAdjust.slice();\r\n    Variables.haveChangeDWordAdjust = true;\r\n  }\r\n  if (JSON.stringify(Variables.DWordDisplay) !== JSON.stringify(Variables.OldDWordDisplay)) {\r\n    Variables.OldDWordDisplay = Variables.DWordDisplay.slice();\r\n    Variables.haveChangeDWordDisplay = true;\r\n  }\r\n  if (JSON.stringify(Variables.TextField) !== JSON.stringify(Variables.OldTextField)) {\r\n    Variables.OldTextField = Variables.TextField.slice();\r\n    Variables.haveChangeTextField = true;\r\n  }\r\n}, 200);\r\n\r\nfunction ExitProcess() {\r\n  process.exit(1);\r\n}\r\n\r\n//Timer Game\r\n// setInterval(function () {\r\n//   if (Variables.counter > 0) {\r\n//     Variables.counter = Variables.counter - 1;\r\n//   }\r\n// }, 1000);","module.exports = require(\"bcrypt\");","module.exports = require(\"systeminformation\");","var config = require('config');\r\n//mongoose\r\nvar mongoose = require('mongoose');\r\n//Use native Promises\r\nmongoose.Promise = global.Promise;\r\nmongoose.connection.on('connected', function () {\r\n  console.log('MongoDB event connected');\r\n});\r\n\r\nmongoose.connection.on('disconnected', function () {\r\n  console.log('MongoDB event disconnected');\r\n});\r\n\r\nmongoose.connection.on('reconnected', function () {\r\n  console.log('MongoDB event reconnected');\r\n});\r\n\r\nmongoose.connection.on('error', function (err) {\r\n  console.log('MongoDB event error: ' + err);\r\n  process.exit(1);\r\n});\r\n\r\n// mongoose.connect('mongodb://admin:admin123@ds249992.mlab.com:49992/scada').then(\r\nif (config.Cobot) {\r\n  mongoose.connect('mongodb://localhost:27017/Cobot').then(\r\n    () => {\r\n      console.log(\"connect DB successfully Cobot\");\r\n    },\r\n    err => {\r\n      console.log(\"Connection failed. Error: \" + (err));\r\n      process.exit(1);\r\n    }\r\n  );\r\n}\r\nelse\r\n  {\r\n    mongoose.connect('mongodb://localhost:27017').then(\r\n      () => {\r\n        console.log(\"connect DB successfully\");\r\n      },\r\n      err => {\r\n        console.log(\"Connection failed. Error: \" + (err));\r\n        process.exit(1);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\nvar createError = require('http-errors');\r\nvar express = require('express');\r\nvar path = require('path');\r\nvar cookieParser = require('cookie-parser');\r\nvar logger = require('morgan');\r\nvar cors = require('cors')\r\n\r\n// var indexRouter = require('./routes/index');\r\nvar pointRouter = require('./routes/routes_Point');\r\nvar pointPickPlaceRouter = require('./routes/routes_Point_PickPlace');\r\nvar elementRouter = require('./routes/routes_Element');\r\nvar labelRouter = require('./routes/routes_Label');\r\nvar lineRouter = require('./routes/routes_Line');\r\nvar wordDisplayRouter = require('./routes/routes_WordDisplay');\r\nvar wordAdjustRouter = require('./routes/routes_WordAdjust');\r\nvar dwordDisplayRouter = require('./routes/routes_DWordDisplay');\r\nvar dwordAdjustRouter = require('./routes/routes_DWordAdjust');\r\nvar bitDisplayRouter = require('./routes/routes_BitDisplay');\r\nvar bitAdjustRouter = require('./routes/routes_BitAdjust');\r\nvar panelRouter = require('./routes/routes_Panel');\r\nvar textFieldRouter = require('./routes/routes_TextField');\r\nvar textFieldInputRouter = require('./routes/routes_TextFieldInput');\r\nvar bitDisplayImageLibraryRoute = require('./routes/routes_BitDisplay_Image_Library');\r\nvar elementImageLibraryRoute = require('./routes/routes_Element_Image_Library');\r\nconst bodyParser = require('body-parser');\r\n//\r\nvar app = express();\r\napp.use(bodyParser.json({ limit: '5mb' }));\r\napp.use(bodyParser.urlencoded({ limit: '5mb', extended: true, parameterLimit: 5000 }));\r\n// view engine setup\r\napp.use(cors());\r\napp.use(logger('dev'));\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: false }));\r\napp.use(cookieParser());\r\napp.use(express.static(path.join(__dirname, 'public')));\r\n// app.use(bodyParser.json());\r\n\r\napp.use(function (req, res, next) {\r\n  res.header(\"Access-Control-Allow-Origin\", \"*\");\r\n  res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\r\n  next();\r\n});\r\napp.use('/uploadImage',bitDisplayImageLibraryRoute);\r\napp.use('/elementLibrary',elementImageLibraryRoute);\r\napp.use('/point', pointRouter);\r\napp.use('/pointPickPlace', pointPickPlaceRouter);\r\napp.use('/element', elementRouter);\r\napp.use('/label', labelRouter);\r\napp.use('/line', lineRouter);\r\napp.use('/wordDisplay', wordDisplayRouter);\r\napp.use('/wordAdjust', wordAdjustRouter);\r\napp.use('/dwordDisplay', dwordDisplayRouter);\r\napp.use('/dwordAdjust', dwordAdjustRouter);\r\napp.use('/bitDisplay', bitDisplayRouter);\r\napp.use('/bitAdjust', bitAdjustRouter);\r\napp.use('/panel', panelRouter)\r\napp.use('/textField', textFieldRouter)\r\napp.use('/textFieldInput', textFieldInputRouter)\r\n\r\n// catch 404 and forward to error handler\r\napp.use(function (req, res, next) {\r\n  next(createError(404));\r\n});\r\n\r\n// error handler\r\napp.use(function (err, req, res, next) {\r\n  // set locals, only providing error in development\r\n  res.locals.message = err.message;\r\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\r\n\r\n  // render the error page\r\n  res.status(err.status || 500);\r\n  res.render('error');\r\n});\r\n\r\nmodule.exports = app;\r\n\r\n","module.exports = require(\"http-errors\");","module.exports = require(\"cookie-parser\");","module.exports = require(\"morgan\");","module.exports = require(\"cors\");","var express = require('express');\r\nvar router = express.Router();\r\nvar modelPoint = require('../models/model_point');\r\nvar mongoose = require('mongoose');\r\nvar Variables = require('../Variable.js');\r\n\r\nrouter.get('/getdata', (req, res) => {\r\n    console.log('have get request');\r\n    Variables.refreshDataPoint = true;\r\n    res.send(Variables.resultpoint)\r\n})\r\nrouter.post('/insert_point', (request, response, next) => {\r\n    const newPoint = new modelPoint({\r\n        type: parseInt(Variables.TypeCobot),\r\n        number: parseInt(request.body.number),\r\n        offsetInX: parseInt(request.body.offsetInX),\r\n        offsetInY: parseInt(request.body.offsetInY),\r\n        offsetInZ: parseInt(request.body.offsetInZ),\r\n        offsetInR: parseInt(request.body.offsetInR),\r\n        offsetInAddX: parseInt(request.body.offsetInAddX),\r\n        offsetInAddY: parseInt(request.body.offsetInAddY),\r\n        PlaceX: parseInt(request.body.PlaceX),\r\n        PlaceY: parseInt(request.body.PlaceY),\r\n    });\r\n    newPoint.save((err) => {\r\n        if (err) {\r\n            response.json({\r\n                result: \"error\",\r\n                data: {},\r\n                message: `Error is: ${err}`\r\n            });\r\n            console.log(\"insert db error\", err);\r\n        } else {\r\n            response.json({\r\n                result: \"success\",\r\n                data: {\r\n                    type: parseInt(Variables.TypeCobot),\r\n                    number: parseInt(request.body.number),\r\n                    offsetInX: parseInt(request.body.offsetInX),\r\n                    offsetInY: parseInt(request.body.offsetInY),\r\n                    offsetInZ: parseInt(request.body.offsetInZ),\r\n                    offsetInR: parseInt(request.body.offsetInR),\r\n                    offsetInAddX: parseInt(request.body.offsetInAddX),\r\n                    offsetInAddY: parseInt(request.body.offsetInAddY),\r\n                    PlaceX: parseInt(request.body.PlaceX),\r\n                    PlaceY: parseInt(request.body.PlaceY),\r\n                },\r\n                message: 'Add data success'\r\n            });\r\n            Variables.refreshDataPoint = true;\r\n            console.log(\"insert db ok\");\r\n        }\r\n    });\r\n});\r\nrouter.put('/update_point', (request, response, next) => {\r\n    console.log(request.body);\r\n    let conditions = {};\r\n    if (mongoose.Types.ObjectId.isValid(request.body._id) == true) {\r\n        conditions._id = mongoose.Types.ObjectId(request.body._id);\r\n        let newValue = {};\r\n        if (typeof (Variables.TypeCobot) !== 'undefined') { newValue.type = Variables.TypeCobot; }\r\n        if (typeof (request.body.number) !== 'undefined') { newValue.number = request.body.number; }\r\n        if (typeof (request.body.offsetInX) !== 'undefined') { newValue.offsetInX = request.body.offsetInX; }\r\n        if (typeof (request.body.offsetInY) !== 'undefined') { newValue.offsetInY = request.body.offsetInY; }\r\n        if (typeof (request.body.offsetInZ) !== 'undefined') { newValue.offsetInZ = request.body.offsetInZ; }\r\n        if (typeof (request.body.offsetInR) !== 'undefined') { newValue.offsetInR = request.body.offsetInR; }\r\n        if (typeof (request.body.offsetInAddX) !== 'undefined') { newValue.offsetInAddX = request.body.offsetInAddX; }\r\n        if (typeof (request.body.offsetInAddY) !== 'undefined') { newValue.offsetInAddY = request.body.offsetInAddY; }\r\n        if (typeof (request.body.PlaceX) !== 'undefined') { newValue.PlaceX = request.body.PlaceX; }\r\n        if (typeof (request.body.PlaceY) !== 'undefined') { newValue.PlaceY = request.body.PlaceY; }\r\n        const options = {\r\n            new: true,\r\n        }\r\n        modelPoint.findOneAndUpdate(conditions, { $set: newValue }, options, (err, updateData) => {\r\n            if (err) {\r\n                response.json({\r\n                    result: \"error\",\r\n                    data: {},\r\n                    message: `Cannot update. Error is: ${err}`\r\n                });\r\n                Variables.refreshDataPoint = true;\r\n            } else {\r\n                response.json({\r\n                    result: \"success\",\r\n                    data: updateData,\r\n                    message: \"Update successfully\"\r\n                });\r\n                Variables.refreshDataPoint = true;\r\n            }\r\n        });\r\n    } else {\r\n        response.json({\r\n            result: \"error\",\r\n            data: {},\r\n            message: \"You must enter _id to update\"\r\n        });\r\n    }\r\n});\r\nrouter.delete('/delete_point', (request, response) => {\r\n    if (mongoose.Types.ObjectId.isValid(request.body._id) == true) {\r\n        modelPoint.findByIdAndRemove(request.body._id, (err, data) => {\r\n            if (err) {\r\n                response.json({\r\n                    result: \"error\",\r\n                    data: {},\r\n                    message: `Cannot delete. Error is: ${err}`\r\n                });\r\n                Variables.refreshDataPoint = true;\r\n            }\r\n            response.json({\r\n                result: \"success\",\r\n                data: {},\r\n                message: \"Delete successfully\"\r\n            });\r\n            Variables.refreshDataPoint = true;\r\n        })\r\n    } else {\r\n        response.json({\r\n            result: \"error\",\r\n            data: {},\r\n            message: \"ID not match\"\r\n        });\r\n    }\r\n});\r\n\r\n\r\nmodule.exports = router;","var express = require('express');\r\nvar router = express.Router();\r\nvar modelPointPickPlace = require('../models/model_point_pick_place');\r\nvar mongoose = require('mongoose');\r\nvar Variables = require('../Variable.js');\r\n\r\nrouter.get('/getdata', (req, res) => {\r\n    console.log('have get request');\r\n    Variables.refreshDataPointPickPlace = true;\r\n    res.send(Variables.resultpointPickPlace)\r\n})\r\nrouter.post('/insert_point', (request, response, next) => {\r\n    const newPoint = new modelPointPickPlace({\r\n        type: parseInt(Variables.TypeCobot),\r\n        pickX: parseInt(request.body.pickX),\r\n        pickY: parseInt(request.body.pickY),\r\n        placeX: parseInt(request.body.placeX),\r\n        placeY: parseInt(request.body.placeY),\r\n        placeZ_Layer1: parseInt(request.body.placeZ_Layer1),\r\n        placeZ_Layer2: parseInt(request.body.placeZ_Layer2),\r\n        placeZ_Layer3: parseInt(request.body.placeZ_Layer3),\r\n        placeZ_Layer4: parseInt(request.body.placeZ_Layer4),\r\n    });\r\n    console.log(request.body)\r\n    newPoint.save((err) => {\r\n        if (err) {\r\n            response.json({\r\n                result: \"error\",\r\n                data: {},\r\n                message: `Error is: ${err}`\r\n            });\r\n            console.log(\"insert db error\", err);\r\n        } else {\r\n            response.json({\r\n                result: \"success\",\r\n                message: 'Add Point PickPlace Success',\r\n                data: {\r\n                    type: parseInt(Variables.TypeCobot),\r\n                    pickX: parseInt(request.body.pickX),\r\n                    pickY: parseInt(request.body.pickY),\r\n                    placeX: parseInt(request.body.placeX),\r\n                    placeY: parseInt(request.body.placeY),\r\n                    placeZ_Layer1: parseInt(request.body.placeZ_Layer1),\r\n                    placeZ_Layer2: parseInt(request.body.placeZ_Layer2),\r\n                    placeZ_Layer3: parseInt(request.body.placeZ_Layer3),\r\n                    placeZ_Layer4: parseInt(request.body.placeZ_Layer4),\r\n                },\r\n            });\r\n            Variables.refreshDataPointPickPlace = true;\r\n            console.log(\"insert db ok\");\r\n        }\r\n    });\r\n});\r\nrouter.put('/update_point', (request, response, next) => {\r\n    console.log(request.body);\r\n    let conditions = {};\r\n    if (mongoose.Types.ObjectId.isValid(request.body._id) == true) {\r\n        conditions._id = mongoose.Types.ObjectId(request.body._id);\r\n        let newValue = {};\r\n        // if (typeof (request.body.type) !== 'undefined') { newValue.type = request.body.type; }\r\n        if (typeof (request.body.pickX) !== 'undefined') { newValue.pickX = request.body.pickX; }\r\n        if (typeof (request.body.pickY) !== 'undefined') { newValue.pickY = request.body.pickY; }\r\n        if (typeof (request.body.placeX) !== 'undefined') { newValue.placeX = request.body.placeX; }\r\n        if (typeof (request.body.placeY) !== 'undefined') { newValue.placeY = request.body.placeY; }\r\n        if (typeof (request.body.placeZ_Layer1) !== 'undefined') { newValue.placeZ_Layer1 = request.body.placeZ_Layer1; }\r\n        if (typeof (request.body.placeZ_Layer2) !== 'undefined') { newValue.placeZ_Layer2 = request.body.placeZ_Layer2; }\r\n        if (typeof (request.body.placeZ_Layer3) !== 'undefined') { newValue.placeZ_Layer3 = request.body.placeZ_Layer3; }\r\n        if (typeof (request.body.placeZ_Layer4) !== 'undefined') { newValue.placeZ_Layer4 = request.body.placeZ_Layer4; }\r\n        const options = {\r\n            new: true,\r\n        }\r\n        modelPointPickPlace.findOneAndUpdate(conditions, { $set: newValue }, options, (err, updateData) => {\r\n            if (err) {\r\n                response.json({\r\n                    result: \"error\",\r\n                    data: {},\r\n                    message: `Cannot update. Error is: ${err}`\r\n                });\r\n                Variables.refreshDataPointPickPlace = true;\r\n            } else {\r\n                response.json({\r\n                    result: \"success\",\r\n                    data: updateData,\r\n                    message: \"Update successfully\"\r\n                });\r\n                Variables.refreshDataPointPickPlace = true;\r\n            }\r\n        });\r\n    } else {\r\n        response.json({\r\n            result: \"error\",\r\n            data: {},\r\n            message: \"You must enter _id to update\"\r\n        });\r\n    }\r\n\r\n});\r\nrouter.delete('/delete_point', (request, response) => {\r\n    if (mongoose.Types.ObjectId.isValid(request.body._id) == true) {\r\n        modelPointPickPlace.findByIdAndRemove(request.body._id, (err, data) => {\r\n            if (err) {\r\n                response.json({\r\n                    result: \"error\",\r\n                    data: {},\r\n                    message: `Cannot delete. Error is: ${err}`\r\n                });\r\n                Variables.refreshDataPointPickPlace = true;\r\n            }\r\n            response.json({\r\n                result: \"success\",\r\n                data: {},\r\n                message: \"Delete successfully\"\r\n            });\r\n            Variables.refreshDataPointPickPlace = true;\r\n        })\r\n    } else {\r\n        response.json({\r\n            result: \"error\",\r\n            data: {},\r\n            message: \"ID not match\"\r\n        });\r\n    }\r\n});\r\n\r\n\r\nmodule.exports = router;","var mongoose=require('mongoose')\r\nvar Schema=mongoose.Schema;\r\n\r\nvar PointPickPlaceSchema=new Schema({\r\n    type:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    pickX:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    pickY:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    placeX:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    placeY:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    placeZ_Layer1:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    placeZ_Layer2:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    placeZ_Layer3:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    placeZ_Layer4:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n})\r\n\r\nmodule.exports=mongoose.model('pointPickPlace',PointPickPlaceSchema)","var express = require('express');\r\nvar router = express.Router();\r\nvar modelElement = require('../models/model_element');\r\nvar mongoose = require('mongoose');\r\nvar Variables = require('../Variable.js');\r\n\r\nrouter.get('/getdata', (req, res) => {\r\n    // Variables.refreshDataElement = true;\r\n    res.send(Variables.resultElement)\r\n})\r\nrouter.post('/insert_element', (request, response, next) => {\r\n    console.log(request.body)\r\n    const newElement = new modelElement({\r\n        parent: request.body.parent,\r\n        tag: request.body.tag,\r\n        left: parseInt(request.body.left),\r\n        top: parseInt(request.body.top),\r\n        nameElement: request.body.nameElement,\r\n        src: request.body.src,\r\n    });\r\n    newElement.save((err) => {\r\n        if (err) {\r\n            response.json({\r\n                result: \"error\",\r\n                data: {},\r\n                message: `Error is: ${err}`\r\n            });\r\n            console.log(\"insert db error\");\r\n        } else {\r\n            response.json({\r\n                result: \"success\",\r\n                message: 'Add Element Success',\r\n                data: {\r\n                    parent: request.body.parent,\r\n                    tag: request.body.tag,\r\n                    left: parseInt(request.body.left),\r\n                    top: parseInt(request.body.top),\r\n                    nameElement: request.body.nameElement,\r\n                    src: request.body.src,\r\n                }\r\n            });\r\n            Variables.refreshDataElement = true;\r\n            console.log(\"insert db ok\");\r\n        }\r\n    });\r\n});\r\n\r\nrouter.put('/update_element', (request, response, next) => {\r\n    let conditions = {};\r\n    if (mongoose.Types.ObjectId.isValid(request.body._id) == true) {\r\n        conditions._id = mongoose.Types.ObjectId(request.body._id);\r\n        let newValue = {};\r\n        if (typeof (request.body.parent) !== 'undefined') { newValue.parent = request.body.parent; }\r\n        if (typeof (request.body.tag) !== 'undefined') { newValue.tag = request.body.tag; }\r\n        if (typeof (request.body.left) !== 'undefined') { newValue.left = request.body.left; }\r\n        if (typeof (request.body.top) !== 'undefined') { newValue.top = request.body.top; }\r\n        if (typeof (request.body.nameElement) !== 'undefined') { newValue.nameElement = request.body.nameElement; }\r\n        const options = {\r\n            new: true,\r\n        }\r\n        modelElement.findOneAndUpdate(conditions, { $set: newValue }, options, (err, updateData) => {\r\n            if (err) {\r\n                response.json({\r\n                    result: \"error\",\r\n                    data: {},\r\n                    message: `Cannot update. Error is: ${err}`\r\n                });\r\n            } else {\r\n                response.json({\r\n                    result: \"success\",\r\n                    data: updateData,\r\n                    message: \"Update successfully\"\r\n                });\r\n                Variables.refreshDataElement = true;\r\n            }\r\n        });\r\n    } else {\r\n        response.json({\r\n            result: \"error\",\r\n            data: {},\r\n            message: \"You must enter _id to update\"\r\n        });\r\n    }\r\n});\r\nrouter.delete('/delete_element', (request, response) => {\r\n    if (mongoose.Types.ObjectId.isValid(request.body._id) == true) {\r\n        modelElement.findByIdAndRemove(request.body._id, (err, data) => {\r\n            if (err) {\r\n                response.json({\r\n                    result: \"error\",\r\n                    data: {},\r\n                    message: `Cannot delete. Error is: ${err}`\r\n                });\r\n                Variables.refreshDataElement = true;\r\n            }\r\n            response.json({\r\n                result: \"success\",\r\n                data: {},\r\n                message: \"Delete successfully\"\r\n            });\r\n            Variables.refreshDataElement = true;\r\n        })\r\n    } else {\r\n        response.json({\r\n            result: \"error\",\r\n            data: {},\r\n            message: \"ID not match\"\r\n        });\r\n    }\r\n});\r\nmodule.exports = router;","var express = require('express');\r\nvar router = express.Router();\r\nvar modelLabel = require('../models/model_label');\r\nvar mongoose = require('mongoose');\r\nvar Variables = require('../Variable.js');\r\n\r\nrouter.get('/getdata', (req, res) => {\r\n    // Variables.refreshDataLabel = true;\r\n    res.send(Variables.resultlabel)\r\n})\r\nrouter.post('/insert_label', (request, response, next) => {\r\n    console.log(request.body)\r\n    const newLabel = new modelLabel({\r\n        parent: request.body.parent,\r\n        left: parseInt(request.body.left),\r\n        top: parseInt(request.body.top),\r\n        width: parseInt(request.body.width),\r\n        text: request.body.text,\r\n        color: request.body.color,\r\n        fontSize: parseInt(request.body.fontSize),\r\n    });\r\n    newLabel.save((err) => {\r\n        if (err) {\r\n            response.json({\r\n                result: \"error\",\r\n                data: {},\r\n                message: `Error is: ${err}`\r\n            });\r\n            console.log(\"insert db error\");\r\n        } else {\r\n            response.json({\r\n                result: \"success\",\r\n                message: 'Add Label Success',\r\n                data: {\r\n                    parent: request.body.parent,\r\n                    left: parseInt(request.body.left),\r\n                    top: parseInt(request.body.top),\r\n                    width: parseInt(request.body.width),\r\n                    text: request.body.text,\r\n                    color: request.body.color,\r\n                    fontSize: parseInt(request.body.fontSize),\r\n                }\r\n            });\r\n            Variables.refreshDataLabel = true;\r\n            console.log(\"insert db ok\");\r\n        }\r\n    });\r\n});\r\nrouter.put('/update_label', (request, response, next) => {\r\n    let conditions = {};\r\n    if (mongoose.Types.ObjectId.isValid(request.body._id) == true) {\r\n        conditions._id = mongoose.Types.ObjectId(request.body._id);\r\n        let newValue = {};\r\n        if (typeof (request.body.parent) !== 'undefined') { newValue.parent = request.body.parent; }\r\n        if (typeof (request.body.text) !== 'undefined') { newValue.text = request.body.text; }\r\n        if (typeof (request.body.color) !== 'undefined') { newValue.color = request.body.color; }\r\n        if (typeof (request.body.left) !== 'undefined') { newValue.left = request.body.left; }\r\n        if (typeof (request.body.top) !== 'undefined') { newValue.top = request.body.top; }\r\n        if (typeof (request.body.width) !== 'undefined') { newValue.width = request.body.width; }\r\n        if (typeof (request.body.fontSize) !== 'undefined') { newValue.fontSize = request.body.fontSize; }\r\n        const options = {\r\n            new: true,\r\n        }\r\n        modelLabel.findOneAndUpdate(conditions, { $set: newValue }, options, (err, updateData) => {\r\n            if (err) {\r\n                response.json({\r\n                    result: \"error\",\r\n                    data: {},\r\n                    message: `Cannot update. Error is: ${err}`\r\n                });\r\n                Variables.refreshDataLabel = true;\r\n            } else {\r\n                response.json({\r\n                    result: \"success\",\r\n                    data: updateData,\r\n                    message: \"Update successfully\"\r\n                });\r\n                Variables.refreshDataLabel = true;\r\n            }\r\n        });\r\n    } else {\r\n        response.json({\r\n            result: \"error\",\r\n            data: {},\r\n            message: \"You must enter _id to update\"\r\n        });\r\n    }\r\n});\r\nrouter.delete('/delete_label', (request, response) => {\r\n    if (mongoose.Types.ObjectId.isValid(request.body._id) == true) {\r\n        modelLabel.findByIdAndRemove(request.body._id, (err, data) => {\r\n            if (err) {\r\n                response.json({\r\n                    result: \"error\",\r\n                    data: {},\r\n                    message: `Cannot delete. Error is: ${err}`\r\n                });\r\n                Variables.refreshDataLabel = true;\r\n            }\r\n            response.json({\r\n                result: \"success\",\r\n                data: {},\r\n                message: \"Delete successfully\"\r\n            });\r\n            Variables.refreshDataLabel = true;\r\n        })\r\n    } else {\r\n        response.json({\r\n            result: \"error\",\r\n            data: {},\r\n            message: \"ID not match\"\r\n        });\r\n    }\r\n});\r\nmodule.exports = router;","var express = require('express');\r\nvar router = express.Router();\r\nvar modelLine = require('../models/model_line');\r\nvar mongoose = require('mongoose');\r\nvar Variables = require('../Variable.js');\r\n\r\nrouter.get('/getdata', (req, res) => {\r\n    // Variables.refreshDataLine = true;\r\n    res.send(Variables.resultline)\r\n})\r\nrouter.post('/insert_line', (request, response, next) => {\r\n    const newLine = new modelLine({\r\n        parent: request.body.parent,\r\n        idRun: request.body.idRun,\r\n        type: request.body.type,\r\n        left: parseInt(request.body.left),\r\n        top: parseInt(request.body.top),\r\n        length: parseInt(request.body.length),\r\n    });\r\n    newLine.save((err) => {\r\n        if (err) {\r\n            response.json({\r\n                result: \"error\",\r\n                data: {},\r\n                message: `Error is: ${err}`\r\n            });\r\n            console.log(\"insert db error\");\r\n        } else {\r\n            response.json({\r\n                result: \"success\",\r\n                message: 'Add Line Success',\r\n                data: {\r\n                    parent: request.body.parent,\r\n                    idRun: request.body.idRun,\r\n                    type: request.body.type,\r\n                    left: parseInt(request.body.left),\r\n                    top: parseInt(request.body.top),\r\n                    length: parseInt(request.body.length),\r\n                }\r\n            });\r\n            Variables.refreshDataLine = true;\r\n            console.log(\"insert db ok\");\r\n        }\r\n    });\r\n});\r\n\r\nrouter.put('/update_line', (request, response, next) => {\r\n    let conditions = {};\r\n    if (mongoose.Types.ObjectId.isValid(request.body._id) == true) {\r\n        conditions._id = mongoose.Types.ObjectId(request.body._id);\r\n        let newValue = {};\r\n        if (typeof (request.body.parent) !== 'undefined') { newValue.parent = request.body.parent; }\r\n        if (typeof (request.body.idRun) !== 'undefined') { newValue.idRun = request.body.idRun; }\r\n        if (typeof (request.body.type) !== 'undefined') { newValue.type = request.body.type; }\r\n        if (typeof (request.body.left) !== 'undefined') { newValue.left = request.body.left; }\r\n        if (typeof (request.body.top) !== 'undefined') { newValue.top = request.body.top; }\r\n        if (typeof (request.body.length) !== 'undefined') { newValue.length = request.body.length; }\r\n        const options = {\r\n            new: true,\r\n        }\r\n        modelLine.findOneAndUpdate(conditions, { $set: newValue }, options, (err, updateData) => {\r\n            if (err) {\r\n                response.json({\r\n                    result: \"error\",\r\n                    data: {},\r\n                    message: `Cannot update. Error is: ${err}`\r\n                });\r\n                Variables.refreshDataLine = true;\r\n            } else {\r\n                response.json({\r\n                    result: \"success\",\r\n                    data: updateData,\r\n                    message: \"Update successfully\"\r\n                });\r\n                Variables.refreshDataLine = true;\r\n            }\r\n        });\r\n    } else {\r\n        response.json({\r\n            result: \"error\",\r\n            data: {},\r\n            message: \"You must enter _id to update\"\r\n        });\r\n    }\r\n});\r\nrouter.delete('/delete_line', (request, response) => {\r\n    if (mongoose.Types.ObjectId.isValid(request.body._id) == true) {\r\n        modelLine.findByIdAndRemove(request.body._id, (err, data) => {\r\n            if (err) {\r\n                response.json({\r\n                    result: \"error\",\r\n                    data: {},\r\n                    message: `Cannot delete. Error is: ${err}`\r\n                });\r\n                Variables.refreshDataLine = true;\r\n            }\r\n            response.json({\r\n                result: \"success\",\r\n                data: {},\r\n                message: \"Delete successfully\"\r\n            });\r\n            Variables.refreshDataLine = true;\r\n        })\r\n    } else {\r\n        response.json({\r\n            result: \"error\",\r\n            data: {},\r\n            message: \"ID not match\"\r\n        });\r\n    }\r\n});\r\n\r\nmodule.exports = router;","var express = require('express');\r\nvar router = express.Router();\r\nvar modelWordDisplay = require('../models/model_wordDisplay');\r\nvar mongoose = require('mongoose');\r\nvar Variables = require('../Variable.js');\r\n\r\nrouter.get('/getdata', (req, res) => {\r\n    // Variables.refreshDataWordDisplay = true;\r\n    res.send(Variables.resultWordDisplay)\r\n})\r\nrouter.post('/insert_wordDisplay', (request, response, next) => {\r\n    const newWordDisplay = new modelWordDisplay({\r\n        parent: request.body.parent,\r\n        tag: request.body.tag,\r\n        text: request.body.text,\r\n        left: parseInt(request.body.left),\r\n        top: parseInt(request.body.top),\r\n        width: parseInt(request.body.width),\r\n        fontSize: parseInt(request.body.fontSize),\r\n    });\r\n    newWordDisplay.save((err) => {\r\n        if (err) {\r\n            response.json({\r\n                result: \"error\",\r\n                data: {},\r\n                message: `Error is: ${err}`\r\n            });\r\n            console.log(\"insert db error\");\r\n        } else {\r\n            response.json({\r\n                result: \"success\",\r\n                message: 'Add WordDisplay Success',\r\n                data: {\r\n                    parent: request.body.parent,\r\n                    tag: request.body.tag,\r\n                    text: request.body.text,\r\n                    left: parseInt(request.body.left),\r\n                    top: parseInt(request.body.top),\r\n                    width: parseInt(request.body.width),\r\n                    fontSize: parseInt(request.body.fontSize),\r\n                }\r\n            });\r\n            Variables.refreshDataWordDisplay = true;\r\n            console.log(\"insert db ok\");\r\n        }\r\n    });\r\n});\r\nrouter.put('/update_worddisplay', (request, response, next) => {\r\n    console.log(request.body);\r\n    let conditions = {};\r\n    if (mongoose.Types.ObjectId.isValid(request.body._id) == true) {\r\n        conditions._id = mongoose.Types.ObjectId(request.body._id);\r\n        let newValue = {};\r\n        if (typeof (request.body.parent) !== 'undefined') { newValue.parent = request.body.parent; }\r\n        if (typeof (request.body.tag) !== 'undefined') { newValue.tag = request.body.tag; }\r\n        if (typeof (request.body.text) !== 'undefined') { newValue.text = request.body.text; }\r\n        if (typeof (request.body.left) !== 'undefined') { newValue.left = request.body.left; }\r\n        if (typeof (request.body.top) !== 'undefined') { newValue.top = request.body.top; }\r\n        if (typeof (request.body.width) !== 'undefined') { newValue.width = request.body.width; }\r\n        if (typeof (request.body.fontSize) !== 'undefined') { newValue.fontSize = request.body.fontSize; }\r\n        const options = {\r\n            new: true,\r\n        }\r\n        modelWordDisplay.findOneAndUpdate(conditions, { $set: newValue }, options, (err, updateData) => {\r\n            if (err) {\r\n                response.json({\r\n                    result: \"error\",\r\n                    data: {},\r\n                    message: `Cannot update. Error is: ${err}`\r\n                });\r\n                Variables.refreshDataWordDisplay = true;\r\n            } else {\r\n                response.json({\r\n                    result: \"success\",\r\n                    data: updateData,\r\n                    message: \"Update successfully\"\r\n                });\r\n                Variables.refreshDataWordDisplay = true;\r\n            }\r\n        });\r\n    } else {\r\n        response.json({\r\n            result: \"error\",\r\n            data: {},\r\n            message: \"You must enter _id to update\"\r\n        });\r\n    }\r\n});\r\nrouter.delete('/delete_worddisplay', (request, response) => {\r\n    if (mongoose.Types.ObjectId.isValid(request.body._id) == true) {\r\n        modelWordDisplay.findByIdAndRemove(request.body._id, (err, data) => {\r\n            if (err) {\r\n                response.json({\r\n                    result: \"error\",\r\n                    data: {},\r\n                    message: `Cannot delete. Error is: ${err}`\r\n                });\r\n                Variables.refreshDataWordDisplay = true;\r\n            }\r\n            response.json({\r\n                result: \"success\",\r\n                data: {},\r\n                message: \"Delete successfully\"\r\n            });\r\n            Variables.refreshDataWordDisplay = true;\r\n        })\r\n    } else {\r\n        response.json({\r\n            result: \"error\",\r\n            data: {},\r\n            message: \"ID not match\"\r\n        });\r\n    }\r\n});\r\n\r\nmodule.exports = router;","var express = require('express');\r\nvar router = express.Router();\r\nvar modelWordAdjust = require('../models/model_wordAdjust');\r\nvar mongoose = require('mongoose');\r\nvar Variables = require('../Variable.js');\r\n\r\nrouter.get('/getdata', (req, res) => {\r\n    // Variables.refreshDataWordAdjust = true;\r\n    res.send(Variables.resultWordAdjust)\r\n})\r\nrouter.post('/insert_wordAdjust', (request, response, next) => {\r\n    const newWordAdjust = new modelWordAdjust({\r\n        parent: request.body.parent,\r\n        tag: request.body.tag,\r\n        text: request.body.text,\r\n        left: parseInt(request.body.left),\r\n        top: parseInt(request.body.top),\r\n        width: parseInt(request.body.width),\r\n        height: parseInt(request.body.height),\r\n        fontSize: parseInt(request.body.fontSize),\r\n    });\r\n    newWordAdjust.save((err) => {\r\n        if (err) {\r\n            response.json({\r\n                result: \"error\",\r\n                data: {},\r\n                message: `Error is: ${err}`\r\n            });\r\n            console.log(\"insert db error\");\r\n        } else {\r\n            response.json({\r\n                result: \"success\",\r\n                message: 'Add WordAdjust Success',\r\n                data: {\r\n                    parent: request.body.parent,\r\n                    tag: request.body.tag,\r\n                    text: request.body.text,\r\n                    left: parseInt(request.body.left),\r\n                    top: parseInt(request.body.top),\r\n                    width: parseInt(request.body.width),\r\n                    height: parseInt(request.body.height),\r\n                    fontSize: parseInt(request.body.fontSize),\r\n                }\r\n            });\r\n            Variables.refreshDataWordAdjust = true;\r\n            console.log(\"insert db ok\");\r\n        }\r\n    });\r\n});\r\nrouter.put('/update_wordadjust', (request, response, next) => {\r\n    console.log(request.body);\r\n    let conditions = {};\r\n    if (mongoose.Types.ObjectId.isValid(request.body._id) == true) {\r\n        conditions._id = mongoose.Types.ObjectId(request.body._id);\r\n        let newValue = {};\r\n        if (typeof (request.body.parent) !== 'undefined') { newValue.parent = request.body.parent; }\r\n        if (typeof (request.body.tag) !== 'undefined') { newValue.tag = request.body.tag; }\r\n        if (typeof (request.body.text) !== 'undefined') { newValue.text = request.body.text; }\r\n        if (typeof (request.body.left) !== 'undefined') { newValue.left = request.body.left; }\r\n        if (typeof (request.body.top) !== 'undefined') { newValue.top = request.body.top; }\r\n        if (typeof (request.body.width) !== 'undefined') { newValue.width = request.body.width; }\r\n        if (typeof (request.body.height) !== 'undefined') { newValue.height = request.body.height; }\r\n        if (typeof (request.body.fontSize) !== 'undefined') { newValue.fontSize = request.body.fontSize; }\r\n        const options = {\r\n            new: true,\r\n        }\r\n        modelWordAdjust.findOneAndUpdate(conditions, { $set: newValue }, options, (err, updateData) => {\r\n            if (err) {\r\n                response.json({\r\n                    result: \"error\",\r\n                    data: {},\r\n                    message: `Cannot update. Error is: ${err}`\r\n                });\r\n                Variables.refreshDataWordAdjust = true;\r\n            } else {\r\n                response.json({\r\n                    result: \"success\",\r\n                    data: updateData,\r\n                    message: \"Update successfully\"\r\n                });\r\n                Variables.refreshDataWordAdjust = true;\r\n            }\r\n        });\r\n    } else {\r\n        response.json({\r\n            result: \"error\",\r\n            data: {},\r\n            message: \"You must enter _id to update\"\r\n        });\r\n    }\r\n});\r\nrouter.delete('/delete_wordadjust', (request, response) => {\r\n    if (mongoose.Types.ObjectId.isValid(request.body._id) == true) {\r\n        modelWordAdjust.findByIdAndRemove(request.body._id, (err, data) => {\r\n            if (err) {\r\n                response.json({\r\n                    result: \"error\",\r\n                    data: {},\r\n                    message: `Cannot delete. Error is: ${err}`\r\n                });\r\n                Variables.refreshDataWordAdjust = true;\r\n            }\r\n            response.json({\r\n                result: \"success\",\r\n                data: {},\r\n                message: \"Delete successfully\"\r\n            });\r\n            Variables.refreshDataWordAdjust = true;\r\n        })\r\n    } else {\r\n        response.json({\r\n            result: \"error\",\r\n            data: {},\r\n            message: \"ID not match\"\r\n        });\r\n    }\r\n});\r\n\r\nmodule.exports = router;","var express = require('express');\r\nvar router = express.Router();\r\nvar modelDWordDisplay = require('../models/model_dwordDisplay');\r\nvar mongoose = require('mongoose');\r\nvar Variables = require('../Variable.js');\r\n\r\nrouter.get('/getdata', (req, res) => {\r\n    // Variables.refreshDataDWordDisplay = true;\r\n    res.send(Variables.resultDWordDisplay)\r\n})\r\nrouter.post('/insert_dwordDisplay', (request, response, next) => {\r\n    const newDWordDisplay = new modelDWordDisplay({\r\n        parent: request.body.parent,\r\n        tag: request.body.tag,\r\n        text: request.body.text,\r\n        left: parseInt(request.body.left),\r\n        top: parseInt(request.body.top),\r\n        width: parseInt(request.body.width),\r\n        fontSize: parseInt(request.body.fontSize),\r\n    });\r\n    newDWordDisplay.save((err) => {\r\n        if (err) {\r\n            response.json({\r\n                result: \"error\",\r\n                data: {},\r\n                message: `Error is: ${err}`\r\n            });\r\n            console.log(\"insert db error\");\r\n        } else {\r\n            response.json({\r\n                result: \"success\",\r\n                message: 'Add DWordDispaly Success',\r\n                data: {\r\n                    parent: request.body.parent,\r\n                    tag: request.body.tag,\r\n                    text: request.body.text,\r\n                    left: parseInt(request.body.left),\r\n                    top: parseInt(request.body.top),\r\n                    width: parseInt(request.body.width),\r\n                    fontSize: parseInt(request.body.fontSize),\r\n                }\r\n            });\r\n            Variables.refreshDataDWordDisplay = true;\r\n            console.log(\"insert db ok\");\r\n        }\r\n    });\r\n});\r\nrouter.put('/update_dworddisplay', (request, response, next) => {\r\n    console.log(request.body);\r\n    let conditions = {};\r\n    if (mongoose.Types.ObjectId.isValid(request.body._id) == true) {\r\n        conditions._id = mongoose.Types.ObjectId(request.body._id);\r\n        let newValue = {};\r\n        if (typeof (request.body.parent) !== 'undefined') { newValue.parent = request.body.parent; }\r\n        if (typeof (request.body.tag) !== 'undefined') { newValue.tag = request.body.tag; }\r\n        if (typeof (request.body.text) !== 'undefined') { newValue.text = request.body.text; }\r\n        if (typeof (request.body.left) !== 'undefined') { newValue.left = request.body.left; }\r\n        if (typeof (request.body.top) !== 'undefined') { newValue.top = request.body.top; }\r\n        if (typeof (request.body.width) !== 'undefined') { newValue.width = request.body.width; }\r\n        if (typeof (request.body.fontSize) !== 'undefined') { newValue.fontSize = request.body.fontSize; }\r\n        const options = {\r\n            new: true,\r\n        }\r\n        modelDWordDisplay.findOneAndUpdate(conditions, { $set: newValue }, options, (err, updateData) => {\r\n            if (err) {\r\n                response.json({\r\n                    result: \"error\",\r\n                    data: {},\r\n                    message: `Cannot update. Error is: ${err}`\r\n                });\r\n                Variables.refreshDataDWordDisplay = true;\r\n            } else {\r\n                response.json({\r\n                    result: \"success\",\r\n                    data: updateData,\r\n                    message: \"Update successfully\"\r\n                });\r\n                Variables.refreshDataDWordDisplay = true;\r\n            }\r\n        });\r\n    } else {\r\n        response.json({\r\n            result: \"error\",\r\n            data: {},\r\n            message: \"You must enter _id to update\"\r\n        });\r\n    }\r\n});\r\nrouter.delete('/delete_dworddisplay', (request, response) => {\r\n    if (mongoose.Types.ObjectId.isValid(request.body._id) == true) {\r\n        modelDWordDisplay.findByIdAndRemove(request.body._id, (err, data) => {\r\n            if (err) {\r\n                response.json({\r\n                    result: \"error\",\r\n                    data: {},\r\n                    message: `Cannot delete. Error is: ${err}`\r\n                });\r\n                Variables.refreshDataDWordDisplay = true;\r\n            }\r\n            response.json({\r\n                result: \"success\",\r\n                data: {},\r\n                message: \"Delete successfully\"\r\n            });\r\n            Variables.refreshDataDWordDisplay = true;\r\n        })\r\n    } else {\r\n        response.json({\r\n            result: \"error\",\r\n            data: {},\r\n            message: \"ID not match\"\r\n        });\r\n    }\r\n});\r\n\r\nmodule.exports = router;","var express = require('express');\r\nvar router = express.Router();\r\nvar modelDWordAdjust = require('../models/model_dwordAdjust');\r\nvar mongoose = require('mongoose');\r\nvar Variables = require('../Variable.js');\r\n\r\nrouter.get('/getdata', (req, res) => {\r\n    // Variables.refreshDataDWordAdjust = true;\r\n    res.send(Variables.resultDWordAdjust)\r\n})\r\nrouter.post('/insert_dwordAdjust', (request, response, next) => {\r\n    const newDWordAdjust = new modelDWordAdjust({\r\n        parent: request.body.parent,\r\n        tag: request.body.tag,\r\n        text: request.body.text,\r\n        left: parseInt(request.body.left),\r\n        top: parseInt(request.body.top),\r\n        width: parseInt(request.body.width),\r\n        height: parseInt(request.body.height),\r\n        fontSize: parseInt(request.body.fontSize),\r\n    });\r\n    newDWordAdjust.save((err) => {\r\n        if (err) {\r\n            response.json({\r\n                result: \"error\",\r\n                data: {},\r\n                message: `Error is: ${err}`\r\n            });\r\n            console.log(\"insert db error\");\r\n        } else {\r\n            response.json({\r\n                result: \"success\",\r\n                message: 'Add DWordAdjust Success',\r\n                data: {\r\n                    parent: request.body.parent,\r\n                    tag: request.body.tag,\r\n                    text: request.body.text,\r\n                    left: parseInt(request.body.left),\r\n                    top: parseInt(request.body.top),\r\n                    width: parseInt(request.body.width),\r\n                    height: parseInt(request.body.height),\r\n                    fontSize: parseInt(request.body.fontSize),\r\n                }\r\n            });\r\n            Variables.refreshDataDWordAdjust = true;\r\n            console.log(\"insert db ok\");\r\n        }\r\n    });\r\n});\r\nrouter.put('/update_dwordadjust', (request, response, next) => {\r\n    console.log(request.body);\r\n    let conditions = {};\r\n    if (mongoose.Types.ObjectId.isValid(request.body._id) == true) {\r\n        conditions._id = mongoose.Types.ObjectId(request.body._id);\r\n        let newValue = {};\r\n        if (typeof (request.body.parent) !== 'undefined') { newValue.parent = request.body.parent; }\r\n        if (typeof (request.body.tag) !== 'undefined') { newValue.tag = request.body.tag; }\r\n        if (typeof (request.body.text) !== 'undefined') { newValue.text = request.body.text; }\r\n        if (typeof (request.body.left) !== 'undefined') { newValue.left = request.body.left; }\r\n        if (typeof (request.body.top) !== 'undefined') { newValue.top = request.body.top; }\r\n        if (typeof (request.body.width) !== 'undefined') { newValue.width = request.body.width; }\r\n        if (typeof (request.body.height) !== 'undefined') { newValue.height = request.body.height; }\r\n        if (typeof (request.body.fontSize) !== 'undefined') { newValue.fontSize = request.body.fontSize; }\r\n        const options = {\r\n            new: true,\r\n        }\r\n        modelDWordAdjust.findOneAndUpdate(conditions, { $set: newValue }, options, (err, updateData) => {\r\n            if (err) {\r\n                response.json({\r\n                    result: \"error\",\r\n                    data: {},\r\n                    message: `Cannot update. Error is: ${err}`\r\n                });\r\n                Variables.refreshDataDWordAdjust = true;\r\n            } else {\r\n                response.json({\r\n                    result: \"success\",\r\n                    data: updateData,\r\n                    message: \"Update successfully\"\r\n                });\r\n                Variables.refreshDataDWordAdjust = true;\r\n            }\r\n        });\r\n    } else {\r\n        response.json({\r\n            result: \"error\",\r\n            data: {},\r\n            message: \"You must enter _id to update\"\r\n        });\r\n    }\r\n});\r\nrouter.delete('/delete_dwordadjust', (request, response) => {\r\n    if (mongoose.Types.ObjectId.isValid(request.body._id) == true) {\r\n        modelDWordAdjust.findByIdAndRemove(request.body._id, (err, data) => {\r\n            if (err) {\r\n                response.json({\r\n                    result: \"error\",\r\n                    data: {},\r\n                    message: `Cannot delete. Error is: ${err}`\r\n                });\r\n                Variables.refreshDataDWordAdjust = true;\r\n            }\r\n            response.json({\r\n                result: \"success\",\r\n                data: {},\r\n                message: \"Delete successfully\"\r\n            });\r\n            Variables.refreshDataDWordAdjust = true;\r\n        })\r\n    } else {\r\n        response.json({\r\n            result: \"error\",\r\n            data: {},\r\n            message: \"ID not match\"\r\n        });\r\n    }\r\n});\r\n\r\nmodule.exports = router;","var express = require('express');\r\nvar router = express.Router();\r\nvar modelBitDisplay = require('../models/model_bitDisplay');\r\nvar mongoose = require('mongoose');\r\nvar Variables = require('../Variable.js');\r\n\r\nrouter.get('/getdata', (req, res) => {\r\n    // Variables.refreshDataBitDisplay = true;\r\n    res.send(Variables.resultBitDisplay)\r\n})\r\nrouter.post('/insert_bitDisplay', (request, response, next) => {\r\n    const newBitDisplay = new modelBitDisplay({\r\n        parent: request.body.parent,\r\n        status: request.body.status,\r\n        tag: request.body.tag,\r\n        text0: request.body.text0,\r\n        text1: request.body.text1,\r\n        color0: request.body.color0,\r\n        color1: request.body.color1,\r\n        left: parseInt(request.body.left),\r\n        top: parseInt(request.body.top),\r\n        width: parseInt(request.body.width),\r\n        fontSize: parseInt(request.body.fontSize),\r\n        nameImage0: request.body.nameImage0,\r\n        nameImage1: request.body.nameImage1,\r\n        type: parseInt(request.body.type)\r\n    });\r\n    console.log(request.body)\r\n    newBitDisplay.save((err) => {\r\n        if (err) {\r\n            response.json({\r\n                result: \"error\",\r\n                data: {},\r\n                message: `Error is: ${err}`\r\n            });\r\n            console.log(\"insert db error\", err);\r\n        } else {\r\n            response.json({\r\n                result: \"success\",\r\n                message: 'Add BitDisplay success',\r\n                data: {\r\n                    parent: request.body.parent,\r\n                    status: request.body.status,\r\n                    tag: request.body.tag,\r\n                    text0: request.body.text0,\r\n                    text1: request.body.text1,\r\n                    color0: request.body.color0,\r\n                    color1: request.body.color1,\r\n                    left: parseInt(request.body.left),\r\n                    top: parseInt(request.body.top),\r\n                    width: parseInt(request.body.width),\r\n                    fontSize: parseInt(request.body.fontSize),\r\n                    nameImage0: request.body.nameImage0,\r\n                    nameImage1: request.body.nameImage1,\r\n                    type: parseInt(request.body.type)\r\n                }\r\n            });\r\n            Variables.refreshDataBitDisplay = true;\r\n            console.log(\"insert db ok\");\r\n        }\r\n    });\r\n});\r\nrouter.put('/update_bitdisplay', (request, response, next) => {\r\n    console.log(request.body);\r\n    let conditions = {};\r\n    if (mongoose.Types.ObjectId.isValid(request.body._id) == true) {\r\n        conditions._id = mongoose.Types.ObjectId(request.body._id);\r\n        let newValue = {};\r\n        if (typeof (request.body.parent) !== 'undefined') { newValue.parent = request.body.parent; }\r\n        if (typeof (request.body.status) !== 'undefined') { newValue.status = request.body.status; }\r\n        if (typeof (request.body.tag) !== 'undefined') { newValue.tag = request.body.tag; }\r\n        if (typeof (request.body.text0) !== 'undefined') { newValue.text0 = request.body.text0; }\r\n        if (typeof (request.body.text1) !== 'undefined') { newValue.text1 = request.body.text1; }\r\n        if (typeof (request.body.color0) !== 'undefined') { newValue.color0 = request.body.color0; }\r\n        if (typeof (request.body.color1) !== 'undefined') { newValue.color1 = request.body.color1; }\r\n        if (typeof (request.body.left) !== 'undefined') { newValue.left = request.body.left; }\r\n        if (typeof (request.body.top) !== 'undefined') { newValue.top = request.body.top; }\r\n        if (typeof (request.body.width) !== 'undefined') { newValue.width = request.body.width; }\r\n        if (typeof (request.body.fontSize) !== 'undefined') { newValue.fontSize = request.body.fontSize; }\r\n        if (typeof (request.body.nameImage0) !== 'undefined') { newValue.nameImage0 = request.body.nameImage0; }\r\n        if (typeof (request.body.nameImage1) !== 'undefined') { newValue.nameImage1 = request.body.nameImage1; }\r\n        const options = {\r\n            new: true,\r\n        }\r\n        modelBitDisplay.findOneAndUpdate(conditions, { $set: newValue }, options, (err, updateData) => {\r\n            if (err) {\r\n                response.json({\r\n                    result: \"error\",\r\n                    data: {},\r\n                    message: `Cannot update. Error is: ${err}`\r\n                });\r\n                Variables.refreshDataBitDisplay = true;\r\n            } else {\r\n                response.json({\r\n                    result: \"success\",\r\n                    data: updateData,\r\n                    message: \"Update successfully\"\r\n                });\r\n                Variables.refreshDataBitDisplay = true;\r\n            }\r\n        });\r\n    } else {\r\n        response.json({\r\n            result: \"error\",\r\n            data: {},\r\n            message: \"You must enter _id to update\"\r\n        });\r\n    }\r\n});\r\nrouter.delete('/delete_bitdisplay', (request, response) => {\r\n    if (mongoose.Types.ObjectId.isValid(request.body._id) == true) {\r\n        modelBitDisplay.findByIdAndRemove(request.body._id, (err, data) => {\r\n            if (err) {\r\n                response.json({\r\n                    result: \"error\",\r\n                    data: {},\r\n                    message: `Cannot delete. Error is: ${err}`\r\n                });\r\n                Variables.refreshDataBitDisplay = true;\r\n            }\r\n            response.json({\r\n                result: \"success\",\r\n                data: {},\r\n                message: \"Delete successfully\"\r\n            });\r\n            Variables.refreshDataBitDisplay = true;\r\n        })\r\n    } else {\r\n        response.json({\r\n            result: \"error\",\r\n            data: {},\r\n            message: \"ID not match\"\r\n        });\r\n    }\r\n});\r\n\r\nmodule.exports = router;","var express = require('express');\r\nvar router = express.Router();\r\nvar modelBitAdjust = require('../models/model_bitAdjust');\r\nvar mongoose = require('mongoose');\r\nvar Variables = require('../Variable.js');\r\n\r\nrouter.get('/getdata', (req, res) => {\r\n    // Variables.refreshDataBitAdjust = true;\r\n    res.send(Variables.resultBitAdjust)\r\n})\r\nrouter.post('/insert_bitAdjust', (request, response, next) => {\r\n    console.log(request.body)\r\n    const newBitAdjust = new modelBitAdjust({\r\n        parent: request.body.parent,\r\n        status: request.body.status,\r\n        tag: request.body.tag,\r\n        text: request.body.text,\r\n        left: parseInt(request.body.left),\r\n        top: parseInt(request.body.top),\r\n        width: parseInt(request.body.width),\r\n        height: parseInt(request.body.height),\r\n        fontSize: parseInt(request.body.fontSize),\r\n        type: parseInt(request.body.type)\r\n    });\r\n    newBitAdjust.save((err) => {\r\n        if (err) {\r\n            response.json({\r\n                result: \"error\",\r\n                data: {},\r\n                message: `Error is: ${err}`\r\n            });\r\n            console.log(\"insert db error\", err);\r\n        } else {\r\n            response.json({\r\n                result: \"success\",\r\n                message: 'Add BitAdjust Success',\r\n                data: {\r\n                    parent: request.body.parent,\r\n                    status: request.body.status,\r\n                    tag: request.body.tag,\r\n                    text: request.body.text,\r\n                    left: parseInt(request.body.left),\r\n                    top: parseInt(request.body.top),\r\n                    width: parseInt(request.body.width),\r\n                    height: parseInt(request.body.height),\r\n                    fontSize: parseInt(request.body.fontSize),\r\n                    type: parseInt(request.body.type)\r\n                }\r\n            });\r\n            Variables.refreshDataBitAdjust = true;\r\n            console.log(\"insert db ok\");\r\n        }\r\n    });\r\n});\r\nrouter.put('/update_bitadjust', (request, response, next) => {\r\n    let conditions = {};\r\n    if (mongoose.Types.ObjectId.isValid(request.body._id) == true) {\r\n        conditions._id = mongoose.Types.ObjectId(request.body._id);\r\n        let newValue = {};\r\n        if (typeof (request.body.parent) !== 'undefined') { newValue.parent = request.body.parent; }\r\n        if (typeof (request.body.status) !== 'undefined') { newValue.status = request.body.status; }\r\n        if (typeof (request.body.tag) !== 'undefined') { newValue.tag = request.body.tag; }\r\n        if (typeof (request.body.text) !== 'undefined') { newValue.text = request.body.text; }\r\n        if (typeof (request.body.left) !== 'undefined') { newValue.left = request.body.left; }\r\n        if (typeof (request.body.top) !== 'undefined') { newValue.top = request.body.top; }\r\n        if (typeof (request.body.width) !== 'undefined') { newValue.width = request.body.width; }\r\n        if (typeof (request.body.height) !== 'undefined') { newValue.height = request.body.height; }\r\n        if (typeof (request.body.fontSize) !== 'undefined') { newValue.fontSize = request.body.fontSize; }\r\n        if (typeof (request.body.type) !== 'undefined') { newValue.type = request.body.type; }\r\n        const options = {\r\n            new: true,\r\n        }\r\n        modelBitAdjust.findOneAndUpdate(conditions, { $set: newValue }, options, (err, updateData) => {\r\n            if (err) {\r\n                response.json({\r\n                    result: \"error\",\r\n                    data: {},\r\n                    message: `Cannot update. Error is: ${err}`\r\n                });\r\n                Variables.refreshDataBitAdjust = true;\r\n            } else {\r\n                response.json({\r\n                    result: \"success\",\r\n                    data: updateData,\r\n                    message: \"Update successfully\"\r\n                });\r\n                Variables.refreshDataBitAdjust = true;\r\n            }\r\n        });\r\n    } else {\r\n        response.json({\r\n            result: \"error\",\r\n            data: {},\r\n            message: \"You must enter _id to update\"\r\n        });\r\n    }\r\n\r\n});\r\nrouter.delete('/delete_bitadjust', (request, response) => {\r\n    if (mongoose.Types.ObjectId.isValid(request.body._id) == true) {\r\n        modelBitAdjust.findByIdAndRemove(request.body._id, (err, data) => {\r\n            if (err) {\r\n                response.json({\r\n                    result: \"error\",\r\n                    data: {},\r\n                    message: `Cannot delete. Error is: ${err}`\r\n                });\r\n                Variables.refreshDataBitAdjust = true;\r\n            }\r\n            response.json({\r\n                result: \"success\",\r\n                data: {},\r\n                message: \"Delete successfully\"\r\n            });\r\n            Variables.refreshDataBitAdjust = true;\r\n        })\r\n    } else {\r\n        response.json({\r\n            result: \"error\",\r\n            data: {},\r\n            message: \"ID not match\"\r\n        });\r\n    }\r\n});\r\n\r\n\r\nmodule.exports = router;","var express = require('express');\r\nvar router = express.Router();\r\nvar modelPanel = require('../models/model_panel');\r\nvar mongoose = require('mongoose');\r\nvar Variables = require('../Variable.js');\r\n\r\nrouter.get('/getdata', (req, res) => {\r\n    // Variables.refreshDataPanel = true;\r\n    res.send(Variables.resultPanel)\r\n})\r\nrouter.post('/insert_panel', (request, response, next) => {\r\n    console.log(request.body)\r\n    const newPanel = new modelPanel({\r\n        parent: request.body.parent,\r\n        left: parseInt(request.body.left),\r\n        top: parseInt(request.body.top),\r\n        width: parseInt(request.body.width),\r\n        height: parseInt(request.body.height),\r\n        backgroundColor: request.body.backgroundColor,\r\n        borderRadius: parseInt(request.body.borderRadius),\r\n        boxShadow1: parseInt(request.body.boxShadow1),\r\n        boxShadow2: parseInt(request.body.boxShadow2),\r\n        boxShadow3: parseInt(request.body.boxShadow3),\r\n        boxShadowColor: request.body.boxShadowColor,\r\n        zIndex: parseInt(request.body.zIndex),\r\n        margin: parseInt(request.body.margin),\r\n        padding: parseInt(request.body.padding),\r\n    });\r\n    newPanel.save((err) => {\r\n        if (err) {\r\n            response.json({\r\n                result: \"error\",\r\n                data: {},\r\n                message: `Error is: ${err}`\r\n            });\r\n            console.log(\"insert db error\");\r\n        } else {\r\n            response.json({\r\n                result: \"success\",\r\n                message: 'Add Panel Success',\r\n                data: {\r\n                    parent: request.body.parent,\r\n                    left: parseInt(request.body.left),\r\n                    top: parseInt(request.body.top),\r\n                    width: parseInt(request.body.width),\r\n                    height: parseInt(request.body.height),\r\n                    backgroundColor: request.body.backgroundColor,\r\n                    borderRadius: parseInt(request.body.borderRadius),\r\n                    boxShadow1: parseInt(request.body.boxShadow1),\r\n                    boxShadow2: parseInt(request.body.boxShadow2),\r\n                    boxShadow3: parseInt(request.body.boxShadow3),\r\n                    boxShadowColor: request.body.boxShadowColor,\r\n                    zIndex: parseInt(request.body.zIndex),\r\n                    margin: parseInt(request.body.margin),\r\n                    padding: parseInt(request.body.padding),\r\n                }\r\n            });\r\n            Variables.refreshDataPanel = true;\r\n            console.log(\"insert db ok\");\r\n        }\r\n    });\r\n});\r\nrouter.put('/update_panel', (request, response, next) => {\r\n    let conditions = {};\r\n    if (mongoose.Types.ObjectId.isValid(request.body._id) == true) {\r\n        conditions._id = mongoose.Types.ObjectId(request.body._id);\r\n        let newValue = {};\r\n        if (typeof (request.body.parent) !== 'undefined') { newValue.parent = request.body.parent; }\r\n        if (typeof (request.body.left) !== 'undefined') { newValue.left = request.body.left; }\r\n        if (typeof (request.body.top) !== 'undefined') { newValue.top = request.body.top; }\r\n        if (typeof (request.body.width) !== 'undefined') { newValue.width = request.body.width; }\r\n        if (typeof (request.body.height) !== 'undefined') { newValue.height = request.body.height; }\r\n        if (typeof (request.body.backgroundColor) !== 'undefined') { newValue.backgroundColor = request.body.backgroundColor; }\r\n        if (typeof (request.body.borderRadius) !== 'undefined') { newValue.borderRadius = request.body.borderRadius; }\r\n        if (typeof (request.body.boxShadow1) !== 'undefined') { newValue.boxShadow1 = request.body.boxShadow1; }\r\n        if (typeof (request.body.boxShadow2) !== 'undefined') { newValue.boxShadow2 = request.body.boxShadow2; }\r\n        if (typeof (request.body.boxShadow3) !== 'undefined') { newValue.boxShadow3 = request.body.boxShadow3; }\r\n        if (typeof (request.body.boxShadowColor) !== 'undefined') { newValue.boxShadowColor = request.body.boxShadowColor; }\r\n        if (typeof (request.body.zIndex) !== 'undefined') { newValue.zIndex = request.body.zIndex; }\r\n        if (typeof (request.body.margin) !== 'undefined') { newValue.margin = request.body.margin; }\r\n        if (typeof (request.body.padding) !== 'undefined') { newValue.padding = request.body.padding; }\r\n        const options = {\r\n            new: true,\r\n        }\r\n        modelPanel.findOneAndUpdate(conditions, { $set: newValue }, options, (err, updateData) => {\r\n            if (err) {\r\n                response.json({\r\n                    result: \"error\",\r\n                    data: {},\r\n                    message: `Cannot update. Error is: ${err}`\r\n                });\r\n                Variables.refreshDataPanel = true;\r\n            } else {\r\n                response.json({\r\n                    result: \"success\",\r\n                    data: updateData,\r\n                    message: \"Update successfully\"\r\n                });\r\n                Variables.refreshDataPanel = true;\r\n            }\r\n        });\r\n    } else {\r\n        response.json({\r\n            result: \"error\",\r\n            data: {},\r\n            message: \"You must enter _id to update\"\r\n        });\r\n    }\r\n});\r\nrouter.delete('/delete_panel', (request, response) => {\r\n    if (mongoose.Types.ObjectId.isValid(request.body._id) == true) {\r\n        modelPanel.findByIdAndRemove(request.body._id, (err, data) => {\r\n            if (err) {\r\n                response.json({\r\n                    result: \"error\",\r\n                    data: {},\r\n                    message: `Cannot delete. Error is: ${err}`\r\n                });\r\n                Variables.refreshDataPanel = true;\r\n            }\r\n            response.json({\r\n                result: \"success\",\r\n                data: {},\r\n                message: \"Delete successfully\"\r\n            });\r\n            Variables.refreshDataPanel = true;\r\n        })\r\n    } else {\r\n        response.json({\r\n            result: \"error\",\r\n            data: {},\r\n            message: \"ID not match\"\r\n        });\r\n    }\r\n});\r\nmodule.exports = router;","var express = require('express');\r\nvar router = express.Router();\r\nvar modelTextField = require('../models/model_textField');\r\nvar mongoose = require('mongoose');\r\nvar Variables = require('../Variable.js');\r\n\r\nrouter.get('/getdata', (req, res) => {\r\n    // Variables.refreshDataWordDisplay = true;\r\n    res.send(Variables.resultTextField)\r\n})\r\nrouter.post('/insert_textField', (request, response, next) => {\r\n    const newTextField = new modelTextField({\r\n        parent: request.body.parent,\r\n        tag: request.body.tag,\r\n        label: request.body.label,\r\n        value: request.body.value,\r\n        left: parseInt(request.body.left),\r\n        top: parseInt(request.body.top),\r\n        width: parseInt(request.body.width),\r\n        color: request.body.color,\r\n        fontSize: parseInt(request.body.fontSize),\r\n        rows: parseInt(request.body.rows),\r\n    });\r\n    newTextField.save((err) => {\r\n        if (err) {\r\n            response.json({\r\n                result: \"error\",\r\n                data: {},\r\n                message: `Error is: ${err}`\r\n            });\r\n            console.log(\"insert db error\");\r\n        } else {\r\n            response.json({\r\n                result: \"success\",\r\n                message: 'Add TextField Success',\r\n                data: {\r\n                    parent: request.body.parent,\r\n                    tag: request.body.tag,\r\n                    label: request.body.label,\r\n                    value: request.body.value,\r\n                    left: parseInt(request.body.left),\r\n                    top: parseInt(request.body.top),\r\n                    width: parseInt(request.body.width),\r\n                    color: request.body.color,\r\n                    fontSize: parseInt(request.body.fontSize),\r\n                    rows: parseInt(request.body.rows),\r\n                }\r\n            });\r\n            Variables.refreshDataTextField = true;\r\n            console.log(\"insert db ok\");\r\n        }\r\n    });\r\n});\r\nrouter.put('/update_textField', (request, response, next) => {\r\n    console.log(request.body);\r\n    let conditions = {};\r\n    if (mongoose.Types.ObjectId.isValid(request.body._id) == true) {\r\n        conditions._id = mongoose.Types.ObjectId(request.body._id);\r\n        let newValue = {};\r\n        if (typeof (request.body.parent) !== 'undefined') { newValue.parent = request.body.parent; }\r\n        if (typeof (request.body.tag) !== 'undefined') { newValue.tag = request.body.tag; }\r\n        if (typeof (request.body.label) !== 'undefined') { newValue.label = request.body.label; }\r\n        if (typeof (request.body.value) !== 'undefined') { newValue.value = request.body.value; }\r\n        if (typeof (request.body.left) !== 'undefined') { newValue.left = request.body.left; }\r\n        if (typeof (request.body.top) !== 'undefined') { newValue.top = request.body.top; }\r\n        if (typeof (request.body.width) !== 'undefined') { newValue.width = request.body.width; }\r\n        if (typeof (request.body.color) !== 'undefined') { newValue.color = request.body.color; }\r\n        if (typeof (request.body.fontSize) !== 'undefined') { newValue.fontSize = request.body.fontSize; }\r\n        if (typeof (request.body.rows) !== 'undefined') { newValue.rows = request.body.rows; }\r\n        const options = {\r\n            new: true,\r\n        }\r\n        modelTextField.findOneAndUpdate(conditions, { $set: newValue }, options, (err, updateData) => {\r\n            if (err) {\r\n                response.json({\r\n                    result: \"error\",\r\n                    data: {},\r\n                    message: `Cannot update. Error is: ${err}`\r\n                });\r\n                Variables.refreshDataTextField = true;\r\n            } else {\r\n                response.json({\r\n                    result: \"success\",\r\n                    data: updateData,\r\n                    message: \"Update successfully\"\r\n                });\r\n                Variables.refreshDataTextField = true;\r\n            }\r\n        });\r\n    } else {\r\n        response.json({\r\n            result: \"error\",\r\n            data: {},\r\n            message: \"You must enter _id to update\"\r\n        });\r\n    }\r\n});\r\nrouter.delete('/delete_textField', (request, response) => {\r\n    if (mongoose.Types.ObjectId.isValid(request.body._id) == true) {\r\n        modelTextField.findByIdAndRemove(request.body._id, (err, data) => {\r\n            if (err) {\r\n                response.json({\r\n                    result: \"error\",\r\n                    data: {},\r\n                    message: `Cannot delete. Error is: ${err}`\r\n                });\r\n                Variables.refreshDataTextField = true;\r\n            }\r\n            response.json({\r\n                result: \"success\",\r\n                data: {},\r\n                message: \"Delete successfully\"\r\n            });\r\n            Variables.refreshDataTextField = true;\r\n        })\r\n    } else {\r\n        response.json({\r\n            result: \"error\",\r\n            data: {},\r\n            message: \"ID not match\"\r\n        });\r\n    }\r\n});\r\n\r\nmodule.exports = router;","var express = require('express');\r\nvar router = express.Router();\r\nvar modelTextFieldInput = require('../models/model_textFieldInput');\r\nvar mongoose = require('mongoose');\r\nvar Variables = require('../Variable.js');\r\n\r\nrouter.get('/getdata', (req, res) => {\r\n    // Variables.refreshDataWordDisplay = true;\r\n    res.send(Variables.resultTextFieldInput)\r\n})\r\nrouter.post('/insert_textFieldInput', (request, response, next) => {\r\n    const newTextField = new modelTextFieldInput({\r\n        parent: request.body.parent,\r\n        tag: request.body.tag,\r\n        label: request.body.label,\r\n        value: request.body.value,\r\n        left: parseInt(request.body.left),\r\n        top: parseInt(request.body.top),\r\n        width: parseInt(request.body.width),\r\n        color: request.body.color,\r\n        fontSize: parseInt(request.body.fontSize),\r\n        rows: parseInt(request.body.rows),\r\n        text: request.body.text,\r\n    });\r\n    newTextField.save((err) => {\r\n        if (err) {\r\n            response.json({\r\n                result: \"error\",\r\n                data: {},\r\n                message: `Error is: ${err}`\r\n            });\r\n            console.log(\"insert db error\");\r\n        } else {\r\n            response.json({\r\n                result: \"success\",\r\n                message: 'Add WordDisplay Success',\r\n                data: {\r\n                    parent: request.body.parent,\r\n                    tag: request.body.tag,\r\n                    label: request.body.label,\r\n                    value: request.body.value,\r\n                    left: parseInt(request.body.left),\r\n                    top: parseInt(request.body.top),\r\n                    width: parseInt(request.body.width),\r\n                    color: request.body.color,\r\n                    fontSize: parseInt(request.body.fontSize),\r\n                    rows: parseInt(request.body.rows),\r\n                    text: request.body.text,\r\n                }\r\n            });\r\n            Variables.refreshDataTextFieldInput = true;\r\n            console.log(\"insert db ok\");\r\n        }\r\n    });\r\n});\r\nrouter.put('/update_textFieldInput', (request, response, next) => {\r\n    console.log(request.body);\r\n    let conditions = {};\r\n    if (mongoose.Types.ObjectId.isValid(request.body._id) == true) {\r\n        conditions._id = mongoose.Types.ObjectId(request.body._id);\r\n        let newValue = {};\r\n        if (typeof (request.body.parent) !== 'undefined') { newValue.parent = request.body.parent; }\r\n        if (typeof (request.body.tag) !== 'undefined') { newValue.tag = request.body.tag; }\r\n        if (typeof (request.body.label) !== 'undefined') { newValue.label = request.body.label; }\r\n        if (typeof (request.body.value) !== 'undefined') { newValue.value = request.body.value; }\r\n        if (typeof (request.body.left) !== 'undefined') { newValue.left = request.body.left; }\r\n        if (typeof (request.body.top) !== 'undefined') { newValue.top = request.body.top; }\r\n        if (typeof (request.body.width) !== 'undefined') { newValue.width = request.body.width; }\r\n        if (typeof (request.body.color) !== 'undefined') { newValue.color = request.body.color; }\r\n        if (typeof (request.body.fontSize) !== 'undefined') { newValue.fontSize = request.body.fontSize; }\r\n        if (typeof (request.body.rows) !== 'undefined') { newValue.rows = request.body.rows; }\r\n        if (typeof (request.body.text) !== 'undefined') { newValue.text = request.body.text; }\r\n        const options = {\r\n            new: true,\r\n        }\r\n        modelTextFieldInput.findOneAndUpdate(conditions, { $set: newValue }, options, (err, updateData) => {\r\n            if (err) {\r\n                response.json({\r\n                    result: \"error\",\r\n                    data: {},\r\n                    message: `Cannot update. Error is: ${err}`\r\n                });\r\n                Variables.refreshDataTextFieldInput = true;\r\n            } else {\r\n                response.json({\r\n                    result: \"success\",\r\n                    data: updateData,\r\n                    message: \"Update successfully\"\r\n                });\r\n                Variables.refreshDataTextFieldInput = true;\r\n            }\r\n        });\r\n    } else {\r\n        response.json({\r\n            result: \"error\",\r\n            data: {},\r\n            message: \"You must enter _id to update\"\r\n        });\r\n    }\r\n});\r\nrouter.delete('/delete_textFieldInput', (request, response) => {\r\n    if (mongoose.Types.ObjectId.isValid(request.body._id) == true) {\r\n        modelTextFieldInput.findByIdAndRemove(request.body._id, (err, data) => {\r\n            if (err) {\r\n                response.json({\r\n                    result: \"error\",\r\n                    data: {},\r\n                    message: `Cannot delete. Error is: ${err}`\r\n                });\r\n                Variables.refreshDataTextFieldInput = true;\r\n            }\r\n            response.json({\r\n                result: \"success\",\r\n                data: {},\r\n                message: \"Delete successfully\"\r\n            });\r\n            Variables.refreshDataTextFieldInput = true;\r\n        })\r\n    } else {\r\n        response.json({\r\n            result: \"error\",\r\n            data: {},\r\n            message: \"ID not match\"\r\n        });\r\n    }\r\n});\r\n\r\nmodule.exports = router;","var express = require('express');\r\nvar router = express.Router();\r\nvar modelBitDisplayImageLibrary = require('../models/model_bitdisplay_image_library');\r\nvar mongoose = require('mongoose');\r\nvar Variables = require('../Variable.js');\r\nconst mime = require('mime');\r\n\r\nrouter.get('/getdata', (req, res) => {\r\n    Variables.refreshDataBitDisplayImageLibrary = true;\r\n    res.send(Variables.resultBitDisplayImageLibrary)\r\n})\r\nrouter.post('/upload', (req, res, next) => {\r\n    var matches = req.body.data.match(/^data:([A-Za-z-+\\/]+);base64,(.+)$/),\r\n        response = {};\r\n    if (matches.length !== 3) {\r\n        res.json({\r\n            result: \"error\",\r\n            data: {},\r\n            message: `Invalid input string`\r\n        });\r\n    }\r\n    const newImage = new modelBitDisplayImageLibrary({\r\n        name: req.body.name,\r\n        img: req.body.data\r\n    })\r\n    newImage.save((err) => {\r\n        if (err) {\r\n            res.json({\r\n                result: \"error\",\r\n                data: {},\r\n                message: `Error is: ${err}`\r\n            });\r\n            console.log(\"insert db error\", err);\r\n        } else {\r\n            res.json({\r\n                result: \"success\",\r\n                message: 'Add BitAdjust Success',\r\n                data: {\r\n                    name: req.body.name,\r\n                    img: req.body.data\r\n                }\r\n            });\r\n            Variables.refreshDataBitDisplayImageLibrary = true;\r\n            console.log(\"insert db ok\");\r\n        }\r\n    });\r\n\r\n});\r\nrouter.delete('/delete', (request, response) => {\r\n    if (mongoose.Types.ObjectId.isValid(request.body._id) == true) {\r\n        modelBitDisplayImageLibrary.findByIdAndRemove(request.body._id, (err, data) => {\r\n            if (err) {\r\n                response.json({\r\n                    result: \"error\",\r\n                    data: {},\r\n                    message: `Cannot delete. Error is: ${err}`\r\n                });\r\n                Variables.refreshDataBitDisplayImageLibrary = true;\r\n            }\r\n            response.json({\r\n                result: \"success\",\r\n                data: {},\r\n                message: \"Delete successfully\"\r\n            });\r\n            Variables.refreshDataBitDisplayImageLibrary = true;\r\n        })\r\n    } else {\r\n        response.json({\r\n            result: \"error\",\r\n            data: {},\r\n            message: \"ID not match\"\r\n        });\r\n    }\r\n});\r\n\r\nmodule.exports = router;","module.exports = require(\"mime\");","var express = require('express');\r\nvar router = express.Router();\r\nvar modelElementImageLibrary = require('../models/model_element_image_library');\r\nvar mongoose = require('mongoose');\r\nvar Variables = require('../Variable.js');\r\n\r\nrouter.get('/getdata', (req, res) => {\r\n    Variables.refreshDataElementImageLibrary = true;\r\n    res.send(Variables.resultElementImageLibrary)\r\n})\r\nrouter.post('/insert_element', (request, response, next) => {\r\n    const newElement = new modelElementImageLibrary({\r\n        name: request.body.name,\r\n    });\r\n    newElement.save((err) => {\r\n        if (err) {\r\n            response.json({\r\n                result: \"error\",\r\n                data: {},\r\n                message: `Error is: ${err}`\r\n            });\r\n            console.log(\"insert db error\");\r\n        } else {\r\n            response.json({\r\n                result: \"success\",\r\n                message: 'Add Element Success',\r\n                data: {\r\n                    name: request.body.name,\r\n                }\r\n            });\r\n            Variables.refreshDataElementImageLibrary = true;\r\n            console.log(\"insert db ok\");\r\n        }\r\n    });\r\n});\r\nrouter.put('/update_elementLibrary', (req, res, next) => {\r\n    if (typeof (req.body.imgRun) !== 'undefined') {\r\n        var matches = req.body.imgRun.match(/^data:([A-Za-z-+\\/]+);base64,(.+)$/),\r\n            response = {};\r\n        if (matches.length !== 3) {\r\n            res.json({\r\n                result: \"error\",\r\n                data: {},\r\n                message: `Invalid input string`\r\n            });\r\n        }\r\n    }\r\n    if (typeof (req.body.imgStop) !== 'undefined') {\r\n        var matches = req.body.imgStop.match(/^data:([A-Za-z-+\\/]+);base64,(.+)$/),\r\n            response = {};\r\n        if (matches.length !== 3) {\r\n            res.json({\r\n                result: \"error\",\r\n                data: {},\r\n                message: `Invalid input string`\r\n            });\r\n        }\r\n    }\r\n    if (typeof (req.body.imgFault) !== 'undefined') {\r\n        var matches = req.body.imgFault.match(/^data:([A-Za-z-+\\/]+);base64,(.+)$/),\r\n            response = {};\r\n        if (matches.length !== 3) {\r\n            res.json({\r\n                result: \"error\",\r\n                data: {},\r\n                message: `Invalid input string`\r\n            });\r\n        }\r\n    }\r\n    if (typeof (req.body.imgLock) !== 'undefined') {\r\n        var matches = req.body.imgLock.match(/^data:([A-Za-z-+\\/]+);base64,(.+)$/),\r\n            response = {};\r\n        if (matches.length !== 3) {\r\n            res.json({\r\n                result: \"error\",\r\n                data: {},\r\n                message: `Invalid input string`\r\n            });\r\n        }\r\n    }\r\n    let conditions = {};\r\n    if (mongoose.Types.ObjectId.isValid(req.body._id) == true) {\r\n        conditions._id = mongoose.Types.ObjectId(req.body._id);\r\n        let newValue = {};\r\n        if (typeof (req.body.imgRun) !== 'undefined') { newValue.imgRun = req.body.imgRun; }\r\n        if (typeof (req.body.imgStop) !== 'undefined') { newValue.imgStop = req.body.imgStop; }\r\n        if (typeof (req.body.imgFault) !== 'undefined') { newValue.imgFault = req.body.imgFault; }\r\n        if (typeof (req.body.imgLock) !== 'undefined') { newValue.imgLock = req.body.imgLock; }\r\n        const options = {\r\n            new: true,\r\n        }\r\n        modelElementImageLibrary.findOneAndUpdate(conditions, { $set: newValue }, options, (err, updateData) => {\r\n            if (err) {\r\n                res.json({\r\n                    result: \"error\",\r\n                    data: {},\r\n                    message: `Cannot update. Error is: ${err}`\r\n                });\r\n                Variables.refreshDataElementImageLibrary = true;\r\n            } else {\r\n                res.json({\r\n                    result: \"success\",\r\n                    data: updateData,\r\n                    message: \"Update successfully\"\r\n                });\r\n                Variables.refreshDataElementImageLibrary = true;\r\n            }\r\n        });\r\n    } else {\r\n        response.json({\r\n            result: \"error\",\r\n            data: {},\r\n            message: \"You must enter _id to update\"\r\n        });\r\n    }\r\n});\r\nrouter.delete('/delete', (request, response) => {\r\n    if (mongoose.Types.ObjectId.isValid(request.body._id) == true) {\r\n        modelElementImageLibrary.findByIdAndRemove(request.body._id, (err, data) => {\r\n            if (err) {\r\n                response.json({\r\n                    result: \"error\",\r\n                    data: {},\r\n                    message: `Cannot delete. Error is: ${err}`\r\n                });\r\n                Variables.refreshDataElementImageLibrary = true;\r\n            }\r\n            response.json({\r\n                result: \"success\",\r\n                data: {},\r\n                message: \"Delete successfully\"\r\n            });\r\n            Variables.refreshDataElementImageLibrary = true;\r\n        })\r\n    } else {\r\n        response.json({\r\n            result: \"error\",\r\n            data: {},\r\n            message: \"ID not match\"\r\n        });\r\n    }\r\n});\r\n\r\nmodule.exports = router;","module.exports = require(\"body-parser\");","module.exports = require(\"http\");","module.exports = require(\"socket.io\");","var FinsClient = require('./fins_client.js');\r\n\r\nexports.FinsClient = FinsClient;\r\n","var dgram = require('dgram');\r\nvar inherits = require('util').inherits;\r\nvar EventEmitter = require('events').EventEmitter;\r\nvar constants = require('./constants');\r\n\r\nmodule.exports = FinsClient;\r\n\r\nfunction FinsClient (port,host,options) {\r\n  if(!(this instanceof FinsClient)) return new FinsClient(port,host,options);\r\n    EventEmitter.call(this);\r\n    FinsClient.init.call(this,port,host,options);\r\n};\r\n\r\ninherits(FinsClient,EventEmitter);\r\n\r\n\r\n\r\n_compareArrays = function(a,b) {\r\n    if(a.length !== b.length)\r\n        return false;\r\n    for(var i = a.length; i--;) {\r\n        if(a[i] !== b[i])\r\n            return false;\r\n    }\r\n    return true;\r\n};\r\n\r\n\r\n/* Credit to http://tech.karbassi.com/2009/12/17/pure-javascript-flatten-array/ */\r\n_mergeArrays = function(array) {\r\n    var flat = [];\r\n    for (var i = 0, l = array.length; i < l; i++){\r\n        var type = Object.prototype.toString.call(array[i]).split(' ').pop().split(']').shift().toLowerCase();\r\n        if (type) { flat = flat.concat(/^(array|collection|arguments|object)$/.test(type) ? _mergeArrays(array[i]) : array[i]); }\r\n    }\r\n    return flat;\r\n};\r\n\r\n\r\n_keyFromValue = function(dict,value) {\r\n    var key = Object.keys(dict)\r\n    .filter(function(key){\r\n        return dict[key] === value\r\n    }\r\n    )[0];\r\n\r\n    return key;\r\n};\r\n\r\n  \r\n\r\n_padHex = function (width,number) {\r\n    return(\"0\"*width + number.toString(16).substr(-width));\r\n};\r\n\r\n\r\n\r\n_wordsToBytes = function(words) {\r\n    var bytes = [];\r\n    if(!words.length) {\r\n        bytes.push((words & 0xff00) >> 8);\r\n        bytes.push((words & 0x00ff));\r\n    } else {\r\n        for(var i in words) {\r\n            bytes.push((words[i] & 0xff00) >> 8);\r\n            bytes.push((words[i] & 0x00ff));\r\n        }\r\n    }\r\n    return bytes;\r\n\r\n};\r\n\r\n\r\n_translateMemoryAddress = function(memoryAddress) {\r\n    var re = /(.)([0-9]*):?([0-9]*)/; \r\n    var matches = memoryAddress.match(re);\r\n    var decodedMemory = {\r\n        'MemoryArea':matches[1],\r\n        'Address':matches[2],\r\n        'Bit':matches[3]\r\n    };\r\n\r\n    var temp = [];\r\n    var byteEncodedMemory = [];\r\n\r\n    if(!constants.MemoryAreas[decodedMemory['MemoryArea']]) {\r\n        temp.push([0x82]);\r\n    } else {\r\n         temp.push([constants.MemoryAreas[decodedMemory['MemoryArea']]]);\r\n    }\r\n\r\n     temp.push(_wordsToBytes([decodedMemory['Address']]));\r\n     temp.push([0x00]);\r\n     byteEncodedMemory = _mergeArrays(temp);\r\n\r\n    return byteEncodedMemory;\r\n\r\n  \r\n};\r\n\r\n_incrementSID = function(sid) {\r\n    return (sid % 254) + 1;\r\n};\r\n\r\n_buildHeader = function(header) {\r\n    var builtHeader =  [\r\n        header.ICF,\r\n        header.RSV,\r\n        header.GCT,\r\n        header.DNA,\r\n        header.DA1,\r\n        header.DA2,\r\n        header.SNA,\r\n        header.SA1,\r\n        header.SA2,\r\n        header.SID \r\n    ];\r\n    return builtHeader;\r\n\r\n};\r\n\r\n_buildPacket = function(raw) {\r\n    var packet = [];\r\n    packet = _mergeArrays(raw);\r\n    return packet;\r\n};\r\n\r\n_getResponseType = function(buf) {\r\n    \r\n    var response = [];\r\n    response.push(buf[10]);\r\n    response.push(buf[11]);\r\n    return response;\r\n};\r\n\r\n_processDefault = function(buf,rinfo) {\r\n    var sid = buf[9];\r\n    var command = (buf.slice(10,12)).toString(\"hex\");\r\n    var response = (buf.slice(12,14)).toString(\"hex\");\r\n    return {remotehost:rinfo.address,sid:sid,command:command,response:response};\r\n\r\n};\r\n\r\n_processStatusRead = function(buf,rinfo) {\r\n    var sid = buf[9];\r\n    var command = (buf.slice(10,12)).toString(\"hex\");\r\n    var response = (buf.slice(12,14)).toString(\"hex\");\r\n    var status = buf[14];\r\n    var mode = buf[15];\r\n    var fatalErrorData = {};\r\n    var nonFatalErrorData = {};    \r\n    for(var i in constants.FatalErrorData) {\r\n        if((buf.readInt16BE(17) & constants.FatalErrorData[i]) !=0 )\r\n            fatalErrorData.push(i);\r\n    }\r\n\r\n    for(var i in constants.nonFatalErrorData) {\r\n        if((buf.readInt16BE(18) & constants.nonFatalErrorData[i]) !=0 )\r\n            nonFatalErrorData.push(i);\r\n    };\r\n    var statusCodes = constants.Status;\r\n    var runModes = constants.Modes;\r\n\r\n\r\n    return {\r\n        remotehost:rinfo.address,\r\n        sid:sid,\r\n        command:command,\r\n        response:response,\r\n        status:_keyFromValue(statusCodes,status),\r\n        mode:_keyFromValue(runModes,mode),\r\n        fatalErrorData : fatalErrorData || null,\r\n        nonFatalErrorData : nonFatalErrorData || null\r\n    };\r\n};\r\n\r\n_processMemoryAreaRead = function(buf,rinfo) {\r\n    var data = [];\r\n    var sid = buf[9];\r\n    var command = (buf.slice(10,12)).toString(\"hex\");\r\n    var response = (buf.slice(12,14)).toString(\"hex\");\r\n    var values = (buf.slice(14,buf.length));\r\n    for(var i = 0; i < values.length; i+=2) {\r\n        data.push(values.readInt16BE(i));\r\n    }\r\n    return {remotehost:rinfo.address,sid:sid,command:command,response:response,values:data};\r\n};\r\n\r\n\r\n_processReply = function(buf,rinfo) {\r\n    var commands = constants.Commands;\r\n    var responseType = (_getResponseType(buf)).join(' ');\r\n    \r\n    switch(responseType) {\r\n       \r\n        case commands.CONTROLLER_STATUS_READ.join(' ') : \r\n            return _processStatusRead(buf,rinfo);\r\n            break;\r\n\r\n        case commands.MEMORY_AREA_READ.join(' '):\r\n            return _processMemoryAreaRead(buf,rinfo);\r\n            break;\r\n\r\n        default:\r\n            return _processDefault(buf,rinfo);\r\n\r\n    };\r\n\r\n};\r\n_decodePacket = function(buf,rinfo) {\r\n    var data = [];\r\n    var command = (buf.slice(10,12)).toString(\"hex\");\r\n    var code = (buf.slice(12,14)).toString(\"hex\");\r\n    var values = (buf.slice(14,buf.length));\r\n    for(var i = 0; i < values.length; i+=2) {\r\n        data.push(values.readInt16BE(i));\r\n    }\r\n    return {remotehost:rinfo.address,command:command,code:code,values:data};\r\n};\r\n\r\n\r\nFinsClient.init = function (port,host,options) {\r\n    var self = this;\r\n    var defaultHost = constants.DefaultHostValues;\r\n    var defaultOptions = constants.DefaultOptions;\r\n    this.port = port || defaultHost.port;\r\n    this.host = host || defaultHost.host;\r\n    this.timeout = (options && options.timeout) || defaultOptions.timeout;\r\n    this.socket = dgram.createSocket('udp4');\r\n    this.responded = false;\r\n    this.header = constants.DefaultFinsHeader;\r\n\r\n    function receive (buf,rinfo) {\r\n      self.responded = true;\r\n      var msg = _processReply(buf,rinfo);\r\n      self.emit('reply',msg);\r\n    }\r\n\r\n    function listening() {\r\n        self.emit('open');\r\n    }\r\n\r\n    function close() {\r\n        self.emit('close');\r\n    }\r\n\r\n    function error(err) {\r\n        self.emit('error',err);\r\n    }\r\n\r\n    this.socket.on('message',receive);\r\n    this.socket.on('listening',listening);\r\n    this.socket.on('close',close);\r\n    this.socket.on('error',error);\r\n\r\n    if(this.timeout){\r\n        setTimeout(function cb_setTimeout() {\r\n            if(self.responded == false){\r\n                self.emit('timeout',self.host);\r\n            }\r\n        },self.timeout);\r\n    }\r\n};\r\n\r\n\r\nFinsClient.prototype.read = function(address,regsToRead,callback) {\r\n    var self = this;\r\n    self.header.SID = _incrementSID(self.header.SID);\r\n    var header = _buildHeader(self.header);\r\n    var address = _translateMemoryAddress(address);\r\n    var regsToRead = _wordsToBytes(regsToRead);\r\n    var command = constants.Commands.MEMORY_AREA_READ;\r\n    var commandData = [address,regsToRead];\r\n    var packet = _buildPacket([header,command,commandData]);\r\n    var buffer = new Buffer(packet);\r\n    this.socket.send(buffer,0,buffer.length,self.port,self.host,callback);\r\n};\r\n\r\nFinsClient.prototype.write = function(address,dataToBeWritten,callback) {\r\n    var self = this;\r\n    self.header.SID = _incrementSID(self.header.SID);\r\n    var header = _buildHeader(self.header);\r\n    var address = _translateMemoryAddress(address);\r\n    var regsToWrite = _wordsToBytes((dataToBeWritten.length || 1));\r\n    var command = constants.Commands.MEMORY_AREA_WRITE;\r\n    var dataToBeWritten = _wordsToBytes(dataToBeWritten);\r\n    var commandData = [address,regsToWrite,dataToBeWritten];\r\n    var packet = _buildPacket([header,command,commandData]);\r\n    var buffer = new Buffer(packet);\r\n    this.socket.send(buffer,0,buffer.length,self.port,self.host,callback);\r\n};\r\n\r\nFinsClient.prototype.fill = function(address,dataToBeWritten,regsToWrite,callback) {\r\n    var self = this;\r\n    self.header.SID = _incrementSID(self.header.SID);\r\n    var header = _buildHeader(self.header);\r\n    var address = _translateMemoryAddress(address);\r\n    var regsToWrite = _wordsToBytes(regsToWrite);\r\n    var command = constants.Commands.MEMORY_AREA_FILL;\r\n    var dataToBeWritten = _wordsToBytes(dataToBeWritten);\r\n    var commandData = [address,regsToWrite,dataToBeWritten];\r\n    var packet = _buildPacket([header,command,commandData]);\r\n    var buffer = new Buffer(packet);\r\n    this.socket.send(buffer,0,buffer.length,self.port,self.host,callback);\r\n};\r\n\r\nFinsClient.prototype.run = function(callback) {\r\n    var self = this;\r\n    self.header.SID = _incrementSID(self.header.SID);\r\n    var header = _buildHeader(self.header);\r\n    var command = constants.Commands.RUN;\r\n    var packet = _buildPacket([header,command]);\r\n    var buffer = new Buffer(packet);\r\n    this.socket.send(buffer,0,buffer.length,self.port,self.host,callback);\r\n};\r\n\r\nFinsClient.prototype.stop = function(callback) {\r\n    var self = this;\r\n    self.header.SID = _incrementSID(self.header.SID);\r\n    var header = _buildHeader(self.header);\r\n    var command = constants.Commands.STOP;\r\n    var packet = _buildPacket([header,command]);\r\n    var buffer = new Buffer(packet);\r\n    this.socket.send(buffer,0,buffer.length,self.port,self.host,callback);\r\n};\r\n\r\n\r\nFinsClient.prototype.status = function(callback) {\r\n    var self = this;\r\n    self.header.SID = _incrementSID(self.header.SID);\r\n    var header = _buildHeader(self.header);\r\n    var command = constants.Commands.CONTROLLER_STATUS_READ;\r\n    var packet = _buildPacket([header,command]);\r\n    var buffer = new Buffer(packet);\r\n    this.socket.send(buffer,0,buffer.length,self.port,self.host,callback);\r\n\r\n\r\n};\r\n\r\n\r\nFinsClient.prototype.close = function(){\r\n    this.socket.close();\r\n};\r\n\r\n\r\n","module.exports = require(\"dgram\");","module.exports = require(\"events\");","\r\nmodule.exports.DefaultHostValues = {\r\n    host : '127.0.0.1',\r\n    port : 9600\r\n};\r\n\r\n\r\n\r\nmodule.exports.DefaultOptions = {\r\n   timeout: 2000\r\n};\r\n\r\n\r\nmodule.exports.DefaultFinsHeader = {\r\n    ICF : 0x80,\r\n    RSV : 0x00,\r\n    GCT : 0x02,\r\n    DNA : 0x00,\r\n    DA1 : 0x00,\r\n    DA2 : 0x00,\r\n    SNA : 0x00,\r\n    SA1 : 0x22,\r\n    SA2 : 0x00,\r\n    SID : 0x00\r\n};\r\n\r\nmodule.exports.Commands = {\r\n    CONTROLLER_STATUS_READ : [0x06,0x01],\r\n    MEMORY_AREA_READ       : [0x01,0x01],\r\n    MEMORY_AREA_WRITE      : [0x01,0x02],\r\n    MEMORY_AREA_FILL       : [0x01,0x03],\r\n    RUN                    : [0x04,0x01],\r\n    STOP                   : [0x04,0x02]\r\n};\r\n\r\nmodule.exports.FatalErrorData = {\r\n    SYSTEM_ERROR      : 1 << 6,\r\n    IO_SETTING_ERROR  : 1 << 10,\r\n    IO_POINT_OVERFLOW : 1 << 11,\r\n    CPU_BUS_ERROR     : 1 << 14,\r\n    MEMORY_ERROR      : 1 << 15\r\n};\r\n\r\nmodule.exports.NonFatalErrorData = {\r\n    PC_LINK_ERROR         : 1 << 0 ,\r\n    HOST_LINK_ERROR       : 1 << 1,\r\n    BATTERY_ERROR         : 1 << 4,\r\n    REMOTE_IO_ERROR       : 1 << 5,\r\n    SPECIAL_IO_UNIT_ERROR : 1 << 8,\r\n    IO_COLLATE_ERROR      : 1 << 9,\r\n    SYSTEM_ERROR          : 1 << 15\r\n};\r\n\r\nmodule.exports.Status = {\r\n    CPU_STANDBY : 0x80,\r\n    STOP        : 0x00,\r\n    RUN         : 0x01\r\n};\r\n\r\nmodule.exports.Modes = {\r\n    MONITOR : 0x02,\r\n    DEBUG   : 0x01,\r\n    RUN     : 0x04\r\n};\r\n\r\n\r\nmodule.exports.MemoryAreas = {\r\n    'E' : 0xA0,//Extended Memories\r\n    'C' : 0xB0,//CIO\r\n    'W' : 0xB1,//Work Area\r\n    'H' : 0xB2,//Holding Bit\r\n    'A' : 0xB3,//Auxiliary Bit\r\n    'D' : 0x82//Data Memories\r\n};\r\n\r\nmodule.exports.Errors = {\r\n    '0000': 'Completed normally',\r\n    '0001': 'Service was interrupted',\r\n    '0101': 'Local node not part of Network',\r\n    '0102': 'Token time-out, node number too large',\r\n    '0103': 'Number of transmit retries exceeded',\r\n    '0104': 'Maximum number of frames exceeded',\r\n    '0105': 'Node number setting error (range)',\r\n    '0106': 'Node number duplication error'\r\n};\r\n\r\n","var Variables = require('./Variable.js');\r\nexports = module.exports = function (io, client) {\r\n  io.sockets.on('connection', function (socket) {\r\n    console.log(\"co nguoi ket noi\" + socket.id);\r\n    socket.emit('UpdateElement', Variables.resultElement);\r\n    socket.emit('UpdateBitAdjust', Variables.resultBitAdjust);\r\n    socket.emit('UpdateBitDisplay', Variables.resultBitDisplay);\r\n    socket.emit('UpdateWordAdjust', Variables.resultWordAdjust);\r\n    socket.emit('UpdateWordDisplay', Variables.resultWordDisplay);\r\n    socket.emit('UpdateDWordAdjust', Variables.resultDWordAdjust);\r\n    socket.emit('UpdateDWordDisplay', Variables.resultDWordDisplay);\r\n\r\n    socket.on(\"disconnect\", function () {\r\n      console.log(\"ngat kekt noi\");\r\n    });\r\n    setInterval(function () {\r\n      socket.emit('UpdateElement', Variables.resultElement);\r\n      socket.emit('UpdateBitAdjust', Variables.resultBitAdjust);\r\n      socket.emit('UpdateBitDisplay', Variables.resultBitDisplay);\r\n      socket.emit('UpdateWordAdjust', Variables.resultWordAdjust);\r\n      socket.emit('UpdateWordDisplay', Variables.resultWordDisplay);\r\n      socket.emit('UpdateDWordAdjust', Variables.resultDWordAdjust);\r\n      socket.emit('UpdateDWordDisplay', Variables.resultDWordDisplay);\r\n    }, 60000);\r\n\r\n    //WRITE TO PLC\r\n    socket.on(\"Client-send-data\", function (data) {\r\n      console.log(data)\r\n      //Force 1\r\n      if (data.NameCommand === 'ElementForce_Run' && !isNaN(data.tag)) {\r\n        client.write('D1000', [100, 100, data.tag, data.tag]);\r\n      }\r\n      //Force 0\r\n      if (data.NameCommand === 'ElementForce_Stop' && !isNaN(data.tag)) {\r\n        client.write('D1000', [101, 101, data.tag, data.tag]);\r\n      }\r\n      //UnForce\r\n      if (data.NameCommand === 'ElementForce_Auto' && !isNaN(data.tag)) {\r\n        client.write('D1000', [102, 102, data.tag, data.tag]);\r\n      }\r\n      //Interlock\r\n      if (data.NameCommand === 'ElementForce_Interlock' && !isNaN(data.tag)) {\r\n        client.write('D1000', [103, 103, data.tag, data.tag]);\r\n      }\r\n\r\n\r\n      //BitAdjust\r\n      if (data.NameCommand === 'BitAdjustForce' && !isNaN(data.tag)) {\r\n        client.write('D1000', [110, 110, data.mode, data.mode, data.tag, data.tag]);\r\n      }\r\n      //WordAdjust\r\n      if (data.NameCommand === 'WordAdjustForce' && !isNaN(data.tag)) {\r\n        client.write('D1000', [111, 111, data.tag, data.tag, data.value, data.value]);\r\n      }\r\n      //DWordAdjust\r\n      if (data.NameCommand === 'DWordAdjustForce' && !isNaN(data.tag)) {\r\n        var heightValueDWordAdjust = parseInt(data.value / 65536);\r\n        var lowValueDWordAdjust = parseInt(data.value % 65536);\r\n        client.write('D1000', [112, 112, data.tag, data.tag, heightValueDWordAdjust,heightValueDWordAdjust,lowValueDWordAdjust,lowValueDWordAdjust]);\r\n      }\r\n    });\r\n  });\r\n}","'use strict'\n\nvar fs = require('fs')\nvar path = require('path')\nvar ModbusCore = require('./modbus-client-core.js')\nvar ModbusTcpClient = require('./modbus-tcp-client.js')\n\nexports.client = {\n  tcp: {\n    core: ModbusCore.compose(ModbusTcpClient),\n    complete: ModbusCore.compose(ModbusTcpClient)\n  },\n  // serial: {\n  //   core: require('./modbus-serial-client.js'),\n  //   complete: require('./modbus-serial-client.js')\n  // },\n  handler: {\n\n  }\n\n}\n\nfs.readdirSync(path.join(__dirname, '/handler/client'))\n  .filter(function (file) {\n    return file.substr(-3) === '.js'\n  }).forEach(function (file) {\n    exports.client.tcp.complete = exports.client.tcp.complete.compose(require('./handler/client/' + file))\n    exports.client.serial.complete = exports.client.serial.complete.compose(require('./handler/client/' + file))\n    exports.client.handler[file.substr(0, file.length - 3)] = require('./handler/client/' + file)\n  })\n\nexports.server = {\n  tcp: {\n    core: require('./modbus-tcp-server.js'),\n    complete: require('./modbus-tcp-server.js')\n  },\n  handler: { }\n}\n\nfs.readdirSync(path.join(__dirname, '/handler/server'))\n  .filter(function (file) {\n    return file.substr(-3) === '.js'\n  }).forEach(function (file) {\n    exports.server.tcp.complete = exports.server.tcp.complete.compose(require('./handler/server/' + file))\n    exports.server.handler[file.substr(0, file.length - 3)] = require('./handler/server/' + file)\n  })\n","'use strict'\n\nvar stampit = require('stampit')\nvar Log = require('stampit-log')\nvar StateMachine = require('stampit-state-machine')\n\nvar ExceptionMessage = {\n  0x01: 'ILLEGAL FUNCTION',\n  0x02: 'ILLEGAL DATA ADDRESS',\n  0x03: 'ILLEGAL DATA VALUE',\n  0x04: 'SLAVE DEVICE FAILURE',\n  0x05: 'ACKNOWLEDGE',\n  0x06: 'SLAVE DEVICE BUSY',\n  0x08: 'MEMORY PARITY ERROR',\n  0x0A: 'GATEWAY PATH UNAVAILABLE',\n  0x0B: 'GATEWAY TARGET DEVICE FAILED TO RESPOND'\n\n}\n\nmodule.exports = stampit()\n  .compose(StateMachine)\n  .compose(Log)\n  .init(function () {\n    var responseHandler = { }\n    var currentRequest = null\n\n    this.reqFifo = []\n\n    var init = function () {\n      if (!this.timeout) {\n        this.timeout = 5 * 1000 // 5s\n      }\n\n      this.on('data', onData)\n      this.on('newState_ready', flush)\n      this.on('newState_closed', onClosed)\n    }.bind(this)\n\n    var flush = function () {\n      this.log.debug('Trying to flush data.')\n\n      if (this.reqFifo.length === 0) {\n        this.log.debug('Nothing in request pipe.')\n        return\n      }\n\n      currentRequest = this.reqFifo.shift()\n\n      currentRequest.timeout = setTimeout(function () {\n        currentRequest.defer.reject({ err: 'timeout' })\n        this.emit('trashCurrentRequest')\n\n        this.logError('Request timed out.')\n\n        this.setState('error')\n      //                this.setState('ready')\n      }.bind(this), this.timeout)\n\n      this.setState('waiting')\n      this.emit('send', currentRequest.pdu)\n\n      this.log.debug('Data flushed.')\n    }.bind(this)\n\n    var onClosed = function () {\n      if (currentRequest) {\n        this.log.debug('Clearing timeout of the current request.')\n        clearTimeout(currentRequest.timeout)\n      }\n\n      this.log.debug('Cleaning up request fifo.')\n      this.reqFifo = []\n    }.bind(this)\n\n    var handleErrorPDU = function (pdu) {\n      var errorCode = pdu.readUInt8(0)\n\n      // if error code is smaller than 0x80\n      // ths pdu describes no error\n\n      if (errorCode < 0x80) {\n        return false\n      }\n\n      // pdu describes an error\n\n      var exceptionCode = pdu.readUInt8(1)\n      var message = ExceptionMessage[exceptionCode]\n\n      var err = {\n        errorCode: errorCode,\n        exceptionCode: exceptionCode,\n        message: message\n      }\n\n      // call the desired deferred\n      currentRequest.defer.reject(err)\n\n      return true\n    }\n\n    /**\n      *  Handle the incoming data, cut out the mbap\n      *  packet and send the pdu to the listener\n      */\n    var onData = function (pdu) {\n      this.log.debug('received data')\n\n      if (!currentRequest) {\n        this.log.debug('No current request.')\n        return\n      }\n\n      clearTimeout(currentRequest.timeout)\n\n      // check pdu for error\n      if (handleErrorPDU(pdu)) {\n        this.log.debug('Received pdu describes an error.')\n        currentRequest = null\n        this.setState('ready')\n        return\n      }\n\n      // handle pdu\n\n      var handler = responseHandler[currentRequest.fc]\n      if (!handler) {\n        this.log.debug('Found not handler for fc', currentRequest.fc)\n        throw new Error('No handler implemented for fc ' + currentRequest.fc)\n      }\n\n      handler(pdu, currentRequest)\n\n      this.setState('ready')\n    }.bind(this)\n\n    this.addResponseHandler = function (fc, handler) {\n      responseHandler[fc] = handler\n\n      return this\n    }.bind(this)\n\n    this.queueRequest = function (fc, pdu, defer) {\n      var req = {\n        fc: fc,\n        defer: defer,\n        pdu: pdu\n      }\n\n      this.reqFifo.push(req)\n\n      if (this.inState('ready')) {\n        flush()\n      }\n    }\n\n    init()\n  })\n","'use strict'\n\nvar stampit = require('stampit')\n\nmodule.exports = stampit()\n  .init(function () {\n    var reqId = 0\n    var currentRequestId = reqId\n    var closedOnPurpose = false\n    var reconnect = false\n    var trashRequestId\n    var buffer = Buffer.alloc(0)\n    var socket\n    var closed = true\n\n    var init = function () {\n      this.setState('init')\n\n      if (!this.unitId) { this.unitId = 0 }\n      if (!this.protocolVersion) { this.protocolVersion = 0 }\n      if (!this.port) { this.port = 502 }\n      if (!this.host) { this.host = 'localhost' }\n      if (!this.autoReconnect) { this.autoReconnect = false }\n      if (!this.reconnectTimeout) { this.reconnectTimeout = 0 }\n\n      this.on('send', onSend)\n      this.on('newState_error', onError)\n      this.on('trashCurrentRequest', onTrashCurrentRequest)\n\n      this.on('stateChanged', this.log.debug)\n    }.bind(this)\n\n    var connect = function () {\n      this.setState('connect')\n\n      if (!socket) {\n        /* for testing you are able to inject a mocking object\n         * a simple event object should do the trick */\n        if (this.injectedSocket) {\n          socket = this.injectedSocket\n        } else {\n          socket = require('net').Socket()\n        }\n        socket.on('connect', onSocketConnect)\n        socket.on('close', onSocketClose)\n        socket.on('error', onSocketError)\n        socket.on('data', onSocketData)\n      }\n\n      socket.connect(this.port, this.host)\n    }.bind(this)\n\n    var onSocketConnect = function () {\n      closed = false\n      this.emit('connect')\n      this.setState('ready')\n    }.bind(this)\n\n    var onSocketClose = function (hadErrors) {\n      this.log.debug('Socket closed with error', hadErrors)\n\n      this.setState('closed')\n      this.emit('close')\n\n      if (!closedOnPurpose && (this.autoReconnect || reconnect)) {\n        setTimeout(function () {\n          reconnect = false\n\n          connect()\n        }, this.reconnectTimeout || 0)\n      }\n    }.bind(this)\n\n    var onSocketError = function (err) {\n      this.logError('Socket Error', err)\n\n      this.setState('error')\n      this.emit('error', err)\n    }.bind(this)\n\n    var onSocketData = function (data) {\n      this.log.debug('received data')\n\n      buffer = Buffer.concat([buffer, data])\n\n      while (buffer.length > 7) {\n        // 1. extract mbap\n\n        var id = buffer.readUInt16BE(0)\n        var len = buffer.readUInt16BE(4)\n        var protocolId = buffer.readUInt16BE(2)\n\n        if (protocolId !== 0x0000) {\n          this.log.debug('current mbap contains invalid protocol id.')\n          this.setState('error')\n          console.log(protocolId)\n          this.emit('error', new Error('Socket out of sync, received invalid protocol id'))\n          return\n        }\n\n        if (id === trashRequestId) {\n          this.log.debug('current mbap contains trashed request id.')\n\n          return\n        }\n\n        if (id !== currentRequestId) {\n          this.log.debug('current mbap contains invalid request id.')\n          this.setState('error')\n          this.emit('error', new Error('Socket out of sync, received invalid request id'))\n          return\n        }\n\n        /* Not all data received yet. */\n        if (buffer.length < 7 + len - 1) {\n          break\n        }\n\n        // 2. extract pdu\n\n        var pdu = buffer.slice(7, 7 + len - 1)\n\n        this.log.debug('PDU extracted')\n\n        // emit data event and let the\n        // listener handle the pdu\n\n        this.emit('data', pdu)\n\n        buffer = buffer.slice(pdu.length + 7, buffer.length)\n      }\n    }.bind(this)\n\n    var onError = function () {\n      this.logError('Client in error state.')\n\n      socket.destroy()\n    }.bind(this)\n\n    var onSend = function (pdu) {\n      this.log.debug('Sending pdu to the socket.')\n\n      reqId = (reqId + 1) % 0xffff\n\n      var head = Buffer.allocUnsafe(7)\n\n      head.writeUInt16BE(reqId, 0)\n      head.writeUInt16BE(this.protocolVersion, 2)\n      head.writeUInt16BE(pdu.length + 1, 4)\n      head.writeUInt8(this.unitId, 6)\n\n      var pkt = Buffer.concat([head, pdu])\n\n      currentRequestId = reqId\n\n      socket.write(pkt)\n    }.bind(this)\n\n    var onTrashCurrentRequest = function () {\n      trashRequestId = currentRequestId\n    }\n\n    this.connect = function () {\n      this.setState('connect')\n\n      connect()\n\n      return this\n    }\n\n    this.reconnect = function () {\n      if (!this.inState('closed')) {\n        return this\n      }\n\n      closedOnPurpose = false\n      reconnect = true\n\n      this.log.debug('Reconnecting client.')\n\n      socket.end()\n\n      return this\n    }\n\n    this.close = function () {\n      if (closed) {\n        return this\n      }\n\n      closed = true\n      closedOnPurpose = true\n\n      this.log.debug('Closing client on purpose.')\n\n      socket.end()\n\n      return this\n    }\n\n    // following is required to test of stream processing\n    // and is only during test active\n    if (process.env.DEBUG) {\n      this.getSocket = function () {\n        return socket\n      }\n      this.setCurrentRequestId = function (id) {\n        currentRequestId = id\n      }\n      this.registerOnSend = function (_onSend) {\n        this.removeListener(onSend)\n        this.on('send', _onSend.bind(this))\n      }\n    }\n\n    init()\n  })\n","'use strict'\n\nvar stampit = require('stampit')\nvar EventBus = require('stampit-event-bus')\nvar Log = require('stampit-log')\n\nvar core = stampit()\n  .compose(EventBus, Log)\n  .init(function () {\n    var coils\n    var holding\n    var input\n    var discrete\n    var handler = { }\n\n    var init = function () {\n      if (!this.coils) {\n        coils = Buffer.alloc(1024, 0)\n      } else {\n        coils = this.coils\n      }\n\n      if (!this.holding) {\n        holding = Buffer.alloc(1024, 0)\n      } else {\n        holding = this.holding\n      }\n\n      if (!this.input) {\n        input = Buffer.alloc(1024, 0)\n      } else {\n        input = this.input\n      }\n\n      if (!this.discrete) {\n        /* a hack to assure downward compatibility\n         * if no discrete input is specified then we use\n         * the input buffer as the discrete buffer */\n        discrete = input\n      } else {\n        discrete = this.discrete\n      }\n    }.bind(this)\n\n    this.onData = function (pdu, callback) {\n      // get fc and byteCount in advance\n      var fc = pdu.readUInt8(0)\n\n      // get the pdu handler\n      var reqHandler = handler[fc]\n\n      if (!reqHandler) {\n        // write a error/exception pkt to the\n        // socket with error code fc + 0x80 and\n        // exception code 0x01 (Illegal Function)\n\n        this.log.debug('no handler for fc', fc)\n\n        var buf = Buffer.alloc(2)\n        buf.writeUInt8(fc + 0x80, 0)\n        buf.writeUInt8(0x01, 1)\n\n        callback(buf)\n\n        return\n      }\n\n      reqHandler(pdu, function (response) {\n        callback(response)\n      })\n    }.bind(this)\n\n    this.setRequestHandler = function (fc, callback) {\n      this.log.debug('setting request handler', fc)\n\n      handler[fc] = callback\n\n      return this\n    }\n\n    this.getCoils = function () {\n      return coils\n    }\n\n    this.getInput = function () {\n      return input\n    }\n\n    this.getHolding = function () {\n      return holding\n    }\n\n    this.getDiscrete = function () {\n      return discrete\n    }\n\n    init()\n  })\n\nmodule.exports = core\n","module.exports = require(\"stampit-event-bus\");","'use strict'\nvar stampit = require('stampit')\nvar logger = require('stampit-log')\n\nmodule.exports = stampit()\n  .compose(logger)\n  .init(function () {\n    let buffer = Buffer.alloc(0)\n\n    let init = function () {\n      if (!this.socket || this.socketId === undefined || !this.onRequest) {\n        throw new Error('No Socket defined.')\n      }\n\n      this.socket.on('end', this.onSocketEnd)\n      this.socket.on('data', this.onSocketData)\n      this.socket.on('error', this.onSocketError)\n    }.bind(this)\n\n    this.onSocketEnd = function () {\n      if (this.onEnd) {\n        this.onEnd()\n      }\n\n      this.log.debug('connection closed, socket', this.socketId)\n    }.bind(this)\n\n    this.onSocketData = function (data) {\n      this.log.debug('received data socket', this.socketId, data.byteLength)\n\n      buffer = Buffer.concat([buffer, data])\n\n      while (buffer.length > 8) {\n        // 1. extract mbap\n\n        let len = buffer.readUInt16BE(4)\n        let request = {\n          trans_id: buffer.readUInt16BE(0),\n          protocol_ver: buffer.readUInt16BE(2),\n          unit_id: buffer.readUInt8(6)\n        }\n\n        // 2. extract pdu\n\n        /* received data is not complete yet.\n         * break loop and wait for more data. */\n\n        if (buffer.length < 7 + len - 1) {\n          break\n        }\n\n        let pdu = buffer.slice(7, 7 + len)\n\n        // emit data event and let the\n        // listener handle the pdu\n\n        this.log.debug('PDU extracted.')\n\n        this.onRequest({ request: request, pdu: pdu, socket: this.socket })\n\n        buffer = buffer.slice(pdu.length + 7, buffer.length)\n      }\n    }.bind(this)\n\n    this.onSocketError = function (e) {\n      this.logError('Socker error', e)\n    }.bind(this)\n\n    init()\n  })\n\n","var modelPoint = require('./models/model_point');\r\nvar Variables = require('./Variable.js');\r\nvar SubFunction = require('./SubFunction.js');\r\n\r\nexports = module.exports = function (clientMB, io) {\r\n  var numberBag = 20;\r\n  var indexBagCurrent = 0;\r\n  var indexBagCobotGet = 0;\r\n  var layerCurrent = 0;\r\n  if (Variables.ChoiseModbus) {\r\n    setInterval(function () {\r\n      try {\r\n        clientMB\r\n          .readHoldingRegisters(Variables.WordDisplayCobotStart, Variables.LengthOfWordDisplayCobot + Variables.LengthOfWordAdjustCobot)\r\n          .then(function (resp) {\r\n            Variables.WordDisplay = SubFunction.ReadWordOfPLC(0, Variables.LengthOfWordDisplayCobot, resp.register);\r\n            Variables.WordAdjust = SubFunction.ReadWordOfPLC(20, Variables.LengthOfWordAdjustCobot, resp.register);\r\n            Variables.WordAdjust.push(Variables.counter)\r\n          })\r\n          .catch(function () {\r\n            console.error(\r\n              require(\"util\").inspect(arguments, {\r\n                depth: null\r\n              })\r\n            );\r\n          });\r\n      }\r\n      catch (err) { console.log(err); StatusConnectPLC = 0; }\r\n      // try {\r\n\r\n      //   clientMB\r\n      //     .readHoldingRegisters(Variables.WordCobotStart, Variables.LengthOfWordCobot)\r\n      //     .then(function (resp) {\r\n      //       console.log(resp.register)\r\n      //       Variables.WordCobot = SubFunction.ReadWordOfPLC(0, Variables.LengthOfWordCobot, resp.register);\r\n      //       io.sockets.emit('UpdatePointCurrent', Variables.WordCobot)\r\n      //       // console.log(Variables.WordDisplay);\r\n      //       indexBagCurrent = Variables.WordCobot[0] % numberBag\r\n      //       if (indexBagCurrent===0) indexBagCurrent=numberBag\r\n      //       indexBagCobotGet = Variables.WordCobot[0] % (numberBag*2)\r\n      //       if(indexBagCobotGet===0){indexBagCobotGet=numberBag*2}\r\n      //       layerCurrent=parseInt((Variables.WordCobot[0]-1)/numberBag)\r\n      //     })\r\n      //     .catch(function () {\r\n      //       console.error(\r\n      //         require(\"util\").inspect(arguments, {\r\n      //           depth: null\r\n      //         })\r\n      //       );\r\n      //     });\r\n      // }\r\n      // catch (err) { console.log(err); StatusConnectPLC = 0; }\r\n    }, 100)\r\n  }\r\n  // var myInt1 = setInterval(function () {\r\n  //   if (Variables.WordCobot[0] > 0 && Variables.WordCobot[0] <= 80) {\r\n  //     modelPoint.aggregate([\r\n  //       {\r\n  //         $match: {\r\n  //           number: {\r\n  //             $eq: indexBagCobotGet\r\n  //           },\r\n  //           type: Variables.TypeCobot\r\n  //         }\r\n  //       },\r\n  //       // { $sort: { number: 1, } },\r\n  //       {\r\n  //         $project: {\r\n  //           number: 1,\r\n  //           offsetInX: 1,\r\n  //           offsetInY: 1,\r\n  //           offsetInZ: 1,\r\n  //           offsetInR: 1,\r\n  //           offsetInAddX: 1,\r\n  //           offsetInAddY: 1,\r\n  //           PlaceX: 1,\r\n  //           PlaceY: 1,\r\n  //           placeZ_Layer1: 1,\r\n  //           placeZ_Layer2: 1,\r\n  //           placeZ_Layer3: 1,\r\n  //           placeZ_Layer4: 1,\r\n  //         }\r\n  //       }\r\n  //     ]).exec((err, Point) => {\r\n  //       if (err) throw err;\r\n  //       try {\r\n  //         if (typeof (Variables.resultpointPickPlace !== 'undefined')) {\r\n  //           // console.log(Point[0]);\r\n  //           var SubOffsetX=parseInt(Variables.resultpointPickPlace[0].placeX)-parseInt(Variables.resultpointPickPlace[0].pickX);\r\n  //           var SubOffsetY=parseInt(Variables.resultpointPickPlace[0].placeY)-parseInt(Variables.resultpointPickPlace[0].pickY);\r\n\r\n  //           var TempOffsetInX = SubOffsetX + parseInt(Point[0].offsetInX)-parseInt(Point[0].PlaceX)+parseInt(Point[0].offsetInAddX);\r\n  //           var TempOffsetInY = SubOffsetY + parseInt(Point[0].offsetInY)-parseInt(Point[0].PlaceY)+parseInt(Point[0].offsetInAddY);\r\n  //           var TempOffsetInZ = parseInt(Point[0].offsetInZ);\r\n  //           var TempOffsetInR = parseInt(Point[0].offsetInR);\r\n  //           var TempPlaceX = parseInt(Point[0].PlaceX);\r\n  //           var TempPlaceY = parseInt(Point[0].PlaceY);\r\n  //           var TempPlaceZ=0;\r\n  //           if (layerCurrent===0){TempPlaceZ= parseInt(Variables.resultpointPickPlace[0].placeZ_Layer1)};\r\n  //           if (layerCurrent===1){TempPlaceZ= parseInt(Variables.resultpointPickPlace[0].placeZ_Layer2)};\r\n  //           if (layerCurrent===2){TempPlaceZ= parseInt(Variables.resultpointPickPlace[0].placeZ_Layer3)};\r\n  //           if (layerCurrent===3){TempPlaceZ= parseInt(Variables.resultpointPickPlace[0].placeZ_Layer4)};\r\n  //         }\r\n  //         let arr = [SubFunction.CheckNegativeNumber(TempOffsetInX), SubFunction.CheckNegativeNumber(TempOffsetInY),\r\n  //         SubFunction.CheckNegativeNumber(TempOffsetInZ), SubFunction.CheckNegativeNumber(TempOffsetInR),\r\n  //         SubFunction.CheckNegativeNumber(TempPlaceX), SubFunction.CheckNegativeNumber(TempPlaceY),\r\n  //         SubFunction.CheckNegativeNumber(TempPlaceZ), layerCurrent+1]\r\n  //         if (Variables.WordCobot[1] !== SubFunction.CheckNegativeNumber(TempOffsetInX) ||\r\n  //           Variables.WordCobot[2] !== SubFunction.CheckNegativeNumber(TempOffsetInY) ||\r\n  //           Variables.WordCobot[3] !== SubFunction.CheckNegativeNumber(TempOffsetInZ) ||\r\n  //           Variables.WordCobot[4] !== SubFunction.CheckNegativeNumber(TempOffsetInR) ||\r\n  //           Variables.WordCobot[5] !== SubFunction.CheckNegativeNumber(TempPlaceX) ||\r\n  //           Variables.WordCobot[6] !== SubFunction.CheckNegativeNumber(TempPlaceY) ||\r\n  //           Variables.WordCobot[7] !== SubFunction.CheckNegativeNumber(TempPlaceZ) ||\r\n  //           Variables.WordCobot[8] !== layerCurrent+1) {\r\n  //           console.log(arr);\r\n  //           clientMB.writeMultipleRegisters(9001, arr).then(function (resp) {\r\n  //             console.log(resp);\r\n  //           }, console.error);\r\n  //         }\r\n  //       }\r\n  //       catch (err) { console.log(err) }\r\n  //     })\r\n  //   }\r\n  // }, 500);\r\n}","var Variables = require('./Variable.js');\r\nvar SubFunction = require('./SubFunction.js');\r\nvar exec = require('child_process').exec;\r\nvar x = 0, y = 0;\r\nvar rotateHeader = 0\r\nexports = module.exports = function (io, clientMobile) {\r\n  io.sockets.on('connection', function (socket) {\r\n    console.log(\"co nguoi ket noi\" + socket.id);\r\n    socket.emit('UpdateElement', Variables.resultElement);\r\n    socket.emit('UpdateBitAdjust', Variables.resultBitAdjust);\r\n    socket.emit('UpdateBitDisplay', Variables.resultBitDisplay);\r\n    socket.emit('UpdateWordAdjust', Variables.resultWordAdjust);\r\n    socket.emit('UpdateWordDisplay', Variables.resultWordDisplay);\r\n    socket.emit('UpdateDWordAdjust', Variables.resultDWordAdjust);\r\n    socket.emit('UpdateDWordDisplay', Variables.resultDWordDisplay);\r\n    socket.on(\"disconnect\", function () {\r\n      console.log(\"ngat ket noi\");\r\n    });\r\n    socket.on('initial', function () {\r\n      console.log('INITIAL');\r\n      socket.emit('UpdateElement', Variables.resultElement);\r\n      socket.emit('UpdateBitAdjust', Variables.resultBitAdjust);\r\n      socket.emit('UpdateBitDisplay', Variables.resultBitDisplay);\r\n      socket.emit('UpdateWordAdjust', Variables.resultWordAdjust);\r\n      socket.emit('UpdateWordDisplay', Variables.resultWordDisplay);\r\n      socket.emit('UpdateDWordAdjust', Variables.resultDWordAdjust);\r\n      socket.emit('UpdateDWordDisplay', Variables.resultDWordDisplay);\r\n    })\r\n    //WRITE TO PLC\r\n    socket.on(\"Client-send-data\", function (data) {\r\n      console.log(data);\r\n      //BitAdjust\r\n      if (data.NameCommand === 'BitAdjustForce') {\r\n        try {\r\n          clientMobile.write(data.tag+'\\r\\n');\r\n        }\r\n        catch (err) { console.log(err); }\r\n      }\r\n      //WordAdjust\r\n      if (data.NameCommand === 'WordAdjustForce' && !isNaN(data.tag)) {\r\n        Variables.resultWordAdjust[data.tag]=data.value;\r\n        console.log(Variables.resultWordAdjust)\r\n      }\r\n      //DWordAdjust\r\n      if (data.NameCommand === 'DWordAdjustForce' && !isNaN(data.tag)) {\r\n        var heightValueDWordAdjust = parseInt(data.value / 65536);\r\n        var lowValueDWordAdjust = parseInt(data.value % 65536);\r\n        conn.writeItems('ComPC', [112, 112, data.tag, data.tag, heightValueDWordAdjust,heightValueDWordAdjust,lowValueDWordAdjust,lowValueDWordAdjust], () => { console.log('can not write data Mitsubishi') })\r\n      }\r\n      //TextFieldInput\r\n      if (data.NameCommand === 'TextFieldInput') {\r\n        console.log(data)\r\n        try {\r\n          clientMobile.write(data.tag+\" \"+data.value+'\\r\\n');\r\n        }\r\n        catch (err) { console.log(err); }\r\n      }\r\n    });\r\n  });\r\n}","// MCPROTOCOL - A library for communication to Mitsubishi PLCs over Ethernet from node.js. \r\n// Currently only FX3U CPUs using FX3U-ENET and FX3U-ENET-ADP modules (Ethernet modules) tested.\r\n// Please report experiences with others.\r\n\r\n// The MIT License (MIT)\r\n\r\n// Copyright (c) 2015 Dana Moffit\r\n\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n\r\n// EXTRA WARNING - This is BETA software and as such, be careful, especially when \r\n// writing values to programmable controllers.\r\n//\r\n// Some actions or errors involving programmable controllers can cause injury or death, \r\n// and YOU are indicating that you understand the risks, including the \r\n// possibility that the wrong address will be overwritten with the wrong value, \r\n// when using this library.  Test thoroughly in a laboratory environment.\r\n\r\nvar net = require(\"net\");\r\nvar _ = require(\"../underscore/underscore\");\r\nvar util = require(\"util\");\r\nvar effectiveDebugLevel = 0; // intentionally global, shared between connections\r\nvar monitoringTime = 10;\r\n\r\nmodule.exports = MCProtocol;\r\n\r\nfunction MCProtocol(){\r\n\tvar self = this;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\tself.readReq = new Buffer(1500);\r\n\tself.writeReq = new Buffer(1500);\r\n\r\n\tself.resetPending = false;\r\n\tself.resetTimeout = undefined;\r\n\r\n\tself.maxPDU = 255;\r\n\tself.isoclient = undefined; \r\n\tself.isoConnectionState = 0;\r\n\tself.requestMaxParallel = 1;\r\n\tself.maxParallel = 1;\t\t\t\t// MC protocol is read/response.  Parallel jobs not supported.\r\n\tself.isAscii = 1;\r\n\tself.octalInputOutput;\r\n\tself.parallelJobsNow = 0;\r\n\tself.maxGap = 5;\r\n\tself.doNotOptimize = false;\r\n\tself.connectCallback = undefined;\r\n\tself.readDoneCallback = undefined;\r\n\tself.writeDoneCallback = undefined;\r\n\tself.connectTimeout = undefined; \r\n\tself.PDUTimeout = undefined;\r\n\tself.globalTimeout = 4500;\r\n\r\n\tself.readPacketArray = [];\r\n\tself.writePacketArray = [];\r\n\tself.polledReadBlockList = [];\r\n\tself.instantWriteBlockList = [];\r\n\tself.globalReadBlockList = [];\r\n\tself.globalWriteBlockList = [];\r\n\tself.masterSequenceNumber = 1;\r\n\tself.translationCB = doNothing;\r\n\tself.connectionParams = undefined;\r\n\tself.connectionID = 'UNDEF';\r\n\tself.addRemoveArray = [];\r\n\tself.readPacketValid = false;\r\n\tself.writeInQueue = false;\r\n\tself.connectCBIssued = false;\r\n}\r\n\r\nMCProtocol.prototype.setTranslationCB = function(cb) {\r\n\tvar self = this;\r\n\tif (typeof cb === \"function\") { \r\n\t\toutputLog('Translation OK');\r\n\t\tself.translationCB = cb; \r\n\t}\r\n}\r\n\r\nMCProtocol.prototype.initiateConnection = function (cParam, callback) {\r\n\tvar self = this;\r\n\tif (cParam === undefined) { cParam = {port: 10000, host: '192.168.8.106', ascii: false}; }\r\n\toutputLog('Initiate Called - Connecting to PLC with address and parameters:');\r\n\toutputLog(cParam);\r\n\tif (typeof(cParam.name) === 'undefined') {\r\n\t\tself.connectionID = cParam.host;\r\n\t} else {\r\n\t\tself.connectionID = cParam.name;\t\t\r\n\t}\r\n\tif (typeof(cParam.ascii) === 'undefined') {\r\n\t\tself.isAscii = false;\r\n\t} else {\r\n\t\tself.isAscii = cParam.ascii;\t\t\r\n\t}\r\n\tif (typeof(cParam.octalInputOutput) === 'undefined') {\r\n\t\tself.octalInputOutput = true;\r\n\t} else {\r\n\t\tself.octalInputOutput = cParam.octalInputOutput;\t\t\r\n\t}\t\r\n\tself.connectionParams = cParam;\r\n\tself.connectCallback = callback;\r\n\tself.connectCBIssued = false;\r\n\tself.connectNow(self.connectionParams, false);\r\n}\r\n\r\nMCProtocol.prototype.dropConnection = function () {\r\n\tvar self = this;\r\n\tif (typeof(self.isoclient) !== 'undefined') {\r\n\t\tself.isoclient.end();\r\n\t}\t\t\r\n\tself.connectionCleanup();  // TODO - check this.\r\n}\r\n\r\nMCProtocol.prototype.connectNow = function(cParam, suppressCallback) { // TODO - implement or remove suppressCallback\r\n\tvar self = this;\r\n\t// Don't re-trigger.\r\n\tif (self.isoConnectionState >= 1) { return; }\r\n\tself.connectionCleanup();\r\n\tself.isoclient = net.connect(cParam, function(){\r\n\t\tself.onTCPConnect.apply(self,arguments);\r\n\t});\r\n\t\r\n\tself.isoclient.setKeepAlive(true,2500); // For reliable unplug detection in most cases - although it takes 10 minutes to notify\r\n\tself.isoConnectionState = 1;  // 1 = trying to connect\r\n    \r\n\tself.isoclient.on('error', function(){\r\n\t\tself.connectError.apply(self, arguments);\r\n\t});\r\n\t\r\n\toutputLog('<initiating a new connection>',1,self.connectionID);  \r\n\toutputLog('Attempting to connect to host...',0,self.connectionID);\r\n}\r\n\r\nMCProtocol.prototype.connectError = function(e) {\r\n\tvar self = this;\r\n\t\r\n\t// Note that a TCP connection timeout error will appear here.  An MC connection timeout error is a packet timeout.  \r\n\toutputLog('We Caught a connect error ' + e.code,0,self.connectionID);\r\n\tif ((!self.connectCBIssued) && (typeof(self.connectCallback) === \"function\")) {\r\n\t\tself.connectCBIssued = true;\r\n\t\tself.connectCallback(e);\r\n\t}\r\n\tself.isoConnectionState = 0;\r\n}\r\n\r\nMCProtocol.prototype.readWriteError = function(e) {\r\n\tvar self = this;\r\n\toutputLog('We Caught a read/write error ' + e.code + ' - resetting connection',0,self.connectionID);\r\n\tself.isoConnectionState = 0;\r\n\tself.connectionReset();\r\n}\r\n\r\nMCProtocol.prototype.packetTimeout = function(packetType, packetSeqNum) {\r\n\tvar self = this;\r\n\toutputLog('PacketTimeout called with type ' + packetType + ' and seq ' + packetSeqNum,1,self.connectionID); \r\n\tif (packetType === \"read\") {\r\n\t\toutputLog(\"READ TIMEOUT on sequence number \" + packetSeqNum,0,self.connectionID);\r\n\t\tself.readResponse(undefined); //, self.findReadIndexOfSeqNum(packetSeqNum));\r\n\t\treturn undefined;\r\n\t}\r\n\tif (packetType === \"write\") {\r\n\t\toutputLog(\"WRITE TIMEOUT on sequence number \" + packetSeqNum,0,self.connectionID);\r\n\t\tself.writeResponse(undefined); //, self.findWriteIndexOfSeqNum(packetSeqNum));\r\n\t\treturn undefined;\r\n\t}\t\r\n\toutputLog(\"Unknown timeout error.  Nothing was done - this shouldn't happen.\",0,self.connectionID);\r\n}\r\n\r\nMCProtocol.prototype.onTCPConnect = function() {\r\n\tvar self = this;\r\n\toutputLog('TCP Connection Established to ' + self.isoclient.remoteAddress + ' on port ' + self.isoclient.remotePort,0,self.connectionID);\r\n\r\n\t// Track the connection state\r\n\tself.isoConnectionState = 4;  // 4 = all connected, simple with MC protocol.  Other protocols have a negotiation/session packet as well.\r\n\t\t\r\n\tself.isoclient.removeAllListeners('data');\r\n\tself.isoclient.removeAllListeners('error');\r\n\t\r\n\tself.isoclient.on('data', function() {\r\n\t\tself.onResponse.apply(self, arguments);\r\n\t});  // We need to make sure we don't add this event every time if we call it on data.  \r\n\tself.isoclient.on('error', function() {\r\n\t\tself.readWriteError.apply(self, arguments);\r\n\t});  // Might want to remove the connecterror listener\r\n\r\n\tif ((!self.connectCBIssued) && (typeof(self.connectCallback) === \"function\")) {\r\n\t\tself.connectCBIssued = true;\r\n\t\tself.connectCallback();\r\n\t}\r\n\r\n\treturn;\r\n}\r\n\r\nMCProtocol.prototype.writeItems = function(arg, value, cb) {\r\n\tvar self = this;\r\n\tvar i;\r\n\toutputLog(\"Preparing to WRITE \" + arg,0,self.connectionID);\r\n\r\n\tif (self.isWriting()) {\r\n\t\toutputLog(\"You must wait until all previous writes have finished before scheduling another. \",0,self.connectionID); \r\n\t\treturn; \r\n\t}\r\n\t\r\n\tif (typeof cb === \"function\") {\r\n\t\tself.writeDoneCallback = cb;\r\n\t} else {\r\n\t\tself.writeDoneCallback = doNothing;\r\n\t}\r\n\t\r\n\tself.instantWriteBlockList = []; // Initialize the array.  \r\n\t\r\n\tif (typeof arg === \"string\") { \r\n\t\tself.instantWriteBlockList.push(stringToMCAddr(self.translationCB(arg), arg, self.octalInputOutput));\r\n\t\tif (typeof(self.instantWriteBlockList[self.instantWriteBlockList.length - 1]) !== \"undefined\") {\r\n\t\t\tself.instantWriteBlockList[self.instantWriteBlockList.length - 1].writeValue = value;\r\n\t\t}\r\n\t} else if (_.isArray(arg) && _.isArray(value) && (arg.length == value.length)) {\r\n\t\tfor (i = 0; i < arg.length; i++) {\r\n\t\t\tif (typeof arg[i] === \"string\") {\r\n\t\t\t\tself.instantWriteBlockList.push(stringToMCAddr(self.translationCB(arg[i]), arg[i], self.octalInputOutput));\r\n\t\t\t\tif (typeof(self.instantWriteBlockList[self.instantWriteBlockList.length - 1]) !== \"undefined\") {\r\n\t\t\t\t\tself.instantWriteBlockList[self.instantWriteBlockList.length - 1].writeValue = value[i];\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t// Validity check.  \r\n\tfor (i=self.instantWriteBlockList.length-1;i>=0;i--) {\r\n\t\tif (self.instantWriteBlockList[i] === undefined) {\r\n\t\t\tself.instantWriteBlockList.splice(i,1);\r\n\t\t\toutputLog(\"Dropping an undefined write item.\");\r\n\t\t}\r\n\t}\r\n\tself.prepareWritePacket();\r\n\tif (!self.isReading()) { \r\n\t\tself.sendWritePacket(); \r\n\t} else {\r\n\t\tself.writeInQueue = true;\r\n\t}\r\n}\r\n\r\nMCProtocol.prototype.findItem = function(useraddr) {\r\n\tvar self = this;\r\n\tvar i;\r\n\tvar commstate = { value: self.isoConnectionState !== 4, quality: 'OK' };\r\n\tif (useraddr === '_COMMERR') { return commstate; }\r\n\tfor (i = 0; i < self.polledReadBlockList.length; i++) {\r\n\t\tif (self.polledReadBlockList[i].useraddr === useraddr) { return self.polledReadBlockList[i]; } \r\n\t}\r\n\treturn undefined;\r\n}\r\n\r\nMCProtocol.prototype.addItems = function(arg) {\r\n\tvar self = this;\r\n\tself.addRemoveArray.push({arg: arg, action: 'add'});\r\n}\r\n\r\nMCProtocol.prototype.addItemsNow = function(arg) {\r\n\tvar self = this;\r\n\tvar i;\r\n\toutputLog(\"Adding \" + arg,0,self.connectionID);\r\n\taddItemsFlag = false;\r\n\tif (typeof arg === \"string\" && arg !== \"_COMMERR\") { \r\n\t\tself.polledReadBlockList.push(stringToMCAddr(self.translationCB(arg), arg, self.octalInputOutput));\r\n\t} else if (_.isArray(arg)) {\r\n\t\tfor (i = 0; i < arg.length; i++) {\r\n\t\t\tif (typeof arg[i] === \"string\" && arg[i] !== \"_COMMERR\") {\r\n\t\t\t\tself.polledReadBlockList.push(stringToMCAddr(self.translationCB(arg[i]), arg[i], self.octalInputOutput));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t// Validity check.  \r\n\tfor (i=self.polledReadBlockList.length-1;i>=0;i--) {\r\n\t\tif (self.polledReadBlockList[i] === undefined) {\r\n\t\t\tself.polledReadBlockList.splice(i,1);\r\n\t\t\toutputLog(\"Dropping an undefined request item.\");\r\n\t\t}\r\n\t}\r\n//\tprepareReadPacket();\r\n\tself.readPacketValid = false;\r\n}\r\n\r\nMCProtocol.prototype.removeItems = function(arg) {\r\n\tvar self = this;\r\n\tself.addRemoveArray.push({arg : arg, action: 'remove'});\r\n}\r\n\r\nMCProtocol.prototype.removeItemsNow = function(arg) {\r\n\tvar self = this;\r\n\tvar i;\r\n\tself.removeItemsFlag = false;\r\n\tif (typeof arg === \"undefined\") {\r\n\t\tself.polledReadBlockList = [];\r\n\t} else if (typeof arg === \"string\") {\r\n\t\tfor (i = 0; i < self.polledReadBlockList.length; i++) {\r\n\t\t\toutputLog('TCBA ' + self.translationCB(arg));\r\n\t\t\tif (self.polledReadBlockList[i].addr === self.translationCB(arg)) {\r\n\t\t\t\toutputLog('Splicing');\r\n\t\t\t\tself.polledReadBlockList.splice(i, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t} else if (_.isArray(arg)) {\r\n\t\tfor (i = 0; i < self.polledReadBlockList.length; i++) {\r\n\t\t\tfor (j = 0; j < arg.length; j++) {\r\n\t\t\t\tif (self.polledReadBlockList[i].addr === self.translationCB(arg[j])) {\r\n\t\t\t\t\tself.polledReadBlockList.splice(i, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tself.readPacketValid = false;\r\n\t//\tprepareReadPacket();\r\n}\r\n\r\nMCProtocol.prototype.readAllItems = function(arg) {\r\n\tvar self = this;\r\n\tvar i;\r\n\r\n\toutputLog(\"Reading All Items (readAllItems was called)\",1,self.connectionID);\r\n\t\r\n\tif (typeof arg === \"function\") {\r\n\t\tself.readDoneCallback = arg;\r\n\t} else {\r\n\t\tself.readDoneCallback = doNothing;\r\n\t}\t\r\n\t\r\n\tif (self.isoConnectionState !== 4) { \r\n\t\toutputLog(\"Unable to read when not connected. Return bad values.\",0,self.connectionID);\r\n\t} // For better behaviour when auto-reconnecting - don't return now\r\n\t\r\n\t// Check if ALL are done...  You might think we could look at parallel jobs, and for the most part we can, but if one just finished and we end up here before starting another, it's bad.\r\n\tif (self.isWaiting()) { \r\n\t\toutputLog(\"Waiting to read for all R/W operations to complete.  Will re-trigger readAllItems in 100ms.\"); \r\n\t\tsetTimeout(function() {\r\n\t\t\tself.readAllItems.apply(self, arguments);\r\n\t\t}, 100, arg); \r\n\t\treturn;\r\n\t}\r\n\t\r\n\t// Now we check the array of adding and removing things.  Only now is it really safe to do this.  \r\n\tself.addRemoveArray.forEach(function(element){\r\n\t\toutputLog('Adding or Removing ' + util.format(element), 1, self.connectionID);\r\n\t\tif (element.action === 'remove') {\r\n\t\t\tself.removeItemsNow(element.arg);\r\n\t\t} \r\n\t\tif (element.action === 'add') {\r\n\t\t\tself.addItemsNow(element.arg);\r\n\t\t}\r\n\t});\r\n\t\r\n\tself.addRemoveArray = []; // Clear for next time.  \r\n\t\r\n\tif (!self.readPacketValid) { self.prepareReadPacket(); }\r\n\t\r\n\t// ideally...  incrementSequenceNumbers();\r\n\t\r\n\toutputLog(\"Calling SRP from RAI\",1,self.connectionID);\r\n\tself.sendReadPacket(); // Note this sends the first few read packets depending on parallel connection restrictions.   \r\n}\r\n\r\nMCProtocol.prototype.isWaiting = function() {\r\n\tvar self = this;\r\n\treturn (self.isReading() || self.isWriting());\r\n}\r\n\r\nMCProtocol.prototype.isReading = function() {\r\n\tvar self = this;\r\n\tvar i;\r\n\t// Walk through the array and if any packets are marked as sent, it means we haven't received our final confirmation.\r\n\tfor (i=0; i<self.readPacketArray.length; i++) {\r\n\t\tif (self.readPacketArray[i].sent === true) { return true };  \r\n\t}\r\n\treturn false;\r\n}\r\n\r\nMCProtocol.prototype.isWriting = function() {\r\n\tvar self = this;\r\n\tvar i;\r\n\t// Walk through the array and if any packets are marked as sent, it means we haven't received our final confirmation.\r\n\tfor (i=0; i<self.writePacketArray.length; i++) {\r\n\t\tif (self.writePacketArray[i].sent === true) { return true }; \r\n\t}\t\r\n\treturn false;\r\n}\r\n\r\n\r\nMCProtocol.prototype.clearReadPacketTimeouts = function() {\r\n\tvar self = this;\r\n\toutputLog('Clearing read PacketTimeouts',1,self.connectionID);\r\n\t// Before we initialize the readPacketArray, we need to loop through all of them and clear timeouts.  \r\n\tfor (i=0;i<self.readPacketArray.length;i++) {\r\n\t\tclearTimeout(self.readPacketArray[i].timeout);\r\n\t\tself.readPacketArray[i].sent = false;\r\n\t\tself.readPacketArray[i].rcvd = false;\r\n\t}\r\n}\r\n\r\nMCProtocol.prototype.clearWritePacketTimeouts = function() {\r\n\tvar self = this;\r\n\toutputLog('Clearing write PacketTimeouts',1,self.connectionID);\r\n\t// Before we initialize the readPacketArray, we need to loop through all of them and clear timeouts.  \r\n\tfor (i=0;i<self.writePacketArray.length;i++) {\r\n\t\tclearTimeout(self.writePacketArray[i].timeout);\r\n\t\tself.writePacketArray[i].sent = false;\r\n\t\tself.writePacketArray[i].rcvd = false;\r\n\t}\r\n}\r\n\r\nMCProtocol.prototype.prepareWritePacket = function() {\r\n\tvar self = this;\r\n\tvar itemList = self.instantWriteBlockList;\r\n\tvar requestList = [];\t\t\t// The request list consists of the block list, split into chunks readable by PDU.  \r\n\tvar requestNumber = 0;\r\n\tvar itemsThisPacket;\r\n\tvar numItems;\r\n\t\r\n\t// Sort the items using the sort function, by type and offset.  \r\n\titemList.sort(itemListSorter);\r\n\t\r\n\t// Just exit if there are no items.  \r\n\tif (itemList.length == 0) {\r\n\t\treturn undefined;\r\n\t}\r\n\t\r\n\t// At this time we do not do write optimizations.  \r\n\t// The reason for this is it is would cause numerous issues depending how the code was written in the PLC.\r\n\t// If we write B3:0/0 and B3:0/1 then to optimize we would have to write all of B3:0, which also writes /2, /3...\r\n\t//\r\n\t// I suppose when working with integers, we could write these as one block.  \r\n\t// But if you really, really want the program to do that, write the integer yourself.  \r\n\tself.globalWriteBlockList[0] = itemList[0];\r\n\tself.globalWriteBlockList[0].itemReference = [];\r\n\tself.globalWriteBlockList[0].itemReference.push(itemList[0]);\r\n\t\r\n\tvar thisBlock = 0;\r\n\tvar thisRequest = 0;\r\n\t\r\n\titemList[0].block = thisBlock;\r\n\t\r\n\t// Just push the items into blocks and figure out the write buffers\r\n\tfor (i=0;i<itemList.length;i++) {\r\n\t\tself.globalWriteBlockList[i] = itemList[i]; // Remember - by reference.  \r\n\t\tself.globalWriteBlockList[i].isOptimized = false;\r\n\t\tself.globalWriteBlockList[i].itemReference = [];\r\n\t\tself.globalWriteBlockList[i].itemReference.push(itemList[i]);\r\n\t\tbufferizeMCItem(itemList[i],self.isAscii);\r\n\t}\r\n\t\t\r\n\t// Split the blocks into requests, if they're too large.  \r\n\tfor (i=0;i<self.globalWriteBlockList.length;i++) {\r\n\t\tvar startElement = self.globalWriteBlockList[i].offset;\r\n\t\tvar remainingLength = self.globalWriteBlockList[i].byteLengthWrite;\r\n\t\tvar remainingTotalArrayLength = self.globalWriteBlockList[i].totalArrayLength;\r\n\t\t\r\n\t\t// With the MC protocol, maxByteRequest is variable.  \r\n\t\t// We also use maxByteRequest to enforce a boundary on reading counter values that we can't cross.\r\n\t\tvar maxByteRequest = self.globalWriteBlockList[i].maxWordLength(true)*2; // Will be 10*2 = 20 for bit native.  (160 point max)\r\n\r\n\t\tvar lengthOffset = 0;\r\n\r\n\t\t// Always create a request for a globalWriteBlockList. \r\n\t\trequestList[thisRequest] = self.globalWriteBlockList[i].clone();\r\n\t\r\n\t\t// How many parts?\r\n\t\tself.globalWriteBlockList[i].parts = Math.ceil(self.globalWriteBlockList[i].byteLengthWrite/maxByteRequest); \r\n\t\toutputLog(\"globalWriteBlockList \" + i + \" parts is \" + self.globalWriteBlockList[i].parts + \" offset is \" + self.globalWriteBlockList[i].offset + \" MBR is \" + maxByteRequest,2);\r\n\t\t\r\n\t\tself.globalWriteBlockList[i].requestReference = [];\r\n\t\t\r\n\t\t// If we need to spread the sending/receiving over multiple packets...\r\n\t\tfor (j=0;j<self.globalWriteBlockList[i].parts;j++) {\r\n\t\t\trequestList[thisRequest] = self.globalWriteBlockList[i].clone();\r\n\t\t\tself.globalWriteBlockList[i].requestReference.push(requestList[thisRequest]);\r\n\t\t\trequestList[thisRequest].offset = startElement;\r\n\t\t\trequestList[thisRequest].byteLengthWrite = Math.min(maxByteRequest,remainingLength);\r\n\t\t\tif(requestList[thisRequest].bitNative) {\r\n\t\t\t\trequestList[thisRequest].totalArrayLength = Math.min(maxByteRequest*2,remainingTotalArrayLength,self.globalWriteBlockList[i].totalArrayLength); \r\n\t\t\t} else {\r\n\t\t\t\t// I think we should be dividing by dtypelen here\r\n\t\t\t\trequestList[thisRequest].totalArrayLength = Math.min(maxByteRequest/self.globalWriteBlockList[i].dtypelen,remainingLength/self.globalWriteBlockList[i].dtypelen,self.globalWriteBlockList[i].totalArrayLength); \r\n\t\t\t}\r\n\t\t\tremainingTotalArrayLength -= requestList[thisRequest].totalArrayLength;\r\n\t\t\trequestList[thisRequest].byteLengthWithFill = requestList[thisRequest].byteLengthWrite;\r\n\t\t\trequestList[thisRequest].writeBuffer = self.globalWriteBlockList[i].writeBuffer.slice(lengthOffset, lengthOffset + requestList[thisRequest].byteLengthWithFill);  \r\n\t\t\trequestList[thisRequest].writeQualityBuffer = self.globalWriteBlockList[i].writeQualityBuffer.slice(lengthOffset, lengthOffset + requestList[thisRequest].byteLengthWithFill);  \r\n\t\t\tlengthOffset += self.globalWriteBlockList[i].requestReference[j].byteLengthWrite;\r\n\r\n\t\t\tif (self.globalWriteBlockList[i].parts > 1) {\r\n\t\t\t\trequestList[thisRequest].datatype = 'BYTE';\r\n\t\t\t\trequestList[thisRequest].dtypelen = 1;\r\n\t\t\t\tif (requestList[thisRequest].bitNative) {\r\n\t\t\t\t\trequestList[thisRequest].arrayLength = requestList[thisRequest].totalArrayLength;//globalReadBlockList[thisBlock].byteLength;\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\trequestList[thisRequest].arrayLength = requestList[thisRequest].byteLengthWrite/2;//globalReadBlockList[thisBlock].byteLength;\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tremainingLength -= maxByteRequest;\r\n\t\t\tif (self.globalWriteBlockList[i].bitNative) {\r\n\t\t\t\tstartElement += maxByteRequest*2; \r\n\t\t\t} else {\r\n\t\t\t\tstartElement += maxByteRequest/2; \r\n\t\t\t}\r\n\t\t\tthisRequest++;\r\n\t\t}\t\t\r\n\t}\r\n\r\n\tself.clearWritePacketTimeouts(); \t\r\n\tself.writePacketArray = [];\r\n\r\n\t// Before we initialize the writePacketArray, we need to loop through all of them and clear timeouts.  \r\n\t// The packetizer...\r\n\r\n\twhile (requestNumber < requestList.length) {\r\n\t\t// Set up the read packet\r\n\t\t// Yes this is the same master sequence number shared with the read queue\r\n\t\tself.masterSequenceNumber += 1;\r\n\t\tif (self.masterSequenceNumber > 32767) {\r\n\t\t\tself.masterSequenceNumber = 1;\r\n\t\t}\r\n\t\t\r\n\t\tnumItems = 0;\r\n\t\t\r\n\t\t// Packet's length \r\n\t\tvar packetWriteLength = 10 + 4;  // 10 byte header and 4 byte param header \r\n\t\t\t\r\n\t\tself.writePacketArray.push(new PLCPacket());\r\n\t\tvar thisPacketNumber = self.writePacketArray.length - 1;\r\n\t\tself.writePacketArray[thisPacketNumber].seqNum = self.masterSequenceNumber;\r\n\t\r\n\t\tself.writePacketArray[thisPacketNumber].itemList = [];  // Initialize as array.  \r\n\t\r\n\t\tfor (var i = requestNumber; i < requestList.length; i++) {\r\n\r\n\t\t\tif (numItems == 1) {\r\n\t\t\t\tbreak;  // Used to break when packet was full.  Now break when we can't fit this packet in here.  \r\n\t\t\t}\r\n\r\n\t\t\trequestNumber++;\r\n\t\t\tnumItems++;\r\n\t\t\tpacketWriteLength += (requestList[i].byteLengthWithFill + 4);\r\n\t\t\tself.writePacketArray[thisPacketNumber].itemList.push(requestList[i]);\t\t\t\r\n\t\t}\r\n\t}\r\n\toutputLog(\"WPAL is \" + self.writePacketArray.length, 1);\r\n}\r\n\r\n\r\nMCProtocol.prototype.prepareReadPacket = function() {\r\n\tvar self = this;\r\n\tvar itemList = self.polledReadBlockList;\t\t\t\t// The items are the actual items requested by the user\r\n\tvar requestList = [];\t\t\t\t\t\t// The request list consists of the block list, split into chunks readable by PDU.  \t\r\n\tvar startOfSlice, endOfSlice, oldEndCoil, demandEndCoil;\r\n\t\r\n\t// Validity check.  \r\n\tfor (i=itemList.length-1;i>=0;i--) {\r\n\t\tif (itemList[i] === undefined) {\r\n\t\t\titemList.splice(i,1);\r\n\t\t\toutputLog(\"Dropping an undefined request item.\",0,self.connectionID);\r\n\t\t}\r\n\t}\r\n\t\r\n\t// Sort the items using the sort function, by type and offset.  \r\n\titemList.sort(itemListSorter);\r\n\t\r\n\t// Just exit if there are no items.  \r\n\tif (itemList.length == 0) {\r\n\t\treturn undefined;\r\n\t}\r\n\t\r\n\tself.globalReadBlockList = [];\r\n\t\r\n\t// ...because you have to start your optimization somewhere.  \r\n\tself.globalReadBlockList[0] = itemList[0];\r\n\tself.globalReadBlockList[0].itemReference = [];\r\n\tself.globalReadBlockList[0].itemReference.push(itemList[0]);\r\n\t\r\n\tvar maxByteRequest, thisBlock = 0;\r\n\titemList[0].block = thisBlock;\r\n// variable for MC\t\tvar maxByteRequest = 128; \r\n\t\r\n\t// Optimize the items into blocks\r\n\tfor (i=1;i<itemList.length;i++) {\r\n\t\t// Skip T, C, P types \r\n\t\tmaxByteRequest = itemList[i].maxWordLength(true)*2; // Will be 10*2 = 20 for bit native.  (160 point max)\r\n\r\n\t\tif ((itemList[i].areaMCCode !== self.globalReadBlockList[thisBlock].areaMCCode) ||   \t// Can't optimize between areas\r\n\t\t\t\t(!self.isOptimizableArea(itemList[i].areaMCCode)) || \t\t\t\t\t// May as well try to optimize everything.  \r\n\t\t\t\t((itemList[i].offset - self.globalReadBlockList[thisBlock].offset + itemList[i].byteLength) > maxByteRequest) ||      \t// If this request puts us over our max byte length, create a new block for consistency reasons.\r\n\t\t\t\t((itemList[i].offset - (self.globalReadBlockList[thisBlock].offset + self.globalReadBlockList[thisBlock].byteLength) > self.maxGap) && !itemList[i].bitNative) ||\r\n\t\t\t\t((itemList[i].offset - (self.globalReadBlockList[thisBlock].offset + self.globalReadBlockList[thisBlock].byteLength) > self.maxGap*8) && itemList[i].bitNative)) {\t\t// If our gap is large, create a new block.\r\n\t\t\t// At this point we give up and create a new block.  \r\n\t\t\tthisBlock = thisBlock + 1;\r\n\t\t\tself.globalReadBlockList[thisBlock] = itemList[i]; // By reference.  \r\n//\t\t\t\titemList[i].block = thisBlock; // Don't need to do this.  \r\n\t\t\tself.globalReadBlockList[thisBlock].isOptimized = false;\r\n\t\t\tself.globalReadBlockList[thisBlock].itemReference = [];\r\n\t\t\tself.globalReadBlockList[thisBlock].itemReference.push(itemList[i]);\r\n//\t\t\toutputLog(\"Not optimizing.\");\r\n\t\t} else {\r\n\t\t\toutputLog(\"Performing optimization of item \" + itemList[i].addr + \" with \" + self.globalReadBlockList[thisBlock].addr,1);\r\n\t\t\t// This next line checks the maximum.  \r\n\t\t\t// Think of this situation - we have a large request of 40 bytes starting at byte 10.  \r\n\t\t\t//\tThen someone else wants one byte starting at byte 12.  The block length doesn't change.\r\n\t\t\t//\r\n\t\t\t// But if we had 40 bytes starting at byte 10 (which gives us byte 10-49) and we want byte 50, our byte length is 50-10 + 1 = 41.  \r\n\r\n\t\t\tif (itemList[i].bitNative) { // Coils and inputs must be special-cased \r\n\t\t\t\tself.globalReadBlockList[thisBlock].byteLength = \r\n\t\t\t\t\tMath.max(\r\n\t\t\t\t\t\tself.globalReadBlockList[thisBlock].byteLength, \r\n\t\t\t\t\t\t(Math.floor((itemList[i].requestOffset - self.globalReadBlockList[thisBlock].requestOffset)/8) + itemList[i].byteLength)\r\n\t\t\t\t\t);\r\n\t\t\t\tif (self.globalReadBlockList[thisBlock].byteLength % 2) {  // shouldn't be necessary\r\n\t\t\t\t\tself.globalReadBlockList[thisBlock].byteLength += 1; \r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tself.globalReadBlockList[thisBlock].byteLength = \r\n\t\t\t\t\tMath.max(\r\n\t\t\t\t\tself.globalReadBlockList[thisBlock].byteLength, \r\n\t\t\t\t\t((itemList[i].offset - self.globalReadBlockList[thisBlock].offset)*2 + Math.ceil(itemList[i].byteLength/itemList[i].multidtypelen))*itemList[i].multidtypelen\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\toutputLog(\"Optimized byte length is now \" + self.globalReadBlockList[thisBlock].byteLength,1);\r\n\t\t\t\t\t\t\r\n\t\t\t// Point the buffers (byte and quality) to a sliced version of the optimized block.  This is by reference (same area of memory)\r\n\t\tif (itemList[i].bitNative) {  // Again a special case.  \r\n\t\t\t\tstartOfSlice = (itemList[i].requestOffset - self.globalReadBlockList[thisBlock].requestOffset)/8; // NO, NO, NO - not the dtype length - start of slice varies with register width.  itemList[i].multidtypelen;\r\n\t\t} else { \r\n\t\t\t\tstartOfSlice = (itemList[i].requestOffset - self.globalReadBlockList[thisBlock].requestOffset)*2; // NO, NO, NO - not the dtype length - start of slice varies with register width.  itemList[i].multidtypelen;\r\n\t\t\t}\r\n\r\n\t\t\tendOfSlice = startOfSlice + itemList[i].byteLength;\r\n\t\t\titemList[i].byteBuffer = self.globalReadBlockList[thisBlock].byteBuffer.slice(startOfSlice, endOfSlice);\r\n\t\t\titemList[i].qualityBuffer = self.globalReadBlockList[thisBlock].qualityBuffer.slice(startOfSlice, endOfSlice);\r\n\t\t\t\t\r\n\t\t\t// For now, change the request type here, and fill in some other things.  \r\n\r\n\t\t\t// I am not sure we want to do these next two steps.\r\n\t\t\t// It seems like things get screwed up when we do this.\r\n\t\t\t// Since globalReadBlockList[thisBlock] exists already at this point, and our buffer is already set, let's not do this now.   \r\n\t\t\t// globalReadBlockList[thisBlock].datatype = 'BYTE';\r\n\t\t\t// globalReadBlockList[thisBlock].dtypelen = 1;\r\n\t\t\tself.globalReadBlockList[thisBlock].isOptimized = true;\r\n\t\t\tself.globalReadBlockList[thisBlock].itemReference.push(itemList[i]);\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tvar thisRequest = 0;\r\n\t\r\n\t// Split the blocks into requests, if they're too large.  \r\n\tfor (i=0;i<self.globalReadBlockList.length;i++) {\r\n\t\t// Always create a request for a globalReadBlockList. \r\n\t\trequestList[thisRequest] = self.globalReadBlockList[i].clone();\r\n\t\t\r\n\t\t// How many parts?\r\n\t\tmaxByteRequest = self.globalReadBlockList[i].maxWordLength(true)*2; // Will be 10*2 = 20 for bit native.  (160 point max)\r\n\t\tself.globalReadBlockList[i].parts = Math.ceil(self.globalReadBlockList[i].byteLength/maxByteRequest);\r\n\t\tvar startElement = self.globalReadBlockList[i].requestOffset; // try to ignore the offset\r\n\t\tvar remainingLength = self.globalReadBlockList[i].byteLength;\r\n\t\tvar remainingTotalArrayLength = self.globalReadBlockList[i].totalArrayLength;\r\n\r\n\t\tself.globalReadBlockList[i].requestReference = [];\r\n\t\t\r\n\t\t// If we need to spread the sending/receiving over multiple packets... \r\n\t\tfor (j=0;j<self.globalReadBlockList[i].parts;j++) {\r\n\t\t\trequestList[thisRequest] = self.globalReadBlockList[i].clone();\r\n\t\t\tself.globalReadBlockList[i].requestReference.push(requestList[thisRequest]);\r\n\t\t\trequestList[thisRequest].requestOffset = startElement;\r\n\t\t\trequestList[thisRequest].byteLength = Math.min(maxByteRequest,remainingLength);\r\n\t\t\tif (requestList[thisRequest].bitNative) {\r\n\t\t\t\trequestList[thisRequest].totalArrayLength = Math.min(maxByteRequest*8,remainingLength*8,self.globalReadBlockList[i].totalArrayLength); \t\t\t\r\n\t\t\t} else {\r\n\t\t\t\trequestList[thisRequest].totalArrayLength = Math.min(maxByteRequest/self.globalReadBlockList[i].dtypelen,remainingLength/self.globalReadBlockList[i].dtypelen,self.globalReadBlockList[i].totalArrayLength);\r\n\t\t\t}\r\n\t\t\trequestList[thisRequest].byteLengthWithFill = requestList[thisRequest].byteLength;\r\n\t\t\tif (requestList[thisRequest].byteLengthWithFill % 2) { requestList[thisRequest].byteLengthWithFill += 1; };\r\n\t\t\t// Just for now...  I am not sure if we really want to do this in this case.  \r\n\t\t\tif (self.globalReadBlockList[i].parts > 1) {\r\n\t\t\t\trequestList[thisRequest].datatype = 'BYTE';\r\n\t\t\t\trequestList[thisRequest].dtypelen = 1;\r\n\t\t\t\tif (requestList[thisRequest].bitNative) {\r\n\t\t\t\t\trequestList[thisRequest].arrayLength = requestList[thisRequest].totalArrayLength;//globalReadBlockList[thisBlock].byteLength;\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\trequestList[thisRequest].arrayLength = requestList[thisRequest].byteLength/2;//globalReadBlockList[thisBlock].byteLength;\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tremainingLength -= maxByteRequest;\r\n\t\t\tif (self.globalReadBlockList[i].bitNative) {\r\n//\t\t\t\tstartElement += maxByteRequest/requestList[thisRequest].multidtypelen;  \r\n\t\t\t\tstartElement += maxByteRequest*8;\r\n\t\t\t} else {\r\n\t\t\t\tstartElement += maxByteRequest/2; \r\n\t\t\t}\r\n\t\t\tthisRequest++;\r\n\t\t}\t\t\r\n\t}\r\n\t\r\n\t// The packetizer...\r\n\tvar requestNumber = 0;\r\n\tvar itemsThisPacket;\r\n\t\r\n\tself.clearReadPacketTimeouts();\r\n\tself.readPacketArray = [];\r\n\r\n\twhile (requestNumber < requestList.length) {\r\n\t\t// Set up the read packet\r\n\t\tself.masterSequenceNumber += 1;\r\n\t\tif (self.masterSequenceNumber > 32767) {\r\n\t\t\tself.masterSequenceNumber = 1;\r\n\t\t}\r\n\t\t\r\n\t\tvar numItems = 0;\r\n\r\n\t\tself.readPacketArray.push(new PLCPacket());\r\n\t\tvar thisPacketNumber = self.readPacketArray.length - 1;\r\n\t\tself.readPacketArray[thisPacketNumber].seqNum = self.masterSequenceNumber;\r\n\t\r\n\t\tself.readPacketArray[thisPacketNumber].itemList = [];  // Initialize as array.  \r\n\t\r\n\t\tfor (var i = requestNumber; i < requestList.length; i++) {\r\n\t\t\tif (numItems >= 1) {\r\n\t\t\t\tbreak;  // We can't fit this packet in here.  For now, this is always the case as we only have one item in MC protocol.\r\n\t\t\t}\r\n\t\t\trequestNumber++;\r\n\t\t\tnumItems++;\r\n\t\t\tself.readPacketArray[thisPacketNumber].itemList.push(requestList[i]);\r\n\t\t}\r\n\t}\r\n\tself.readPacketValid = true;\r\n}\r\n\r\nMCProtocol.prototype.sendReadPacket = function() {\r\n\tvar self = this;\r\n\tvar i, j, curLength, returnedBfr, routerLength;\r\n\tvar flagReconnect = false;\r\n\t\r\n\toutputLog(\"SendReadPacket called\",1,self.connectionID);\r\n\t\r\n\tfor (i = 0;i < self.readPacketArray.length; i++) {\r\n\t\tif (self.readPacketArray[i].sent) { continue; }\r\n\t\tif (self.parallelJobsNow >= self.maxParallel) { continue; }\r\n\t\t// From here down is SENDING the packet\r\n\t\tself.readPacketArray[i].reqTime = process.hrtime();\t\r\n\r\n\t\tcurLength = 0;\r\n\t\trouterLength = 0;\r\n\t\t\r\n\t\t// We always need an MC subheader BUT we are now going to do this in \r\n\t\t//self.readWordHeader.copy(self.readReq, curLength);\r\n\t\t//curLength = self.readWordHeader.length;\r\n\r\n\t\t// The FOR loop is left in here for now, but really we are only doing one request per packet for now.  \r\n\t\tfor (j = 0; j < self.readPacketArray[i].itemList.length; j++) {\r\n\t\t\treturnedBfr = MCAddrToBuffer(self.readPacketArray[i].itemList[j],false /* not writing */,self.isAscii);\r\n\r\n\t\t\toutputLog('The Returned MC Buffer is:',2);\r\n\t\t\toutputLog(returnedBfr, 2);\r\n\t\t\toutputLog(\"The returned buffer length is \" + returnedBfr.length, 2);\r\n\t\t\t\r\n\t\t\treturnedBfr.copy(self.readReq, curLength);\r\n\t\t\tcurLength += returnedBfr.length;\r\n\t\t}\r\n\r\n\t\toutputLog(\"The final send buffer is:\", 2);\r\n\t\tif (self.isAscii) {\r\n\t\t\toutputLog(asciize(self.readReq.slice(0,curLength)), 2);\r\n\t\t\toutputLog(binarize(asciize(self.readReq.slice(0,curLength))),2);\r\n\t\t} else {\r\n\t\t\toutputLog(self.readReq.slice(0,curLength), 2);\r\n\t\t}\r\n\t\t\r\n\t\tif (self.isoConnectionState == 4) {\r\n\t\t\tself.readPacketArray[i].timeout = setTimeout(function(){\r\n\t\t\t\tself.packetTimeout.apply(self,arguments);\r\n\t\t\t}, self.globalTimeout, \"read\", self.readPacketArray[i].seqNum); \r\n\t\t\tif (self.isAscii) {\r\n\t\t\t\tself.isoclient.write(asciize(self.readReq.slice(0,curLength)));  \t\t\t\r\n\t\t\t} else {\r\n\t\t\t\tself.isoclient.write(self.readReq.slice(0,curLength));  // was 31\r\n\t\t\t}\r\n\t\t\tself.readPacketArray[i].sent = true;\r\n\t\t\tself.readPacketArray[i].rcvd = false;\r\n\t\t\tself.readPacketArray[i].timeoutError = false;\r\n\t\t\tself.parallelJobsNow += 1;\r\n\t\t\toutputLog('Sending Read Packet SEQ ' + self.readPacketArray[i].seqNum,1);\t\r\n\t\t} else {\r\n//\t\t\toutputLog('Somehow got into read block without proper isoConnectionState of 4.  Disconnect.');\r\n//\t\t\tconnectionReset();\r\n//\t\t\tsetTimeout(connectNow, 2000, connectionParams);\r\n// Note we aren't incrementing maxParallel so we are actually going to time out on all our packets all at once.    \r\n\t\t\tself.readPacketArray[i].sent = true;\r\n\t\t\tself.readPacketArray[i].rcvd = false;\r\n\t\t\tself.readPacketArray[i].timeoutError = true;\t\r\n\t\t\tif (!flagReconnect) {\r\n\t\t\t\t// Prevent duplicates\r\n\t\t\t\toutputLog('Not Sending Read Packet because we are not connected - ISO CS is ' + self.isoConnectionState,0,self.connectionID);\t\r\n\t\t\t}\r\n\t\t\t// This is essentially an instantTimeout.  \r\n\t\t\tif (self.isoConnectionState == 0) {\r\n\t\t\t\tflagReconnect = true;\r\n\t\t\t}\r\n\t\t\toutputLog('Requesting PacketTimeout Due to ISO CS NOT 4 - READ SN ' + self.readPacketArray[i].seqNum,1,self.connectionID);\r\n\t\t\tself.readPacketArray[i].timeout = setTimeout(function() {\r\n\t\t\t\tself.packetTimeout.apply(self, arguments);\r\n\t\t\t}, 0, \"read\", self.readPacketArray[i].seqNum); \r\n\t\t}\r\n\t}\r\n\r\n\tif (flagReconnect) {\r\n\t\tsetTimeout(function() {\r\n\t\t\toutputLog(\"The scheduled reconnect from sendReadPacket is happening now\",1,self.connectionID);\t\r\n\t\t\tself.connectNow(self.connectionParams);  // We used to do this NOW - not NextTick() as we need to mark isoConnectionState as 1 right now.  Otherwise we queue up LOTS of connects and crash.\r\n\t\t}, 0);\r\n\t}\r\n}\r\n\r\nMCProtocol.prototype.sendWritePacket = function() {\r\n\tvar self = this;\r\n\tvar dataBuffer, itemDataBuffer, dataBufferPointer, curLength, returnedBfr, flagReconnect = false;\r\n\tdataBuffer = new Buffer(8192);\r\n\r\n\tself.writeInQueue = false;\r\n\t\r\n\tfor (i=0;i<self.writePacketArray.length;i++) {\r\n\t\tif (self.writePacketArray[i].sent) { continue; }\r\n\t\tif (self.parallelJobsNow >= self.maxParallel) { continue; }\r\n\t\t// From here down is SENDING the packet\r\n\t\tself.writePacketArray[i].reqTime = process.hrtime();\t\r\n\t\t\r\n\t\tcurLength = 0;\r\n \r\n\t\t// With MC we generate the simple header inside the packet generator as well\r\n\t\tdataBufferPointer = 0;\r\n\t\tfor (var j = 0; j < self.writePacketArray[i].itemList.length; j++) {\r\n\t\t\treturnedBfr = MCAddrToBuffer(self.writePacketArray[i].itemList[j], true /* writing */,self.isAscii);\r\n\t\t\treturnedBfr.copy(self.writeReq, curLength);\r\n\t\t\tcurLength += returnedBfr.length;\r\n\t\t}\r\n\t\r\n\t\toutputLog(\"The returned buffer length is \" + returnedBfr.length,1);\r\n\t\t\r\n\t\tif (self.isoConnectionState === 4) {\r\n\t\t\tself.writePacketArray[i].timeout = setTimeout(function() {\r\n\t\t\t\tself.packetTimeout.apply(self, arguments);\r\n\t\t\t}, self.globalTimeout, \"write\", self.writePacketArray[i].seqNum); \r\n\t\t\toutputLog(\"Actual Send Packet:\",2);\r\n\t\t\toutputLog(self.writeReq.slice(0,curLength),2);\r\n\t\t\tif (self.isAscii) {\r\n\t\t\t\tself.isoclient.write(asciize(self.writeReq.slice(0,curLength)));  // was 31\r\n\t\t\t} else {\r\n\t\t\t\tself.isoclient.write(self.writeReq.slice(0,curLength));  // was 31\r\n\t\t\t}\r\n\t\t\tself.writePacketArray[i].sent = true;\r\n\t\t\tself.writePacketArray[i].rcvd = false;\r\n\t\t\tself.writePacketArray[i].timeoutError = false;\r\n\t\t\tself.parallelJobsNow += 1;\r\n\t\t\toutputLog('Sending Write Packet With Sequence Number ' + self.writePacketArray[i].seqNum,1,self.connectionID);\r\n\t\t} else {\r\n\t\t\t// This is essentially an instantTimeout.  \r\n\t\t\tself.writePacketArray[i].sent = true;\r\n\t\t\tself.writePacketArray[i].rcvd = false;\r\n\t\t\tself.writePacketArray[i].timeoutError = true;\r\n\r\n\t\t\t// Without the scopePlaceholder, this doesn't work.   writePacketArray[i] becomes undefined.\r\n\t\t\t// The reason is that the value i is part of a closure and when seen \"nextTick\" has the same value \r\n\t\t\t// it would have just after the FOR loop is done.  \r\n\t\t\t// (The FOR statement will increment it to beyond the array, then exit after the condition fails)\r\n\t\t\t// scopePlaceholder works as the array is de-referenced NOW, not \"nextTick\".  \r\n\t\t\tvar scopePlaceholder = self.writePacketArray[i].seqNum;\r\n\t\t\tprocess.nextTick(function() {\r\n\t\t\t\tself.packetTimeout(\"write\", scopePlaceholder);\r\n\t\t\t});\r\n\t\t\tif (self.isoConnectionState == 0) {\r\n\t\t\t\tflagReconnect = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (flagReconnect) {\r\n\t\tsetTimeout(function() {\r\n\t\t\toutputLog(\"The scheduled reconnect from sendWritePacket is happening now\",1,self.connectionID);\t\r\n\t\t\tself.connectNow(self.connectionParams);  // We used to do this NOW - not NextTick() as we need to mark isoConnectionState as 1 right now.  Otherwise we queue up LOTS of connects and crash.\r\n\t\t}, 0);\r\n\t}\r\n}\r\n\r\nMCProtocol.prototype.isOptimizableArea = function(area) {\r\n\tvar self = this;\r\n\t// For MC protocol always say yes.  \r\n\tif (self.doNotOptimize) { return false; } // Are we skipping all optimization due to user request?\r\n\t\r\n\treturn true;\r\n}\r\n\r\nMCProtocol.prototype.onResponse = function(rawdata) {\r\n\tvar self = this;\r\n\tvar isReadResponse, isWriteResponse,data;\t\r\n\t// Packet Validity Check.  \r\n\t\r\n\tif (!self.isAscii) {\r\n\t\tdata = rawdata;\r\n\t} else {\r\n\t\tdata = binarize(rawdata);\r\n\t\tif (typeof(data) === 'undefined') {\r\n\t\t\toutputLog('Failed ASCII conversion to binary on reply. Ignoring packet.');\r\n\t\t\toutputLog(data,0);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\t\r\n\t// Decrement our parallel jobs now\r\n\r\n\t// NOT SO FAST - can't do this here.  If we time out, then later get the reply, we can't decrement this twice.  Or the CPU will not like us.  Do it if not rcvd.  parallelJobsNow--;\r\n\r\n\toutputLog(\"onResponse called with length \" + data.length,1);\r\n\t\r\n\tif (data.length < 2) { \r\n\t\toutputLog('DATA LESS THAN 2 BYTES RECEIVED.  NO PROCESSING WILL OCCUR - CONNECTION RESET.');\r\n\t\toutputLog(data,0);\r\n\t\tself.connectionReset();\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\toutputLog('Valid MC Response Received (not yet checked for error)', 1);\r\n\t\r\n\t// Log the receive\r\n\toutputLog('Received ' + data.length + ' bytes of data from PLC.', 1); \r\n\toutputLog(data, 2);\r\n\t\r\n\t// Check the sequence number\t\r\n\r\n\r\n\t// On a lot of other industrial protocols the sequence number is coded as part of the \r\n\t// packet and read in the response which is used as a check.\r\n\t\r\n\t// On the MC protocol, we can't do that - so we need to either give up on tracking sequence\r\n\t// numbers (this is what we've done) or fake sequence numbers (adds code complexity for no perceived benefit)\r\n\r\n\tif (self.isReading()) {\r\n\t\tisReadResponse = true;\r\n\t\toutputLog(\"Received Read Response\",1);\t\t\r\n\t\tself.readResponse(data);\r\n\t}\r\n\t\r\n\tif (self.isWriting()) {\r\n\t\tisWriteResponse = true;\r\n\t\toutputLog(\"Received Write Response\",1);\r\n\t\tself.writeResponse(data);\r\n\t}\r\n\t\t\r\n\tif ((!isReadResponse) && (!isWriteResponse)) {\r\n\t\toutputLog(\"Sequence number that arrived wasn't a write or read reply - dropping\");\r\n\t\toutputLog(data,0);\r\n\t\t// \tI guess this isn't a showstopper, just ignore it.  In situations like this we used to reset.\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nMCProtocol.prototype.writeResponse = function(data) {\r\n\tvar self = this;\r\n\tvar dataPointer = 2,i,anyBadQualities,sentPacketNum;\r\n\r\n\tfor (packetCounter = 0; packetCounter < self.writePacketArray.length; packetCounter++) {\r\n\t\tif (self.writePacketArray[packetCounter].sent && !(self.writePacketArray[packetCounter].rcvd)) {\r\n\t\t\tsentPacketNum = packetCounter; \r\n\t\t\tbreak; // Done with the FOR loop\r\n\t\t}\r\n\t}\r\n\t\r\n\tif (typeof(sentPacketNum) === 'undefined') {\r\n\t\toutputLog('WARNING: Received a write packet when none marked as sent',0,self.connectionID);\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\tif (self.writePacketArray[sentPacketNum].rcvd) {\r\n\t\toutputLog('WARNING: Received a write packet that was already marked as received',0,self.connectionID);\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\tfor (itemCount = 0; itemCount < self.writePacketArray[sentPacketNum].itemList.length; itemCount++) {\r\n\t\tdataPointer = processMBWriteItem(data, self.writePacketArray[sentPacketNum].itemList[itemCount], dataPointer);\r\n\t\tif (!dataPointer) {\r\n\t\t\toutputLog('Stopping Processing Write Response Packet due to unrecoverable packet error');\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t// Make a note of the time it took the PLC to process the request.  \r\n\tself.writePacketArray[sentPacketNum].reqTime = process.hrtime(self.writePacketArray[sentPacketNum].reqTime);\r\n\toutputLog('Time is ' + self.writePacketArray[sentPacketNum].reqTime[0] + ' seconds and ' + Math.round(self.writePacketArray[sentPacketNum].reqTime[1]*10/1e6)/10 + ' ms.',1);\r\n\r\n//\twritePacketArray.splice(sentPacketNum, 1);\r\n\tif (!self.writePacketArray[sentPacketNum].rcvd) {\r\n\t\tself.writePacketArray[sentPacketNum].rcvd = true;\r\n\t\tself.parallelJobsNow--;\r\n\t}\r\n\tclearTimeout(self.writePacketArray[sentPacketNum].timeout);\t\r\n\t\r\n\tif (!self.writePacketArray.every(doneSending)) {\r\n//\t\t\treadPacketInterval = setTimeout(prepareReadPacket, 3000);\r\n\t\tself.sendWritePacket();\r\n\t\toutputLog(\"Sending again\",1);\r\n\t} else {\r\n\t\tfor (i=0;i<self.writePacketArray.length;i++) {\r\n\t\t\tself.writePacketArray[i].sent = false;\r\n\t\t\tself.writePacketArray[i].rcvd = false;\t\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tanyBadQualities = false;\r\n\t\t\r\n\t\tfor (i=0;i<self.globalWriteBlockList.length;i++) {\r\n\t\t\t// Post-process the write code and apply the quality.  \r\n\t\t\t// Loop through the global block list...\r\n\t\t\twritePostProcess(self.globalWriteBlockList[i]);\r\n\t\t\toutputLog(self.globalWriteBlockList[i].addr + ' write completed with quality ' + self.globalWriteBlockList[i].writeQuality,0);\r\n\t\t\tif (!isQualityOK(self.globalWriteBlockList[i].writeQuality)) { anyBadQualities = true; }\r\n\t\t}\r\n\t\tif (typeof(self.writeDoneCallback === 'function')) {\r\n\t\t\tself.writeDoneCallback(anyBadQualities);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nMCProtocol.prototype.readResponse = function(data) {\r\n\tvar self = this;\r\n\tvar anyBadQualities,dataPointer = 21,rcvdPacketNum;  // For non-routed packets we start at byte 21 of the packet.  If we do routing it will be more than this.  \r\n\tvar dataObject = {};\r\n\t\r\n\toutputLog(\"ReadResponse called\",1,self.connectionID);\r\n\r\n\tfor (packetCounter = 0; packetCounter < self.readPacketArray.length; packetCounter++) {\r\n\t\tif (self.readPacketArray[packetCounter].sent && !(self.readPacketArray[packetCounter].rcvd)) {\r\n\t\t\trcvdPacketNum = packetCounter; \r\n\t\t\tbreak; // Done with the FOR loop\r\n\t\t}\r\n\t}\r\n\t\r\n\tif (typeof(rcvdPacketNum) === 'undefined') {\r\n\t\toutputLog('WARNING: Received a read response packet that was not marked as sent',0,self.connectionID);\r\n\t\t//TODO - fix the network unreachable error that made us do this\t\t\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\tif (self.readPacketArray[rcvdPacketNum].rcvd) {\r\n\t\toutputLog('WARNING: Received a read response packet that was already marked as received',0,self.connectionID);\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\tfor (itemCount = 0; itemCount < self.readPacketArray[rcvdPacketNum].itemList.length; itemCount++) {\r\n\t\tdataPointer = processMBPacket(data, self.readPacketArray[rcvdPacketNum].itemList[itemCount], dataPointer);\r\n\t\tif (!dataPointer && typeof(data) !== \"undefined\") {\r\n\t\t\t// Don't bother showing this message on timeout.\r\n\t\t\toutputLog('Received a ZERO RESPONSE Processing Read Packet due to unrecoverable packet error');\r\n//\t\t\tbreak;  // We rely on this for our timeout now.  \r\n\t\t}\r\n\t}\r\n\t\r\n\t// Make a note of the time it took the PLC to process the request.  \r\n\tself.readPacketArray[rcvdPacketNum].reqTime = process.hrtime(self.readPacketArray[rcvdPacketNum].reqTime);\r\n\toutputLog('Read Time is ' + self.readPacketArray[rcvdPacketNum].reqTime[0] + ' seconds and ' + Math.round(self.readPacketArray[rcvdPacketNum].reqTime[1]*10/1e6)/10 + ' ms.',1,self.connectionID);\r\n\r\n\t// Do the bookkeeping for packet and timeout.  \r\n\tif (!self.readPacketArray[rcvdPacketNum].rcvd) {\r\n\t\tself.readPacketArray[rcvdPacketNum].rcvd = true;\r\n\t\tself.parallelJobsNow--;\r\n\t\tif (self.parallelJobsNow < 0) { self.parallelJobsNow = 0; }\r\n\t}\r\n\tclearTimeout(self.readPacketArray[rcvdPacketNum].timeout);\t\r\n\t\r\n\tif(self.readPacketArray.every(doneSending)) {  // if sendReadPacket returns true we're all done.  \r\n\t\t// Mark our packets unread for next time.  \r\n\t\toutputLog('Every packet done sending',1,self.connectionID);\r\n\t\tfor (i=0;i<self.readPacketArray.length;i++) {\r\n\t\t\tself.readPacketArray[i].sent = false;\r\n\t\t\tself.readPacketArray[i].rcvd = false;\r\n\t\t}\r\n\t\r\n\t\tanyBadQualities = false;\r\n\t\t\r\n\t\t// Loop through the global block list...\r\n\t\tfor (var i=0;i<self.globalReadBlockList.length;i++) {\r\n\t\t\tvar lengthOffset = 0;\r\n\t\t\t// For each block, we loop through all the requests.  Remember, for all but large arrays, there will only be one.  \r\n\t\t\tfor (var j=0;j<self.globalReadBlockList[i].requestReference.length;j++) {\r\n\t\t\t\t// Now that our request is complete, we reassemble the BLOCK byte buffer as a copy of each and every request byte buffer.\r\n\t\t\t\tself.globalReadBlockList[i].requestReference[j].byteBuffer.copy(self.globalReadBlockList[i].byteBuffer,lengthOffset,0,self.globalReadBlockList[i].requestReference[j].byteLength);\r\n\t\t\t\tself.globalReadBlockList[i].requestReference[j].qualityBuffer.copy(self.globalReadBlockList[i].qualityBuffer,lengthOffset,0,self.globalReadBlockList[i].requestReference[j].byteLength);\r\n\t\t\t\tlengthOffset += self.globalReadBlockList[i].requestReference[j].byteLength;\t\t\t\t\r\n\t\t\t}\r\n\t\t\t// For each ITEM reference pointed to by the block, we process the item. \r\n\t\t\tfor (var k=0;k<self.globalReadBlockList[i].itemReference.length;k++) {\r\n//\t\t\t\toutputLog(self.globalReadBlockList[i].itemReference[k].byteBuffer);\r\n\t\t\t\tprocessMCReadItem(self.globalReadBlockList[i].itemReference[k],self.isAscii);\r\n\t\t\t\toutputLog('Address ' + self.globalReadBlockList[i].itemReference[k].addr + ' has value ' + self.globalReadBlockList[i].itemReference[k].value + ' and quality ' + self.globalReadBlockList[i].itemReference[k].quality,1,self.connectionID);\r\n\t\t\t\tif (!isQualityOK(self.globalReadBlockList[i].itemReference[k].quality)) { \r\n\t\t\t\t\tanyBadQualities = true; \r\n\t\t\t\t\tdataObject[self.globalReadBlockList[i].itemReference[k].useraddr] = self.globalReadBlockList[i].itemReference[k].quality;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdataObject[self.globalReadBlockList[i].itemReference[k].useraddr] = self.globalReadBlockList[i].itemReference[k].value;\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// Inform our user that we are done and that the values are ready for pickup.\r\n\r\n\t\toutputLog(\"We are calling back our readDoneCallback.\",1,self.connectionID);\r\n\t\tif (typeof(self.readDoneCallback === 'function')) {\r\n\t\t\tself.readDoneCallback(anyBadQualities, dataObject);\r\n\t\t}\r\n\t\tif (self.resetPending) {\r\n\t\t\tself.resetNow();\r\n\t\t}\r\n\t\tif (!self.isReading() && self.writeInQueue) { self.sendWritePacket(); }\r\n\t} else {\r\n\t\toutputLog(\"Calling SRP from RR\",1,self.connectionID);\r\n\t\tself.sendReadPacket();\r\n\t}\r\n}\r\n\r\nMCProtocol.prototype.onClientDisconnect = function() {\r\n\tvar self = this;\r\n\toutputLog('EIP/TCP DISCONNECTED.');\r\n\tself.connectionCleanup();\r\n\tself.tryingToConnectNow = false;\r\n}\r\n\r\nMCProtocol.prototype.connectionReset = function() {\r\n\tvar self = this;\r\n\tself.isoConnectionState = 0;\r\n\tself.resetPending = true;\r\n\toutputLog('ConnectionReset is happening');\r\n\t// The problem is that if we are interrupted before a read can be completed, say we get a bogus packet - we'll never recover.\r\n\t// We \r\n\tif (!self.isReading() && typeof(self.resetTimeout) === 'undefined') { // For now - ignore writes.  && !isWriting()) {\t\r\n\t\tself.resetTimeout = setTimeout(function() {\r\n\t\t\tself.resetNow.apply(self, arguments);\r\n\t\t} ,1500);\r\n\t} \r\n\t// For now we wait until read() is called again to re-connect.  \r\n}\r\n\r\nMCProtocol.prototype.resetNow = function() {\r\n\tvar self = this;\r\n\tself.isoConnectionState = 0;\r\n\tself.isoclient.end();\r\n\toutputLog('ResetNOW is happening');\r\n\tself.resetPending = false;\r\n\t// In some cases, we can have a timeout scheduled for a reset, but we don't want to call it again in that case.\r\n\t// We only want to call a reset just as we are returning values.  Otherwise, we will get asked to read // more values and we will \"break our promise\" to always return something when asked. \r\n\tif (typeof(self.resetTimeout) !== 'undefined') {\r\n\t\tclearTimeout(self.resetTimeout);\r\n\t\tself.resetTimeout = undefined;\r\n\t\toutputLog('Clearing an earlier scheduled reset');\r\n\t}\r\n}\r\n\r\nMCProtocol.prototype.connectionCleanup = function() {\r\n\tvar self = this;\r\n\tself.isoConnectionState = 0;\r\n\toutputLog('Connection cleanup is happening');\t\r\n\tif (typeof(self.isoclient) !== \"undefined\") {\r\n\t\tself.isoclient.removeAllListeners('data');\r\n\t\tself.isoclient.removeAllListeners('error');\r\n\t\tself.isoclient.removeAllListeners('connect');\r\n\t\tself.isoclient.removeAllListeners('end');\r\n\t}\r\n\tclearTimeout(self.connectTimeout);\r\n\tclearTimeout(self.PDUTimeout);\r\n\tself.clearReadPacketTimeouts();  // Note this clears timeouts.  \r\n\tself.clearWritePacketTimeouts();  // Note this clears timeouts.   \r\n}\r\n\r\nfunction outputLog(txt, debugLevel, id) {\r\n\tvar idtext;\r\n\tif (typeof(id) === 'undefined') {\r\n\t\tidtext = '';\r\n\t} else {\r\n\t\tidtext = ' ' + id;\r\n\t}\r\n\tif (typeof(debugLevel) === 'undefined' || effectiveDebugLevel >= debugLevel) { console.log('[' + process.hrtime() + idtext + '] ' + util.format(txt)); }\r\n}\r\n\r\nfunction doneSending(element) {\r\n\treturn ((element.sent && element.rcvd) ? true : false);\r\n}\r\n\r\nfunction processMBPacket(theData, theItem, thePointer) {\r\n\tvar remainingLength;\r\n\t\r\n\tif (typeof(theData) === \"undefined\") {\r\n\t\tremainingLength = 0;\r\n//\t\toutputLog(\"Processing an undefined packet, likely due to timeout error\");\r\n\t} else {\r\n\t\tremainingLength = theData.length;\r\n\t}\r\n\t\r\n\tvar prePointer = thePointer;\r\n\r\n\t// Create a new buffer for the quality.  \r\n\ttheItem.qualityBuffer = new Buffer(theItem.byteLength);\r\n\ttheItem.qualityBuffer.fill(0xFF);  // Fill with 0xFF (255) which means NO QUALITY in the OPC world.  \r\n\t\r\n\tif (remainingLength < 2) {\r\n\t\ttheItem.valid = false;\r\n\t\tif (typeof(theData) !== \"undefined\") {\r\n\t\t\ttheItem.errCode = 'Malformed MC Packet - Less Than 2 Bytes.  TDL ' + theData.length + ' TP ' + thePointer + ' RL' + remainingLength;\r\n\t\t\toutputLog(theItem.errCode,0);  // Can't log more info here as we dont have \"self\" info\r\n\t\t} else {\r\n\t\t\ttheItem.errCode = \"Timeout error - zero length packet\";\r\n\t\t\toutputLog(theItem.errCode,1);  // Can't log more info here as we dont have \"self\" info\r\n\t\t}\r\n\t\treturn 0;   \t\t\t// Hard to increment the pointer so we call it a malformed packet and we're done.      \r\n\t}\r\n\t\r\n\tif (theData[0] !== 0x81) { // 0x80 = bit reply, 0x81 = word reply\r\n\t\ttheItem.valid = false;\r\n\t\ttheItem.errCode = 'Invalid MC - Expected first byte (binary) to be 0x81 (129) - got ' + decimalToHexString(theData[0]) + \" (\" + theData[0] + \")\";\r\n\t\toutputLog(theItem.errCode);\r\n\t\treturn 1; //thePointer + reportedDataLength + 4;\r\n\t}\r\n\t\r\n\tif (theData[1] !== 0x00) {\r\n\t\ttheItem.valid = false;\r\n\t\ttheItem.errCode = 'MC Error Response - Second Byte is ' + theData[1] + ' and error code is ' + theData[2];\r\n\t\toutputLog(theItem.errCode);\r\n\t\treturn 1; //thePointer + reportedDataLength + 4;   \t\t\t      \r\n\t}\t\r\n\r\n\t// There is no reported data length to check here - \r\n\t// reportedDataLength = theData[9];\r\n\r\n\texpectedLength = theItem.byteLength;\r\n\t\t\t\r\n\tif (theData.length - 2 !== expectedLength) {\r\n\t\ttheItem.valid = false;\r\n\t\ttheItem.errCode = 'Invalid Response Length - Expected ' + expectedLength + ' but got ' + (theData.length - 2) + ' bytes.';\r\n\t\toutputLog(theItem.errCode);\r\n\t\treturn 1;  \r\n\t}\t\r\n\t\r\n\t// Looks good so far.  \r\n\t// Increment our data pointer past the 2 byte subheader and complete code.\r\n\tthePointer += 2;\r\n\t\r\n\tvar arrayIndex = 0;\r\n\t\r\n\ttheItem.valid = true;\r\n\ttheItem.byteBuffer = theData.slice(2); // This means take to end.\r\n\t\r\n\toutputLog('Byte Buffer is:',2);\r\n\toutputLog(theItem.byteBuffer,2);\r\n\t\r\n\ttheItem.qualityBuffer.fill(0xC0);  // Fill with 0xC0 (192) which means GOOD QUALITY in the OPC world.  \r\n\toutputLog('Marking quality as good L' + theItem.qualityBuffer.length,2);\r\n\t\t\r\n\treturn -1; //thePointer;\r\n}\r\n\r\nfunction processMBWriteItem(theData, theItem, thePointer) {\r\n\t\r\n//\tvar remainingLength = theData.length - thePointer;  // Say if length is 39 and pointer is 35 we can access 35,36,37,38 = 4 bytes.  \r\n//\tvar prePointer = thePointer;\r\n\t\r\n\tif (typeof(theData) === 'undefined' || theData.length < 2) {  // Should be at least 11 bytes with 7 byte header\r\n\t\ttheItem.valid = false;\r\n\t\ttheItem.errCode = 'Malformed Reply MC Packet - Less Than 2 Bytes' + theData;\r\n\t\toutputLog(theItem.errCode);\r\n\t\ttheItem.writeQualityBuffer.fill(0xFF);  // Note that ff is BAD in our fill here. \t\t\r\n\t\treturn 0;   \t\t\t// Hard to increment the pointer so we call it a malformed packet and we're done.      \r\n\t}\r\n\t\r\n\tvar writeResponse = theData.readUInt8(1);\r\n\t\r\n\tif (writeResponse !== 0x00 || (theData[0] !== 0x82) && (theData[0] !== 0x83)) {\r\n\t\tif (theData.length > 2) {\r\n\t\t\toutputLog ('Received response ' + theData[0] + ' ' + theData[1] + ' ' + theData[2] + ') indicating write error on ' + theItem.addr);\r\n\t\t} else {\r\n\t\t\toutputLog ('Received response ' + theData[0] + ' ' + theData[1] + ') indicating write error on ' + theItem.addr);\r\n\t\t}\r\n\t\ttheItem.writeQualityBuffer.fill(0xFF);  // Note that ff is BAD in our fill here.  \r\n\t} else {\r\n\t\ttheItem.writeQualityBuffer.fill(0xC0);\r\n\t}\t\r\n\t\r\n\treturn -1;\r\n}\r\n\r\nfunction writePostProcess(theItem) {\r\n\tvar thePointer = 0;\r\n\tif (theItem.arrayLength === 1) {\r\n\t\tif (theItem.writeQualityBuffer[0] === 0xFF) { \r\n\t\t\ttheItem.writeQuality = 'BAD';\r\n\t\t} else { \r\n\t\t\ttheItem.writeQuality = 'OK';\r\n\t\t}\r\n\t} else {\r\n\t\t// Array value.\r\n\t\ttheItem.writeQuality = [];\r\n\t\tfor (arrayIndex = 0; arrayIndex < theItem.arrayLength; arrayIndex++) {\r\n\t\t\tif (theItem.writeQualityBuffer[thePointer] === 0xFF) { \r\n\t\t\t\ttheItem.writeQuality[arrayIndex] = 'BAD';\r\n\t\t\t} else { \r\n\t\t\t\ttheItem.writeQuality[arrayIndex] = 'OK';\r\n\t\t\t}\r\n\t\t\tif (theItem.datatype == 'X' ) {\r\n\t\t\t\t// For bit arrays, we have to do some tricky math to get the pointer to equal the byte offset. \r\n\t\t\t\t// Note that we add the bit offset here for the rare case of an array starting at other than zero.  We either have to \r\n\t\t\t\t// drop support for this at the request level or support it here.  \r\n\t\t\t\tif ((((arrayIndex + theItem.bitOffset + 1) % 8) == 0) || (arrayIndex == theItem.arrayLength - 1)){\r\n\t\t\t\t\tthePointer += theItem.dtypelen;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Add to the pointer every time.  \r\n\t\t\t\tthePointer += theItem.dtypelen;\r\n\t\t\t}\r\n\t\t}\r\n\t} \r\n}\r\n\r\n\r\nfunction processMCReadItem(theItem, isAscii) {\r\n\t\r\n\tvar thePointer = 0,tempBuffer = new Buffer(4);\r\n\t\r\n\tif (theItem.arrayLength > 1) {\r\n\t\t// Array value.  \r\n\t\tif (theItem.datatype != 'C' && theItem.datatype != 'CHAR') {\r\n\t\t\ttheItem.value = [];\r\n\t\t\ttheItem.quality = [];\r\n\t\t} else {\r\n\t\t\ttheItem.value = '';\r\n\t\t\ttheItem.quality = '';\r\n\t\t}\r\n\t\tvar bitShiftAmount = theItem.bitOffset;\r\n\t\tif (theItem.bitNative) {\r\n\t\t\tbitShiftAmount = theItem.remainder;\r\n\t\t}\r\n\r\n\t\tfor (arrayIndex = 0; arrayIndex < theItem.arrayLength; arrayIndex++) {\r\n\t\t\tif (theItem.qualityBuffer[thePointer] !== 0xC0) {\r\n\t\t\t\ttheItem.value.push(theItem.badValue());\r\n\t\t\t\ttheItem.quality.push('BAD ' + theItem.qualityBuffer[thePointer]);\r\n\t\t\t\toutputLog(\"Logging a Bad Quality thePointer \" + thePointer,2);\r\n\t\t\t} else {\r\n\t\t\t\t// If we're a string, quality is not an array.\r\n\t\t\t\tif (theItem.quality instanceof Array) {\r\n\t\t\t\t\ttheItem.quality.push('OK');\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttheItem.quality = 'OK';\r\n\t\t\t\t}\r\n\t\t\t\tswitch(theItem.datatype) {\r\n\r\n\t\t\t\tcase \"REAL\":\r\n\t\t\t\t\tif (isAscii) {\r\n\t\t\t\t\t\ttheItem.value.push(getFloatBESwap(theItem.byteBuffer, thePointer));\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttheItem.value.push(theItem.byteBuffer.readFloatLE(thePointer));\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"DWORD\":\r\n\t\t\t\t\tif (isAscii) {\r\n\t\t\t\t\t\ttheItem.value.push(getUInt32BESwap(theItem.byteBuffer, thePointer));\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttheItem.value.push(theItem.byteBuffer.readUInt32LE(thePointer));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"DINT\":\r\n\t\t\t\t\tif (isAscii) {\r\n\t\t\t\t\t\ttheItem.value.push(getInt32BESwap(theItem.byteBuffer, thePointer));\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttheItem.value.push(theItem.byteBuffer.readInt32LE(thePointer));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"INT\":\r\n\t\t\t\t\tif (isAscii) {\r\n\t\t\t\t\t\ttheItem.value.push(theItem.byteBuffer.readInt16BE(thePointer));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttheItem.value.push(theItem.byteBuffer.readInt16LE(thePointer));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"WORD\":\r\n\t\t\t\t\tif (isAscii) {\r\n\t\t\t\t\t\ttheItem.value.push(theItem.byteBuffer.readUInt16BE(thePointer));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttheItem.value.push(theItem.byteBuffer.readUInt16LE(thePointer));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"X\":\r\n\t\t\t\t\tif (theItem.bitNative) {\r\n\t\t\t\t\t\tif (isAscii) {\r\n\t\t\t\t\t\t\ttheItem.value.push(((theItem.byteBuffer.readUInt16BE(thePointer) >> (bitShiftAmount)) & 1) ? true : false);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ttheItem.value.push(((theItem.byteBuffer.readUInt16LE(thePointer) >> (bitShiftAmount)) & 1) ? true : false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (isAscii) {\r\n\t\t\t\t\t\t\ttheItem.value.push(((theItem.byteBuffer.readUInt16BE(thePointer) >> (bitShiftAmount)) & 1) ? true : false);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ttheItem.value.push(((theItem.byteBuffer.readUInt16LE(thePointer) >> (bitShiftAmount)) & 1) ? true : false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"B\":\r\n\t\t\t\tcase \"BYTE\":\r\n\t\t\t\t\tif (isAscii) {\r\n\t\t\t\t\t\tif (arrayIndex % 2) {\r\n\t\t\t\t\t\t\ttheItem.value.push(theItem.byteBuffer.readUInt8(thePointer - 1));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ttheItem.value.push(theItem.byteBuffer.readUInt8(thePointer + 1));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttheItem.value.push(theItem.byteBuffer.readUInt8(thePointer));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"C\":\r\n\t\t\t\tcase \"CHAR\":\r\n\t\t\t\t\t// Convert to string.  \r\n\t\t\t\t\tif (isAscii) {\r\n\t\t\t\t\t\tif (arrayIndex % 2) {\r\n\t\t\t\t\t\t\ttheItem.value += String.fromCharCode(theItem.byteBuffer.readUInt8(thePointer - 1));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ttheItem.value += String.fromCharCode(theItem.byteBuffer.readUInt8(thePointer + 1));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttheItem.value += String.fromCharCode(theItem.byteBuffer.readUInt8(thePointer));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\t\tdefault:\r\n\t\t\t\t\toutputLog(\"Unknown data type in response - should never happen.  Should have been caught earlier.  \" + theItem.datatype);\r\n\t\t\t\t\treturn 0;\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (theItem.datatype == 'X' ) {\r\n\t\t\t\t// For bit arrays, we have to do some tricky math to get the pointer to equal the byte offset. \r\n\t\t\t\t// Note that we add the bit offset here for the rare case of an array starting at other than zero.  We either have to \r\n\t\t\t\t// drop support for this at the request level or support it here.  \r\n\t\t\t\tbitShiftAmount++;\r\n\t\t\t\tif (theItem.bitNative) {\r\n\t\t\t\t\tif ((((arrayIndex + theItem.remainder + 1) % 16) == 0) || (arrayIndex == theItem.arrayLength - 1)){ // NOTE: The second or case is for the case of the end of an array where we increment for next read - not important for MC protocol\r\n\t\t\t\t\t\tthePointer += theItem.dtypelen;  \r\n\t\t\t\t\t\tbitShiftAmount = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Never tested\r\n\t\t\t\t\tif ((((arrayIndex + theItem.bitOffset + 1) % 16) == 0) || (arrayIndex == theItem.arrayLength - 1)){\r\n\t\t\t\t\t\tthePointer += theItem.dtypelen; // I guess this is 1 for bits.  \r\n\t\t\t\t\t\tbitShiftAmount = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Add to the pointer every time.  \r\n\t\t\t\tthePointer += theItem.dtypelen; \t\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\t\t\r\n\t\t// Single value.  \t\r\n\t\tif (theItem.qualityBuffer[thePointer] !== 0xC0) {\r\n\t\t\ttheItem.value = theItem.badValue();\r\n\t\t\ttheItem.quality = ('BAD ' + theItem.qualityBuffer[thePointer]);\r\n\t\t\toutputLog(\"Item Quality is Bad\", 1);\t\t\t\r\n\t\t} else {\r\n\t\t\ttheItem.quality = ('OK');\r\n\t\t\toutputLog(\"Item Datatype (single value) is \" + theItem.datatype, 1);\t\t\t\r\n\t\t\tswitch(theItem.datatype) {\r\n\r\n\t\t\tcase \"REAL\":\r\n\t\t\t\tif (isAscii) {\r\n\t\t\t\t\ttheItem.value = getFloatBESwap(theItem.byteBuffer, thePointer);\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttheItem.value = theItem.byteBuffer.readFloatLE(thePointer);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"DWORD\":\r\n\t\t\t\tif (isAscii) {\r\n\t\t\t\t\ttheItem.value = getUInt32BESwap(theItem.byteBuffer, thePointer);\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttheItem.value = theItem.byteBuffer.readUInt32LE(thePointer);\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"DINT\":\r\n\t\t\t\tif (isAscii) {\r\n\t\t\t\t\ttheItem.value = getInt32BESwap(theItem.byteBuffer, thePointer);\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttheItem.value = theItem.byteBuffer.readInt32LE(thePointer);\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"INT\":\r\n\t\t\t\tif (isAscii) {\r\n\t\t\t\t\ttheItem.value = theItem.byteBuffer.readInt16BE(thePointer);\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttheItem.value = theItem.byteBuffer.readInt16LE(thePointer);\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"WORD\":\r\n\t\t\t\tif (isAscii) {\r\n\t\t\t\t\ttheItem.value = theItem.byteBuffer.readUInt16BE(thePointer);\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttheItem.value = theItem.byteBuffer.readUInt16LE(thePointer);\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"X\":\r\n//\t\t\toutputLog(\"Reading single Value ByteBufferLength is \" + theItem.byteBuffer.length, 1);\r\n\t\t\t\tif (theItem.bitNative) {\r\n\t\t\t\t\tif (isAscii) {\r\n\t\t\t\t\t\ttheItem.value = (((theItem.byteBuffer.readUInt16BE(thePointer) >> (theItem.remainder)) & 1) ? true : false);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttheItem.value = (((theItem.byteBuffer.readUInt16LE(thePointer) >> (theItem.remainder)) & 1) ? true : false);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (isAscii) {\r\n\t\t\t\t\t\ttheItem.value = (((theItem.byteBuffer.readUInt16BE(thePointer) >> (theItem.bitOffset)) & 1) ? true : false);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttheItem.value = (((theItem.byteBuffer.readUInt16LE(thePointer) >> (theItem.bitOffset)) & 1) ? true : false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"B\":\r\n\t\t\tcase \"BYTE\":\r\n\t\t\t\t// No support as of yet for signed 8 bit.  This isn't that common.  \r\n\t\t\t\tif (isAscii) {\r\n\t\t\t\t\ttheItem.value = theItem.byteBuffer.readUInt8(thePointer + 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttheItem.value = theItem.byteBuffer.readUInt8(thePointer);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"C\":\r\n\t\t\tcase \"CHAR\":\r\n\t\t\t\t// No support as of yet for signed 8 bit.  This isn't that common.  \r\n\t\t\t\tif (isAscii) {\r\n\t\t\t\t\ttheItem.value = String.fromCharCode(theItem.byteBuffer.readUInt8(thePointer + 1));\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttheItem.value = String.fromCharCode(theItem.byteBuffer.readUInt8(thePointer));\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\toutputLog(\"Unknown data type in response - should never happen.  Should have been caught earlier.  \" + theItem.datatype);\r\n\t\t\t\treturn 0;\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\tthePointer += theItem.dtypelen; \t\r\n\t}\t\r\n\r\n\tif (((thePointer) % 2)) { // Odd number.  \r\n\t\tthePointer += 1;\r\n\t}\r\n\r\n\treturn thePointer; // Should maybe return a value now???\r\n}\r\n\r\nfunction bufferizeMCItem(theItem, isAscii) {\t\r\n\tvar thePointer, theByte;\r\n\ttheByte = 0;\r\n\tthePointer = 0; // After length and header\r\n\t\r\n\tif (theItem.arrayLength > 1) {\r\n\t\t// Array value.  \r\n\t\tvar bitShiftAmount = theItem.bitOffset;\r\n\t\tfor (arrayIndex = 0; arrayIndex < theItem.arrayLength; arrayIndex++) {\r\n\t\t\tswitch(theItem.datatype) {\r\n\t\t\t\tcase \"REAL\":\r\n\t\t\t\t\tif (isAscii) {\r\n\t\t\t\t\t\tsetFloatBESwap(theItem.writeBuffer, thePointer, theItem.writeValue[arrayIndex]);\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttheItem.writeBuffer.writeFloatLE(theItem.writeValue[arrayIndex], thePointer);\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"DWORD\":\r\n\t\t\t\t\tif (isAscii) {\r\n\t\t\t\t\t\tsetUInt32BESwap(theItem.writeBuffer, thePointer, theItem.writeValue[arrayIndex]);\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttheItem.writeBuffer.writeUInt32LE(theItem.writeValue[arrayIndex], thePointer);\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"DINT\":\r\n\t\t\t\t\tif (isAscii) {\r\n\t\t\t\t\t\tsetInt32BESwap(theItem.writeBuffer, thePointer, theItem.writeValue[arrayIndex]);\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttheItem.writeBuffer.writeInt32LE(theItem.writeValue[arrayIndex], thePointer);\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"INT\":\r\n\t\t\t\t\tif (isAscii) {\r\n\t\t\t\t\t\ttheItem.writeBuffer.writeInt16BE(theItem.writeValue[arrayIndex], thePointer);\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttheItem.writeBuffer.writeInt16LE(theItem.writeValue[arrayIndex], thePointer);\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"WORD\":\r\n\t\t\t\t\tif (isAscii) {\r\n\t\t\t\t\t\ttheItem.writeBuffer.writeUInt16BE(theItem.writeValue[arrayIndex], thePointer);\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttheItem.writeBuffer.writeUInt16LE(theItem.writeValue[arrayIndex], thePointer);\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"X\":\r\n\t\t\t\t\tif (arrayIndex % 2) {\r\n\t\t\t\t\t\ttheByte = theByte | ((theItem.writeValue[arrayIndex] === true) ? 1 : 0);\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttheByte = theByte | (((theItem.writeValue[arrayIndex] === true) ? 1 : 0) << 4);\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Maybe not so efficient to do this every time when we only need to do it every 8.  Need to be careful with optimizations here for odd requests.  \r\n\t\t\t\t\ttheItem.writeBuffer.writeUInt8(theByte, thePointer);\r\n\t\t\t\t\ttheItem.writeBuffer.writeUInt8(0, thePointer+1);  // Zero out the pad byte\r\n\t\t\t\t\t//bitShiftAmount++;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"B\":\r\n\t\t\t\tcase \"BYTE\":\r\n\t\t\t\t\tif (isAscii) {\r\n\t\t\t\t\t\tif (arrayIndex % 2) {\r\n\t\t\t\t\t\t\ttheItem.writeBuffer.writeUInt8(theItem.writeValue[arrayIndex], thePointer - 1);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ttheItem.writeBuffer.writeUInt8(theItem.writeValue[arrayIndex], thePointer + 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttheItem.writeBuffer.writeUInt8(Math.round(theItem.writeValue[arrayIndex]), thePointer);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"C\":\r\n\t\t\t\tcase \"CHAR\":\r\n\t\t\t\t\t// Convert to string.  \r\n\t\t\t\t\tif (isAscii) {\r\n\t\t\t\t\t\tif (arrayIndex % 2) {\r\n\t\t\t\t\t\t\ttheItem.writeBuffer.writeUInt8(theItem.writeValue.charCodeAt(arrayIndex), thePointer - 1);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ttheItem.writeBuffer.writeUInt8(theItem.writeValue.charCodeAt(arrayIndex), thePointer + 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttheItem.writeBuffer.writeUInt8(theItem.writeValue.charCodeAt(arrayIndex), thePointer);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\toutputLog(\"Unknown data type when preparing array write packet - should never happen.  Should have been caught earlier.  \" + theItem.datatype);\r\n\t\t\t\t\treturn 0;\t\t\r\n\t\t\t}\r\n\t\t\tif (theItem.datatype == 'X' ) {\r\n\t\t\t\t// Increment the pointer \"sometimes\" - only when we cross byte boundaries, then set to zero as we \"AND\" things together to build the byte.\r\n\t\t\t\tif (arrayIndex % 2) {\r\n\t\t\t\t\tthePointer += 1;\r\n\t\t\t\t\ttheByte = 0;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Add to the pointer every time.  \r\n\t\t\t\tthePointer += theItem.dtypelen;\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\t// Single value. \r\n\t\tswitch(theItem.datatype) {\r\n\r\n\t\t\tcase \"REAL\":\r\n\t\t\t\tif (isAscii) {\r\n\t\t\t\t\tsetFloatBESwap(theItem.writeBuffer, thePointer, theItem.writeValue);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttheItem.writeBuffer.writeFloatLE(theItem.writeValue, thePointer);\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"DWORD\":\r\n\t\t\t\tif (isAscii) {\r\n\t\t\t\t\tsetUInt32BESwap(theItem.writeBuffer, thePointer, theItem.writeValue);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttheItem.writeBuffer.writeUInt32LE(theItem.writeValue, thePointer);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"DINT\":\r\n\t\t\t\tif (isAscii) {\r\n\t\t\t\t\tsetInt32BESwap(theItem.writeBuffer, thePointer, theItem.writeValue);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttheItem.writeBuffer.writeInt32LE(theItem.writeValue, thePointer);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"INT\":\r\n\t\t\t\tif (isAscii) {\r\n\t\t\t\t\ttheItem.writeBuffer.writeInt16BE(theItem.writeValue, thePointer);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttheItem.writeBuffer.writeInt16LE(theItem.writeValue, thePointer);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"WORD\":\r\n\t\t\t\tif (isAscii) {\r\n\t\t\t\t\ttheItem.writeBuffer.writeUInt16BE(theItem.writeValue, thePointer);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttheItem.writeBuffer.writeUInt16LE(theItem.writeValue, thePointer);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"X\":\r\n\t\t\t\tif (theItem.bitNative) {\r\n\t\t\t\t\ttheItem.writeBuffer.writeUInt8(((theItem.writeValue) ? 0x10 : 0x00), thePointer);  // checked ===true but this caused problems if you write 1\r\n\t\t\t\t\ttheItem.writeBuffer.writeUInt8(0x00, thePointer+1);  \r\n\t\t\t\t\toutputLog(\"Datatype is X writing \" + theItem.writeValue + \" tpi \" + theItem.writeBuffer[0],1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\toutputLog(\"We don't support writing individual bits of non-native types - write the whole word externally please\",0);\r\n\t\t\t\t}\r\n// not here\t\t\t\ttheItem.writeBuffer[1] = 1; // Set transport code to \"BIT\" to write a single bit. \r\n// not here\t\t\t\ttheItem.writeBuffer.writeUInt16BE(1, 2); // Write only one bit.  \t\t\t\t\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"B\":\r\n\t\t\tcase \"BYTE\":\r\n\t\t\t\t// No support as of yet for signed 8 bit.  This isn't that common.  \r\n\t\t\t\tif (isAscii) {\r\n\t\t\t\t\ttheItem.writeBuffer.writeUInt8(Math.round(theItem.writeValue), thePointer + 1);\r\n\t\t\t\t\ttheItem.writeBuffer.writeUInt8(0, thePointer);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttheItem.writeBuffer.writeUInt8(Math.round(theItem.writeValue), thePointer);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"C\":\r\n\t\t\tcase \"CHAR\":\r\n\t\t\t\t// No support as of yet for signed 8 bit.  This isn't that common.  \r\n\t\t\t\tif (isAscii) {\r\n\t\t\t\t\ttheItem.writeBuffer.writeUInt8(String.toCharCode(theItem.writeValue), thePointer + 1);\r\n\t\t\t\t\ttheItem.writeBuffer.writeUInt8(0, thePointer);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttheItem.writeBuffer.writeUInt8(String.toCharCode(theItem.writeValue), thePointer);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\t\r\n\t\t\tdefault:\r\n\t\t\t\toutputLog(\"Unknown data type in write prepare - should never happen.  Should have been caught earlier.  \" + theItem.datatype);\r\n\t\t\t\treturn 0;\t\t\r\n\t\t}\r\n\t\tthePointer += theItem.dtypelen; \t\r\n\t}\t\r\n\treturn undefined; \r\n}\r\n\r\nfunction isQualityOK(obj) {\r\n\tif (typeof obj === \"string\") { \r\n\t\tif (obj !== 'OK') { return false; } \r\n\t} else if (_.isArray(obj)) {\r\n\t\tfor (i = 0; i < obj.length; i++) {\r\n\t\t\tif (typeof obj[i] !== \"string\" || obj[i] !== 'OK') { return false; }\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction MCAddrToBuffer(addrinfo, isWriting, isAscii) { \r\n\tvar headerLength, writeLength, MCCommand = new Buffer(300);  // 12 is max length with all fields at max.  \r\n\t\r\n\theaderLength = 4;\r\n\t\r\n\t// Hard code the header.  Note that for bit devices, we use the less-efficient, but easier to program, bit device read.\r\n\tif (addrinfo.bitNative) {\r\n\t\tif (isWriting) {\t\t\r\n\t\t\tMCCommand[0] = 0x02;\r\n\t\t} else {\r\n\t\t\tMCCommand[0] = 0x01; // For now we read words.\r\n\t\t}\r\n\t} else {\r\n\t\tif (isWriting) {\t\t\r\n\t\t\tMCCommand[0] = 0x03;\r\n\t\t} else {\r\n\t\t\tMCCommand[0] = 0x01;\r\n\t\t}\t\r\n\t}\r\n\r\n\tMCCommand[1] = 0xff;\r\n\t\r\n\tif (isAscii) {\r\n\t\toutputLog(\"We're Ascii\",2);\r\n\t\tMCCommand.writeUInt16BE(monitoringTime, 2);\r\n\t} else {\r\n\t\toutputLog(\"We're Binary\",2);\r\n\t\tMCCommand.writeUInt16LE(monitoringTime, 2);\t\r\n\t}\r\n\t\r\n\twriteLength = isWriting ? (addrinfo.byteLengthWrite) : 0; // Shouldn't ever be zero\r\n\t\r\n\t// Write the data type code\r\n\tif (isAscii) {\r\n\t\tMCCommand.writeUInt16BE(addrinfo.areaMCCode, 4);\r\n\t} else {\r\n\t\tMCCommand.writeUInt16LE(addrinfo.areaMCCode, 8);\t\r\n\t}\r\n\r\n\t// Write the data request offset\r\n\tif (isAscii) {\r\n\t\tif (isWriting) {\r\n\t\t\tMCCommand.writeUInt32BE(addrinfo.offset, 6);\r\n\t\t} else {\r\n\t\t\tMCCommand.writeUInt32BE(addrinfo.requestOffset, 6);\r\n\t\t}\t\r\n\t} else {\r\n\t\tif (isWriting) {\r\n\t\t\tMCCommand.writeUInt32LE(addrinfo.offset, 4);\r\n\t\t} else {\r\n\t\t\t// RequestOffset ensures bit-native types are read as a word\r\n\t\t\tMCCommand.writeUInt32LE(addrinfo.requestOffset, 4);\r\n\t\t}\t\r\n\t}\r\n\t\r\n\t// Number of elements in request - for single-bit, 16-bit, 32-bit, this is always the number of WORDS\r\n\tif (addrinfo.bitNative && isWriting) {\r\n\t\t// set to bit length\r\n\t\tMCCommand.writeUInt8(addrinfo.arrayLength, 10);\r\n\t} else if (addrinfo.bitNative && !isWriting) {\r\n\t\tMCCommand.writeUInt8(Math.ceil((addrinfo.arrayLength + addrinfo.remainder)/16), 10);\r\n\t} else {\r\n// doesn't work with optimized blocks where array length isn't right\t\tMCCommand.writeUInt8(addrinfo.arrayLength*addrinfo.dataTypeByteLength()/2, 10);\r\n\t\tif (isWriting) {\r\n\t\t\tMCCommand.writeUInt8(addrinfo.byteLengthWrite/2, 10);\r\n\t\t} else {\r\n\t\t\tMCCommand.writeUInt8(addrinfo.byteLength/2, 10);\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\t// Spec says to write 0 here\r\n\tMCCommand.writeUInt8(0, 11);\r\n\t\r\n\tif (isWriting) {\r\n\t\taddrinfo.writeBuffer.copy(MCCommand,12,0,writeLength);\r\n\t}\r\n\t\r\n\treturn MCCommand.slice(0,12+writeLength); // WriteLength is the length we write.  writeLength - 1 is the data length.  \r\n}\r\n\r\nfunction stringToMCAddr(addr, useraddr, octalInputOutput) {\r\n\t\"use strict\";\r\n\tvar theItem, splitString, splitString2, prefix, postDotAlpha, postDotNumeric, forceBitDtype, preOctalOffset;\r\n\ttheItem = new PLCItem();\r\n\r\n\tif (useraddr === '_COMMERR') { return undefined; } // Special-case for communication error status - this variable returns true when there is a communications error\r\n\r\n\tsplitString2 = addr.split(',');  \r\n\tif (splitString2.length == 2) {\r\n\t\ttheItem.arrayLength = parseInt(splitString2[1].replace(/[A-z]/gi, ''), 10);\r\n\t} else {\r\n\t\ttheItem.arrayLength = 1;\r\n\t}\r\n\r\n\tsplitString2[0] = splitString2[0].replace(\"/\",\".\");\r\n\tvar splitdot = splitString2[0].split('.');\r\n\tif (splitdot.length > 2) {\r\n\t\toutputLog(\"Error - String Couldn't Split Properly.  Only one dot or slash.\");\r\n\t\treturn undefined;\r\n\t}\r\n\tif (splitdot.length == 2)\r\n\t{\r\n\t\tpostDotNumeric = parseInt(splitdot[1].replace(/[A-z]/gi, ''), 10);\r\n\t\toutputLog('PostDotNumeric is ' + postDotNumeric,2);\r\n\t\tsplitString2[0] = splitdot[0];\r\n\t}\r\n\r\n\ttheItem.offset = parseInt(splitString2[0].replace(/[A-z]/gi, ''), 10);\r\n\r\n\t// Get the data type from the second part.  \r\n\tprefix = splitString2[0].replace(/[0-9]/gi, '');\r\n\r\n\t// Octal switch\r\n\tif ((prefix === \"X\" || prefix === \"Y\") && octalInputOutput) {\r\n\t\tpreOctalOffset = theItem.offset;\r\n\t\ttheItem.offset = parseInt(theItem.offset.toString(),8);\r\n\t\tif (isNaN(theItem.offset)) {\r\n\t\t\ttheItem.offset = preOctalOffset;\r\n\t\t}\r\n\t}\r\n\r\n\tswitch (prefix) {\r\n\tcase \"DFLOAT\":\r\n\t\t// These are the double-byte types\r\n\t\ttheItem.addrtype = \"D\";\r\n\t\ttheItem.datatype = \"REAL\";\r\n\t\ttheItem.multidtypelen = 4;\r\n\t\ttheItem.remainder = 0;\r\n\t\ttheItem.requestOffset = theItem.offset;\r\n\t\ttheItem.dtypelen = 4;\r\n\t\tbreak;\t\r\n\tcase \"DDINT\":\r\n\t\t// These are the double-byte types\r\n\t\ttheItem.addrtype = \"D\";\r\n\t\ttheItem.datatype = \"DINT\";\r\n\t\ttheItem.multidtypelen = 4;\r\n\t\ttheItem.remainder = 0;\r\n\t\ttheItem.requestOffset = theItem.offset;\r\n\t\ttheItem.dtypelen = 4;\r\n\t\tbreak;\r\n\tcase \"RFLOAT\":\r\n\t\t// These are the double-byte types\r\n\t\ttheItem.addrtype = \"R\";\r\n\t\ttheItem.datatype = \"REAL\";\r\n\t\ttheItem.multidtypelen = 4;\r\n\t\ttheItem.remainder = 0;\r\n\t\ttheItem.requestOffset = theItem.offset;\r\n\t\ttheItem.dtypelen = 4;\r\n\t\tbreak;\t\r\n\tcase \"RDINT\":\r\n\t\t// These are the double-byte types\r\n\t\ttheItem.addrtype = \"R\";\r\n\t\ttheItem.datatype = \"DINT\";\r\n\t\ttheItem.multidtypelen = 4;\r\n\t\ttheItem.remainder = 0;\r\n\t\ttheItem.requestOffset = theItem.offset;\r\n\t\ttheItem.dtypelen = 4;\r\n\t\tbreak;\t\t\r\n\tcase \"DSTR\":\r\n\t\t// These are the double-byte types\r\n\t\ttheItem.addrtype = \"D\";\r\n\t\ttheItem.datatype = \"CHAR\";\r\n\t\ttheItem.multidtypelen = 1;\r\n\t\ttheItem.remainder = 0;\r\n\t\ttheItem.requestOffset = theItem.offset;\r\n\t\ttheItem.dtypelen = 1;\r\n\t\tbreak;\r\n\tcase \"RSTR\":\r\n\t\t// These are the double-byte types\r\n\t\ttheItem.addrtype = \"R\";\r\n\t\ttheItem.datatype = \"CHAR\";\r\n\t\ttheItem.multidtypelen = 1;\r\n\t\ttheItem.remainder = 0;\r\n\t\ttheItem.requestOffset = theItem.offset;\r\n\t\ttheItem.dtypelen = 1;\t\r\n\t\tbreak;\t\t\r\n\tbreak;\r\n\tcase \"TN\": // Current time value\r\n\tcase \"CN\": // Current count value\r\n\tcase \"D\":\r\n\tcase \"R\":\r\n\t\t// These are the double-byte types\r\n\t\ttheItem.addrtype = prefix;\r\n\t\tif (typeof(postDotNumeric) !== 'undefined') {\r\n\t\t\ttheItem.datatype = 'X';\r\n\t\t\ttheItem.bitOffset = postDotNumeric;\r\n\t\t} else {\t\t\t\t\r\n\t\t\ttheItem.datatype = \"INT\";\r\n\t\t}\r\n\t\tif (theItem.addrtype === \"CN\" && theItem.offset >= 200) {\r\n\t\t\ttheItem.dtypelen = 4;\r\n\t\t\ttheItem.multidtypelen = 4;\t\t\r\n\t\t\ttheItem.datatype = \"DINT\";\t\t\t\r\n\t\t} else {\r\n\t\t\ttheItem.dtypelen = 2;\r\n\t\t\ttheItem.multidtypelen = 2;\r\n\t\t}\r\n\t\ttheItem.remainder = 0;\r\n\t\ttheItem.requestOffset = theItem.offset;\r\n\t\tbreak;\r\n\tcase \"TS\":  // Timer Status (contact)\r\n\tcase \"CS\":\t// Counter Status (contact)\r\n\t\ttheItem.addrtype = prefix;\r\n\t\ttheItem.datatype = \"X\";\r\n\t\ttheItem.multidtypelen = 2;\r\n\t\ttheItem.remainder = theItem.offset % 16;\r\n\t\ttheItem.requestOffset = theItem.offset - theItem.remainder;\r\n\t\ttheItem.dtypelen = 2;\r\n\t\tbreak;\r\n\tcase \"X\":\r\n\tcase \"Y\":\r\n\tcase \"M\":\r\n\tcase \"S\":\r\n\t\ttheItem.addrtype = prefix;\r\n\t\ttheItem.datatype = \"X\";\r\n\t\ttheItem.multidtypelen = 2;\r\n\t\ttheItem.remainder = theItem.offset % 16;\r\n\t\ttheItem.requestOffset = theItem.offset - theItem.remainder;\r\n\t\ttheItem.dtypelen = 2;  // was 1, not sure why, we read 1 word at a time\r\n\t\tbreak;\r\n\tdefault:\r\n\t\toutputLog('Failed to find a match for ' + splitString2[0] + ' possibly because ' + prefix + ' type is not supported yet.');\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t// bitNative indicates if we have a bit data type within the PLC.\r\n\tif (theItem.addrtype === \"D\" || theItem.addrtype === \"R\" || theItem.addrtype === \"TN\" || theItem.addrtype === \"CN\") {\r\n\t\ttheItem.bitNative = false;\r\n\t} else {\r\n\t\ttheItem.bitNative = true;\r\n\t}\r\n\t\r\n\tswitch (theItem.addrtype) {\r\n\tcase \"D\":\t// Data\r\n\t\ttheItem.areaMCCode = 0x4420;\r\n//\t\ttheItem.maxWordLen = 64;\r\n\t\tbreak;\r\n\tcase \"R\":\t// Extension\r\n\t\ttheItem.areaMCCode = 0x5220;\r\n//\t\ttheItem.maxWordLen = 64;\r\n\t\tbreak;\r\n\tcase \"TN\":\t// Timer current value\r\n\t\ttheItem.areaMCCode = 0x544e;\r\n//\t\ttheItem.maxWordLen = 64;\r\n\t\tbreak;\r\n\tcase \"TS\":\t// Timer contact\r\n\t\ttheItem.areaMCCode = 0x5453;\r\n//\t\ttheItem.maxWordLen = 64;\r\n\t\tbreak;\t\t\r\n\tcase \"CN\":\t// Counter current value\r\n\t\ttheItem.areaMCCode = 0x434e;\r\n//\t\ttheItem.maxWordLen = (depends on whether it's 32-bit (>200) or not, see FX3U-ENET-ADP manual)\r\n\t\tbreak;\r\n\tcase \"CS\":\t// Counter contact\r\n\t\ttheItem.areaMCCode = 0x4353;\r\n\t\tbreak;\t\r\n\tcase \"X\":\t// Input\r\n\t\ttheItem.areaMCCode = 0x5820;\r\n\t\tbreak;\t\r\n\tcase \"Y\":\t// Output\r\n\t\ttheItem.areaMCCode = 0x5920; \r\n\t\tbreak;\t\r\n\tcase \"M\":\t// Auxiliary Relay\r\n\t\ttheItem.areaMCCode = 0x4d20;\r\n\t\tbreak;\t\r\n\tcase \"S\":\t// State\r\n\t\ttheItem.areaMCCode = 0x5320;\r\n\t\tbreak;\t\r\n\tdefault:\r\n\t\toutputLog('Failed to find a match for ' + theItem.addrtype + ' possibly because that type is not supported yet.');\r\n\t\treturn undefined;\r\n\t}\r\n\t\r\n\tif (forceBitDtype) {\r\n\t\ttheItem.datatype = \"X\";\r\n\t}\r\n\t\r\n\t// Save the address from the argument for later use and reference\r\n\ttheItem.addr = addr;\r\n\tif (useraddr === undefined) {\r\n\t\ttheItem.useraddr = addr;\r\n\t} else {\r\n\t\ttheItem.useraddr = useraddr;\t\r\n\t}\r\n\r\n\tif (theItem.datatype === 'X') {\r\n\t\ttheItem.wordLength = Math.ceil((theItem.remainder + theItem.arrayLength) / 16);  // used tadd request offset here but not right\r\n//\t\tif (theItem.byteLength % 2) { theItem.byteLength += 1; }  // Always even for AB\r\n\t} else {\r\n\t\ttheItem.wordLength = theItem.arrayLength * theItem.dataTypeByteLength()/2;\r\n\t}\r\n\r\n\ttheItem.byteLength = theItem.wordLength*2;\r\n\t\r\n\ttheItem.byteLengthWrite = (theItem.bitNative) ? Math.ceil(theItem.arrayLength/2) : theItem.byteLength;\r\n\r\n\ttheItem.totalArrayLength = theItem.arrayLength;\r\n\r\n\t// Counter check - can't think of a better way to handle this.\r\n\tif (theItem.addrtype === \"CN\" && theItem.requestOffset < 200 && (theItem.requestOffset + theItem.arrayLength > 200)) {\r\n\t\toutputLog(\"IMPORTANT NOTE: You can't have a counter array that crosses the 200-point boundary.\");\r\n\t\treturn undefined;\r\n\t}\r\n\t\r\n\treturn theItem;\r\n}\r\n\r\nfunction outputError(txt) {\r\n\tutil.error(txt);\r\n}\r\n\r\nfunction decimalToHexString(number)\r\n{\r\n    if (number < 0)\r\n    {\r\n    \tnumber = 0xFFFFFFFF + number + 1;\r\n    }\r\n\r\n    return \"0x\" + number.toString(16).toUpperCase();\r\n}\r\n\r\nfunction PLCPacket() {\r\n\tthis.seqNum = undefined;\t\t\t\t// Made-up sequence number to watch for.  \r\n\tthis.itemList = undefined;  \t\t\t// This will be assigned the object that details what was in the request.  \r\n\tthis.reqTime = undefined;\r\n\tthis.sent = false;\t\t\t\t\t\t// Have we sent the packet yet?\r\n\tthis.rcvd = false;\t\t\t\t\t\t// Are we waiting on a reply?\r\n\tthis.timeoutError = undefined;\t\t\t// The packet is marked with error on timeout so we don't then later switch to good data. \r\n\tthis.timeout = undefined;\t\t\t\t// The timeout for use with clearTimeout()\r\n}\r\n\r\nfunction PLCItem() { // Object\r\n\t// MC only\r\n\tthis.areaMCCode = undefined;\r\n\tthis.bitNative = undefined;\r\n\tthis.startRegister = undefined;\r\n\tthis.byteLengthWrite = undefined;\r\n\t\r\n\t// Save the original address\r\n\tthis.addr = undefined;\r\n\tthis.useraddr = undefined;\r\n\r\n\t// First group is properties to do with PLC item - these alone define the address.\r\n\tthis.addrtype = undefined;\r\n\tthis.datatype = undefined;\r\n\tthis.bitOffset = undefined;\r\n\tthis.byteOffset = undefined;\r\n\tthis.offset = undefined;\t\r\n\tthis.arrayLength = undefined;\r\n\tthis.totalArrayLength = undefined; \r\n\r\n\tthis.maxWordLength = function(isWriting) {\r\n\t\tif (typeof(this.addrtype) === 'undefined') {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\tswitch (this.addrtype) {\r\n\t\tcase \"D\":\t// Data\r\n\t\tcase \"R\":\t// Extension\r\n\t\tcase \"TN\":\t// Timer current value\r\n\t\t\treturn 64;\r\n\t\tcase \"CN\":\t// Counter current value\r\n\t\t\tif ((typeof(this.offset) === 'undefined') || (this.offset < 0)) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\tif (this.offset >= 200) {\r\n\t\t\t\treturn 32;\t\t// Counters are 32 bit so take two words each\r\n\t\t\t}\r\n\t\t\treturn Math.max(199 - this.offset, 64);  // Can't cross the 199-200 boundary for counters\r\n\t\tcase \"TS\":\t// Timer contact\r\n\t\tcase \"CS\":\t// Counter contact\r\n\t\tcase \"X\":\t// Input\r\n\t\tcase \"Y\":\t// Output\r\n\t\tcase \"M\":\t// Auxiliary Relay\r\n\t\tcase \"S\":\t// State\r\n\t\t\treturn (isWriting) ? 40 : 16; // 160 points max when writing, 4 points per word = 40 words.  Otherwise 256 points max which is 16 words.\r\n\t\tdefault:\r\n\t\t\toutputLog('Failed to find a match for ' + theItem.addrtype + ' possibly because that type is not supported yet.');\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n\r\n\tthis.dataTypeByteLength = function() {\r\n\t\tif (typeof(this.addrtype) === 'undefined') {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\tswitch (this.addrtype) {\r\n\t\tcase \"D\":\t// Data\r\n\t\tcase \"R\":\t// Extension\r\n\t\t\tif (this.datatype === \"REAL\" || this.datatype === \"DINT\" || this.datatype === \"DWORD\") {\r\n\t\t\t\treturn 4;\r\n\t\t\t} else if (this.datatype === \"CHAR\") {\r\n\t\t\t\treturn 1;\r\n\t\t\t} else {\r\n\t\t\t\treturn 2;\r\n\t\t\t}\r\n\t\tcase \"TN\":\t// Timer current value\r\n\t\t\treturn 2;\r\n\t\tcase \"CN\":\t// Counter current value\r\n\t\t\tif ((typeof(this.offset) === 'undefined') || (this.offset < 0)) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\tif (this.offset >= 200) {\r\n\t\t\t\treturn 4;\t\t// Counters are 32 bit so take two words each\r\n\t\t\t}\r\n\t\t\treturn 2;  // Can't cross the 199-200 boundary for counters\r\n\t\tcase \"TS\":\t// Timer contact\r\n\t\tcase \"CS\":\t// Counter contact\r\n\t\tcase \"X\":\t// Input\r\n\t\tcase \"Y\":\t// Output\r\n\t\tcase \"M\":\t// Auxiliary Relay\r\n\t\tcase \"S\":\t// State\r\n\t\t\treturn 1; \r\n\t\tdefault:\r\n\t\t\toutputLog('Failed to find a match for ' + theItem.addrtype + ' possibly because that type is not supported yet.');\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n\t// These next properties can be calculated from the above properties, and may be converted to functions.\r\n\tthis.dtypelen = undefined;\r\n\tthis.multidtypelen = undefined; // multi-datatype length.  Different than dtypelen when requesting a timer preset, for example, which has width two but dtypelen of 2.\r\n\tthis.areaMCCode = undefined;\r\n\tthis.byteLength = undefined;\r\n\tthis.byteLengthWithFill = undefined;\r\n\t\r\n\t// Note that read transport codes and write transport codes will be the same except for bits which are read as bytes but written as bits\r\n\tthis.readTransportCode = undefined;\r\n\tthis.writeTransportCode = undefined;\r\n\r\n\t// This is where the data can go that arrives in the packet, before calculating the value.  \r\n\tthis.byteBuffer = new Buffer(8192);\r\n\tthis.writeBuffer = new Buffer(8192);\r\n\t\r\n\t// We use the \"quality buffer\" to keep track of whether or not the requests were successful.  \r\n\t// Otherwise, it is too easy to lose track of arrays that may only be partially complete.  \r\n\tthis.qualityBuffer = new Buffer(8192);\r\n\tthis.writeQualityBuffer = new Buffer(8192);\r\n\t\r\n\t// Then we have item properties\r\n\tthis.value = undefined;\r\n\tthis.writeValue = undefined;\r\n\tthis.valid = false;\r\n\tthis.errCode = undefined;\r\n\t\r\n\t// Then we have result properties\r\n\tthis.part = undefined;\r\n\tthis.maxPart = undefined;\r\n\t\r\n\t// Block properties\r\n\tthis.isOptimized = false;\r\n\tthis.resultReference = undefined;\r\n\tthis.itemReference = undefined;\r\n\t\r\n\t// And functions...\r\n\tthis.clone = function() {\r\n\t\tvar newObj = new PLCItem();\r\n\t\tfor (var i in this) {\r\n\t\t\tif (i == 'clone') continue;\r\n\t\t\tnewObj[i] = this[i];\r\n\t\t} return newObj;\r\n\t};\r\n\r\n\t\r\n\t// Bad value function definition\r\n\tthis.badValue = function() {\r\n\t\tswitch (this.datatype){\r\n\t\tcase \"REAL\":\r\n\t\t\treturn 0.0;\r\n\t\tcase \"DWORD\":\r\n\t\tcase \"DINT\":\r\n\t\tcase \"INT\":\r\n\t\tcase \"WORD\":\r\n\t\tcase \"B\":\r\n\t\tcase \"BYTE\":\r\n\t\t\treturn 0;\r\n\t\tcase \"X\":\r\n\t\t\treturn false;\r\n\t\tcase \"C\":\r\n\t\tcase \"CHAR\":\r\n\t\t\t// Convert to string.  \r\n\t\t\treturn \"\";\r\n\t\tdefault:\r\n\t\t\toutputLog(\"Unknown data type when figuring out bad value - should never happen.  Should have been caught earlier.  \" + this.datatype);\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction itemListSorter(a, b) {\r\n\t// Feel free to manipulate these next two lines...\r\n\tif (a.areaMCCode < b.areaMCCode) { return -1; }\r\n\tif (a.areaMCCode > b.areaMCCode) { return 1; }\r\n\t\r\n\t// But for byte offset we need to start at 0.  \r\n\tif (a.offset < b.offset) { return -1; }\r\n\tif (a.offset > b.offset) { return 1; }\r\n\t\r\n\t// Then bit offset\r\n\tif (a.bitOffset < b.bitOffset) { return -1; }\r\n\tif (a.bitOffset > b.bitOffset) { return 1; }\r\n\r\n\t// Then item length - most first.  This way smaller items are optimized into bigger ones if they have the same starting value.\r\n\tif (a.byteLength > b.byteLength) { return -1; }\r\n\tif (a.byteLength < b.byteLength) { return 1; }\r\n}\r\n\r\nfunction doNothing(arg) {\r\n\treturn arg;\r\n}\r\n\r\nfunction getFloatBESwap(buf, ptr) {\r\n\tvar newBuf = new Buffer(4);\r\n\tnewBuf[0] = buf[ptr+2];\r\n\tnewBuf[1] = buf[ptr+3];\r\n\tnewBuf[2] = buf[ptr+0];\r\n\tnewBuf[3] = buf[ptr+1];\r\n\treturn newBuf.readFloatBE(0);\r\n}\r\n\r\nfunction setFloatBESwap(buf, ptr, val) {\r\n\tvar newBuf = new Buffer(4);\r\n\tnewBuf.writeFloatBE(val, 0);\r\n\tbuf[ptr+2] = newBuf[0];\r\n\tbuf[ptr+3] = newBuf[1];\r\n\tbuf[ptr+0] = newBuf[2];\r\n\tbuf[ptr+1] = newBuf[3];\r\n\treturn;\r\n}\r\n\r\nfunction getInt32BESwap(buf, ptr) {\r\n\tvar newBuf = new Buffer(4);\r\n\tnewBuf[0] = buf[ptr+2];\r\n\tnewBuf[1] = buf[ptr+3];\r\n\tnewBuf[2] = buf[ptr+0];\r\n\tnewBuf[3] = buf[ptr+1];\r\n\treturn newBuf.readInt32BE(0);\r\n}\r\n\r\nfunction setInt32BESwap(buf, ptr, val) {\r\n\tvar newBuf = new Buffer(4);\r\n\tnewBuf.writeInt32BE(Math.round(val), 0);\r\n\tbuf[ptr+2] = newBuf[0];\r\n\tbuf[ptr+3] = newBuf[1];\r\n\tbuf[ptr+0] = newBuf[2];\r\n\tbuf[ptr+1] = newBuf[3];\r\n\treturn;\r\n}\r\n\r\nfunction getUInt32BESwap(buf, ptr) {\r\n\tvar newBuf = new Buffer(4);\r\n\tnewBuf[0] = buf[ptr+2];\r\n\tnewBuf[1] = buf[ptr+3];\r\n\tnewBuf[2] = buf[ptr+0];\r\n\tnewBuf[3] = buf[ptr+1];\r\n\treturn newBuf.readUInt32BE(0);\r\n}\r\n\r\nfunction setUInt32BESwap(buf, ptr, val) {\r\n\tvar newBuf = new Buffer(4);\r\n\tnewBuf.writeUInt32BE(Math.round(val), 0);\r\n\tbuf[ptr+2] = newBuf[0];\r\n\tbuf[ptr+3] = newBuf[1];\r\n\tbuf[ptr+0] = newBuf[2];\r\n\tbuf[ptr+1] = newBuf[3];\r\n\treturn;\r\n}\r\n\r\nfunction binarize(buf) {\r\n\tvar i, newBuf;\r\n\tif (buf && !(buf.length % 2)) {\r\n\t\tnewBuf = new Buffer(buf.length / 2);\r\n\t\tfor (i=0;i<buf.length;i+=2) {\r\n\t\t\tnewBuf[i/2] = parseInt(\"0x\" + buf.toString('ascii',i,i+2));\r\n\t\t\tif (isNaN(newBuf[i/2])) { \r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn newBuf;\r\n\t}\r\n\treturn undefined;\r\n}\r\n\r\nfunction asciize(buf) {\r\n\tvar i, newBuf;\r\n\tif (buf) {\r\n\t\tnewBuf = new Buffer(buf.length * 2);\r\n\t\tfor (i=0;i<buf.length;i+=1) {\r\n\t\t\tnewBuf.write(zeroPad(buf[i],2), i*2, 2, 'ascii');\r\n\t\t}\r\n\t\treturn newBuf;\r\n\t}\r\n\treturn undefined;\r\n}\r\n\r\nfunction zeroPad(num, places) {\r\n  var zero = places - num.toString(16).length + 1;\r\n  return Array(+(zero > 0 && zero)).join(\"0\") + num.toString(16);\r\n}\r\n","//     Underscore.js 1.4.4\n//     http://underscorejs.org\n//     (c) 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `global` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Establish the object that gets returned to break out of a loop iteration.\n  var breaker = {};\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var push             = ArrayProto.push,\n      slice            = ArrayProto.slice,\n      concat           = ArrayProto.concat,\n      toString         = ObjProto.toString,\n      hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeForEach      = ArrayProto.forEach,\n    nativeMap          = ArrayProto.map,\n    nativeReduce       = ArrayProto.reduce,\n    nativeReduceRight  = ArrayProto.reduceRight,\n    nativeFilter       = ArrayProto.filter,\n    nativeEvery        = ArrayProto.every,\n    nativeSome         = ArrayProto.some,\n    nativeIndexOf      = ArrayProto.indexOf,\n    nativeLastIndexOf  = ArrayProto.lastIndexOf,\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind;\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object via a string identifier,\n  // for Closure Compiler \"advanced\" mode.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.4.4';\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles objects with the built-in `forEach`, arrays, and raw objects.\n  // Delegates to **ECMAScript 5**'s native `forEach` if available.\n  var each = _.each = _.forEach = function(obj, iterator, context) {\n    if (obj == null) return;\n    if (nativeForEach && obj.forEach === nativeForEach) {\n      obj.forEach(iterator, context);\n    } else if (obj.length === +obj.length) {\n      for (var i = 0, l = obj.length; i < l; i++) {\n        if (iterator.call(context, obj[i], i, obj) === breaker) return;\n      }\n    } else {\n      for (var key in obj) {\n        if (_.has(obj, key)) {\n          if (iterator.call(context, obj[key], key, obj) === breaker) return;\n        }\n      }\n    }\n  };\n\n  // Return the results of applying the iterator to each element.\n  // Delegates to **ECMAScript 5**'s native `map` if available.\n  _.map = _.collect = function(obj, iterator, context) {\n    var results = [];\n    if (obj == null) return results;\n    if (nativeMap && obj.map === nativeMap) return obj.map(iterator, context);\n    each(obj, function(value, index, list) {\n      results[results.length] = iterator.call(context, value, index, list);\n    });\n    return results;\n  };\n\n  var reduceError = 'Reduce of empty array with no initial value';\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`. Delegates to **ECMAScript 5**'s native `reduce` if available.\n  _.reduce = _.foldl = _.inject = function(obj, iterator, memo, context) {\n    var initial = arguments.length > 2;\n    if (obj == null) obj = [];\n    if (nativeReduce && obj.reduce === nativeReduce) {\n      if (context) iterator = _.bind(iterator, context);\n      return initial ? obj.reduce(iterator, memo) : obj.reduce(iterator);\n    }\n    each(obj, function(value, index, list) {\n      if (!initial) {\n        memo = value;\n        initial = true;\n      } else {\n        memo = iterator.call(context, memo, value, index, list);\n      }\n    });\n    if (!initial) throw new TypeError(reduceError);\n    return memo;\n  };\n\n  // The right-associative version of reduce, also known as `foldr`.\n  // Delegates to **ECMAScript 5**'s native `reduceRight` if available.\n  _.reduceRight = _.foldr = function(obj, iterator, memo, context) {\n    var initial = arguments.length > 2;\n    if (obj == null) obj = [];\n    if (nativeReduceRight && obj.reduceRight === nativeReduceRight) {\n      if (context) iterator = _.bind(iterator, context);\n      return initial ? obj.reduceRight(iterator, memo) : obj.reduceRight(iterator);\n    }\n    var length = obj.length;\n    if (length !== +length) {\n      var keys = _.keys(obj);\n      length = keys.length;\n    }\n    each(obj, function(value, index, list) {\n      index = keys ? keys[--length] : --length;\n      if (!initial) {\n        memo = obj[index];\n        initial = true;\n      } else {\n        memo = iterator.call(context, memo, obj[index], index, list);\n      }\n    });\n    if (!initial) throw new TypeError(reduceError);\n    return memo;\n  };\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, iterator, context) {\n    var result;\n    any(obj, function(value, index, list) {\n      if (iterator.call(context, value, index, list)) {\n        result = value;\n        return true;\n      }\n    });\n    return result;\n  };\n\n  // Return all the elements that pass a truth test.\n  // Delegates to **ECMAScript 5**'s native `filter` if available.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, iterator, context) {\n    var results = [];\n    if (obj == null) return results;\n    if (nativeFilter && obj.filter === nativeFilter) return obj.filter(iterator, context);\n    each(obj, function(value, index, list) {\n      if (iterator.call(context, value, index, list)) results[results.length] = value;\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, iterator, context) {\n    return _.filter(obj, function(value, index, list) {\n      return !iterator.call(context, value, index, list);\n    }, context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Delegates to **ECMAScript 5**'s native `every` if available.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, iterator, context) {\n    iterator || (iterator = _.identity);\n    var result = true;\n    if (obj == null) return result;\n    if (nativeEvery && obj.every === nativeEvery) return obj.every(iterator, context);\n    each(obj, function(value, index, list) {\n      if (!(result = result && iterator.call(context, value, index, list))) return breaker;\n    });\n    return !!result;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Delegates to **ECMAScript 5**'s native `some` if available.\n  // Aliased as `any`.\n  var any = _.some = _.any = function(obj, iterator, context) {\n    iterator || (iterator = _.identity);\n    var result = false;\n    if (obj == null) return result;\n    if (nativeSome && obj.some === nativeSome) return obj.some(iterator, context);\n    each(obj, function(value, index, list) {\n      if (result || (result = iterator.call(context, value, index, list))) return breaker;\n    });\n    return !!result;\n  };\n\n  // Determine if the array or object contains a given value (using `===`).\n  // Aliased as `include`.\n  _.contains = _.include = function(obj, target) {\n    if (obj == null) return false;\n    if (nativeIndexOf && obj.indexOf === nativeIndexOf) return obj.indexOf(target) != -1;\n    return any(obj, function(value) {\n      return value === target;\n    });\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      return (isFunc ? method : value[method]).apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, function(value){ return value[key]; });\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs, first) {\n    if (_.isEmpty(attrs)) return first ? null : [];\n    return _[first ? 'find' : 'filter'](obj, function(value) {\n      for (var key in attrs) {\n        if (attrs[key] !== value[key]) return false;\n      }\n      return true;\n    });\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.where(obj, attrs, true);\n  };\n\n  // Return the maximum element or (element-based computation).\n  // Can't optimize arrays of integers longer than 65,535 elements.\n  // See: https://bugs.webkit.org/show_bug.cgi?id=80797\n  _.max = function(obj, iterator, context) {\n    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {\n      return Math.max.apply(Math, obj);\n    }\n    if (!iterator && _.isEmpty(obj)) return -Infinity;\n    var result = {computed : -Infinity, value: -Infinity};\n    each(obj, function(value, index, list) {\n      var computed = iterator ? iterator.call(context, value, index, list) : value;\n      computed >= result.computed && (result = {value : value, computed : computed});\n    });\n    return result.value;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iterator, context) {\n    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {\n      return Math.min.apply(Math, obj);\n    }\n    if (!iterator && _.isEmpty(obj)) return Infinity;\n    var result = {computed : Infinity, value: Infinity};\n    each(obj, function(value, index, list) {\n      var computed = iterator ? iterator.call(context, value, index, list) : value;\n      computed < result.computed && (result = {value : value, computed : computed});\n    });\n    return result.value;\n  };\n\n  // Shuffle an array.\n  _.shuffle = function(obj) {\n    var rand;\n    var index = 0;\n    var shuffled = [];\n    each(obj, function(value) {\n      rand = _.random(index++);\n      shuffled[index - 1] = shuffled[rand];\n      shuffled[rand] = value;\n    });\n    return shuffled;\n  };\n\n  // An internal function to generate lookup iterators.\n  var lookupIterator = function(value) {\n    return _.isFunction(value) ? value : function(obj){ return obj[value]; };\n  };\n\n  // Sort the object's values by a criterion produced by an iterator.\n  _.sortBy = function(obj, value, context) {\n    var iterator = lookupIterator(value);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value : value,\n        index : index,\n        criteria : iterator.call(context, value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index < right.index ? -1 : 1;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(obj, value, context, behavior) {\n    var result = {};\n    var iterator = lookupIterator(value || _.identity);\n    each(obj, function(value, index) {\n      var key = iterator.call(context, value, index, obj);\n      behavior(result, key, value);\n    });\n    return result;\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = function(obj, value, context) {\n    return group(obj, value, context, function(result, key, value) {\n      (_.has(result, key) ? result[key] : (result[key] = [])).push(value);\n    });\n  };\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = function(obj, value, context) {\n    return group(obj, value, context, function(result, key) {\n      if (!_.has(result, key)) result[key] = 0;\n      result[key]++;\n    });\n  };\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iterator, context) {\n    iterator = iterator == null ? _.identity : lookupIterator(iterator);\n    var value = iterator.call(context, obj);\n    var low = 0, high = array.length;\n    while (low < high) {\n      var mid = (low + high) >>> 1;\n      iterator.call(context, array[mid]) < value ? low = mid + 1 : high = mid;\n    }\n    return low;\n  };\n\n  // Safely convert anything iterable into a real, live array.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (obj.length === +obj.length) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return (obj.length === +obj.length) ? obj.length : _.keys(obj).length;\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    return (n != null) && !guard ? slice.call(array, 0, n) : array[0];\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N. The **guard** check allows it to work with\n  // `_.map`.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, array.length - ((n == null) || guard ? 1 : n));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array. The **guard** check allows it to work with `_.map`.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if ((n != null) && !guard) {\n      return slice.call(array, Math.max(array.length - n, 0));\n    } else {\n      return array[array.length - 1];\n    }\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array. The **guard**\n  // check allows it to work with `_.map`.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, (n == null) || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, output) {\n    each(input, function(value) {\n      if (_.isArray(value)) {\n        shallow ? push.apply(output, value) : flatten(value, shallow, output);\n      } else {\n        output.push(value);\n      }\n    });\n    return output;\n  };\n\n  // Return a completely flattened version of an array.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, []);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iterator, context) {\n    if (_.isFunction(isSorted)) {\n      context = iterator;\n      iterator = isSorted;\n      isSorted = false;\n    }\n    var initial = iterator ? _.map(array, iterator, context) : array;\n    var results = [];\n    var seen = [];\n    each(initial, function(value, index) {\n      if (isSorted ? (!index || seen[seen.length - 1] !== value) : !_.contains(seen, value)) {\n        seen.push(value);\n        results.push(array[index]);\n      }\n    });\n    return results;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(concat.apply(ArrayProto, arguments));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var rest = slice.call(arguments, 1);\n    return _.filter(_.uniq(array), function(item) {\n      return _.every(rest, function(other) {\n        return _.indexOf(other, item) >= 0;\n      });\n    });\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = concat.apply(ArrayProto, slice.call(arguments, 1));\n    return _.filter(array, function(value){ return !_.contains(rest, value); });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    var args = slice.call(arguments);\n    var length = _.max(_.pluck(args, 'length'));\n    var results = new Array(length);\n    for (var i = 0; i < length; i++) {\n      results[i] = _.pluck(args, \"\" + i);\n    }\n    return results;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    if (list == null) return {};\n    var result = {};\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // If the browser doesn't supply us with indexOf (I'm looking at you, **MSIE**),\n  // we need this function. Return the position of the first occurrence of an\n  // item in an array, or -1 if the item is not included in the array.\n  // Delegates to **ECMAScript 5**'s native `indexOf` if available.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = function(array, item, isSorted) {\n    if (array == null) return -1;\n    var i = 0, l = array.length;\n    if (isSorted) {\n      if (typeof isSorted == 'number') {\n        i = (isSorted < 0 ? Math.max(0, l + isSorted) : isSorted);\n      } else {\n        i = _.sortedIndex(array, item);\n        return array[i] === item ? i : -1;\n      }\n    }\n    if (nativeIndexOf && array.indexOf === nativeIndexOf) return array.indexOf(item, isSorted);\n    for (; i < l; i++) if (array[i] === item) return i;\n    return -1;\n  };\n\n  // Delegates to **ECMAScript 5**'s native `lastIndexOf` if available.\n  _.lastIndexOf = function(array, item, from) {\n    if (array == null) return -1;\n    var hasIndex = from != null;\n    if (nativeLastIndexOf && array.lastIndexOf === nativeLastIndexOf) {\n      return hasIndex ? array.lastIndexOf(item, from) : array.lastIndexOf(item);\n    }\n    var i = (hasIndex ? from : array.length);\n    while (i--) if (array[i] === item) return i;\n    return -1;\n  };\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (arguments.length <= 1) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = arguments[2] || 1;\n\n    var len = Math.max(Math.ceil((stop - start) / step), 0);\n    var idx = 0;\n    var range = new Array(len);\n\n    while(idx < len) {\n      range[idx++] = start;\n      start += step;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (func.bind === nativeBind && nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    var args = slice.call(arguments, 2);\n    return function() {\n      return func.apply(context, args.concat(slice.call(arguments)));\n    };\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context.\n  _.partial = function(func) {\n    var args = slice.call(arguments, 1);\n    return function() {\n      return func.apply(this, args.concat(slice.call(arguments)));\n    };\n  };\n\n  // Bind all of an object's methods to that object. Useful for ensuring that\n  // all callbacks defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var funcs = slice.call(arguments, 1);\n    if (funcs.length === 0) funcs = _.functions(obj);\n    each(funcs, function(f) { obj[f] = _.bind(obj[f], obj); });\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memo = {};\n    hasher || (hasher = _.identity);\n    return function() {\n      var key = hasher.apply(this, arguments);\n      return _.has(memo, key) ? memo[key] : (memo[key] = func.apply(this, arguments));\n    };\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){ return func.apply(null, args); }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = function(func) {\n    return _.delay.apply(_, [func, 1].concat(slice.call(arguments, 1)));\n  };\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time.\n  _.throttle = function(func, wait) {\n    var context, args, timeout, result;\n    var previous = 0;\n    var later = function() {\n      previous = new Date;\n      timeout = null;\n      result = func.apply(context, args);\n    };\n    return function() {\n      var now = new Date;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0) {\n        clearTimeout(timeout);\n        timeout = null;\n        previous = now;\n        result = func.apply(context, args);\n      } else if (!timeout) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, result;\n    return function() {\n      var context = this, args = arguments;\n      var later = function() {\n        timeout = null;\n        if (!immediate) result = func.apply(context, args);\n      };\n      var callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) result = func.apply(context, args);\n      return result;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = function(func) {\n    var ran = false, memo;\n    return function() {\n      if (ran) return memo;\n      ran = true;\n      memo = func.apply(this, arguments);\n      func = null;\n      return memo;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return function() {\n      var args = [func];\n      push.apply(args, arguments);\n      return wrapper.apply(this, args);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var funcs = arguments;\n    return function() {\n      var args = arguments;\n      for (var i = funcs.length - 1; i >= 0; i--) {\n        args = [funcs[i].apply(this, args)];\n      }\n      return args[0];\n    };\n  };\n\n  // Returns a function that will only be executed after being called N times.\n  _.after = function(times, func) {\n    if (times <= 0) return func();\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Object Functions\n  // ----------------\n\n  // Retrieve the names of an object's properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = nativeKeys || function(obj) {\n    if (obj !== Object(obj)) throw new TypeError('Invalid object');\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys[keys.length] = key;\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var values = [];\n    for (var key in obj) if (_.has(obj, key)) values.push(obj[key]);\n    return values;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var pairs = [];\n    for (var key in obj) if (_.has(obj, key)) pairs.push([key, obj[key]]);\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    for (var key in obj) if (_.has(obj, key)) result[obj[key]] = key;\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = function(obj) {\n    each(slice.call(arguments, 1), function(source) {\n      if (source) {\n        for (var prop in source) {\n          obj[prop] = source[prop];\n        }\n      }\n    });\n    return obj;\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(obj) {\n    var copy = {};\n    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));\n    each(keys, function(key) {\n      if (key in obj) copy[key] = obj[key];\n    });\n    return copy;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj) {\n    var copy = {};\n    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));\n    for (var key in obj) {\n      if (!_.contains(keys, key)) copy[key] = obj[key];\n    }\n    return copy;\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = function(obj) {\n    each(slice.call(arguments, 1), function(source) {\n      if (source) {\n        for (var prop in source) {\n          if (obj[prop] == null) obj[prop] = source[prop];\n        }\n      }\n    });\n    return obj;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the Harmony `egal` proposal: http://wiki.ecmascript.org/doku.php?id=harmony:egal.\n    if (a === b) return a !== 0 || 1 / a == 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className != toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, dates, and booleans are compared by value.\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return a == String(b);\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive. An `egal` comparison is performed for\n        // other numeric values.\n        return a != +a ? b != +b : (a == 0 ? 1 / a == 1 / b : a == +b);\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a == +b;\n      // RegExps are compared by their source patterns and flags.\n      case '[object RegExp]':\n        return a.source == b.source &&\n               a.global == b.global &&\n               a.multiline == b.multiline &&\n               a.ignoreCase == b.ignoreCase;\n    }\n    if (typeof a != 'object' || typeof b != 'object') return false;\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] == a) return bStack[length] == b;\n    }\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n    var size = 0, result = true;\n    // Recursively compare objects and arrays.\n    if (className == '[object Array]') {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      size = a.length;\n      result = size == b.length;\n      if (result) {\n        // Deep compare the contents, ignoring non-numeric properties.\n        while (size--) {\n          if (!(result = eq(a[size], b[size], aStack, bStack))) break;\n        }\n      }\n    } else {\n      // Objects with different constructors are not equivalent, but `Object`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && (aCtor instanceof aCtor) &&\n                               _.isFunction(bCtor) && (bCtor instanceof bCtor))) {\n        return false;\n      }\n      // Deep compare objects.\n      for (var key in a) {\n        if (_.has(a, key)) {\n          // Count the expected number of properties.\n          size++;\n          // Deep compare each member.\n          if (!(result = _.has(b, key) && eq(a[key], b[key], aStack, bStack))) break;\n        }\n      }\n      // Ensure that both objects contain the same number of properties.\n      if (result) {\n        for (key in b) {\n          if (_.has(b, key) && !(size--)) break;\n        }\n        result = !size;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return result;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b, [], []);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (_.isArray(obj) || _.isString(obj)) return obj.length === 0;\n    for (var key in obj) if (_.has(obj, key)) return false;\n    return true;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) == '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    return obj === Object(obj);\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp.\n  each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) == '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return !!(obj && _.has(obj, 'callee'));\n    };\n  }\n\n  // Optimize `isFunction` if appropriate.\n  if (typeof (/./) !== 'function') {\n    _.isFunction = function(obj) {\n      return typeof obj === 'function';\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj != +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) == '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iterators.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iterator, context) {\n    var accum = Array(n);\n    for (var i = 0; i < n; i++) accum[i] = iterator.call(context, i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // List of HTML entities for escaping.\n  var entityMap = {\n    escape: {\n      '&': '&amp;',\n      '<': '&lt;',\n      '>': '&gt;',\n      '\"': '&quot;',\n      \"'\": '&#x27;',\n      '/': '&#x2F;'\n    }\n  };\n  entityMap.unescape = _.invert(entityMap.escape);\n\n  // Regexes containing the keys and values listed immediately above.\n  var entityRegexes = {\n    escape:   new RegExp('[' + _.keys(entityMap.escape).join('') + ']', 'g'),\n    unescape: new RegExp('(' + _.keys(entityMap.unescape).join('|') + ')', 'g')\n  };\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  _.each(['escape', 'unescape'], function(method) {\n    _[method] = function(string) {\n      if (string == null) return '';\n      return ('' + string).replace(entityRegexes[method], function(match) {\n        return entityMap[method][match];\n      });\n    };\n  });\n\n  // If the value of the named property is a function then invoke it;\n  // otherwise, return it.\n  _.result = function(object, property) {\n    if (object == null) return null;\n    var value = object[property];\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    each(_.functions(obj), function(name){\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result.call(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\t':     't',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g;\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  _.template = function(text, data, settings) {\n    var render;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = new RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset)\n        .replace(escaper, function(match) { return '\\\\' + escapes[match]; });\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      }\n      if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      }\n      if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n      index = offset + match.length;\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + \"return __p;\\n\";\n\n    try {\n      render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    if (data) return render(data, _);\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled function source as a convenience for precompilation.\n    template.source = 'function(' + (settings.variable || 'obj') + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function, which will delegate to the wrapper.\n  _.chain = function(obj) {\n    return _(obj).chain();\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(obj) {\n    return this._chain ? _(obj).chain() : obj;\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name == 'shift' || name == 'splice') && obj.length === 0) delete obj[0];\n      return result.call(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result.call(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  _.extend(_.prototype, {\n\n    // Start chaining a wrapped Underscore object.\n    chain: function() {\n      this._chain = true;\n      return this;\n    },\n\n    // Extracts the result from a wrapped and chained object.\n    value: function() {\n      return this._wrapped;\n    }\n\n  });\n\n}).call(this);\n","var Variables = require('./Variable.js');\r\nvar SubFunction = require('./SubFunction.js');\r\nvar exec = require('child_process').exec;\r\nexports = module.exports = function (io, conn) {\r\n  io.sockets.on('connection', function (socket) {\r\n    console.log(\"co nguoi ket noi\" + socket.id);\r\n    socket.emit('UpdateElement', Variables.resultElement);\r\n    socket.emit('UpdateBitAdjust', Variables.resultBitAdjust);\r\n    socket.emit('UpdateBitDisplay', Variables.resultBitDisplay);\r\n    socket.emit('UpdateWordAdjust', Variables.resultWordAdjust);\r\n    socket.emit('UpdateWordDisplay', Variables.resultWordDisplay);\r\n    socket.emit('UpdateDWordAdjust', Variables.resultDWordAdjust);\r\n    socket.emit('UpdateDWordDisplay', Variables.resultDWordDisplay);\r\n    socket.emit('UpdateTextField', Variables.resultTextField);\r\n\r\n    socket.on(\"disconnect\", function () {\r\n      console.log(\"ngat kekt noi\");\r\n    });\r\n    socket.on('initial', function () {\r\n      console.log('INITIAL');\r\n      socket.emit('UpdateElement', Variables.resultElement);\r\n      socket.emit('UpdateBitAdjust', Variables.resultBitAdjust);\r\n      socket.emit('UpdateBitDisplay', Variables.resultBitDisplay);\r\n      socket.emit('UpdateWordAdjust', Variables.resultWordAdjust);\r\n      socket.emit('UpdateWordDisplay', Variables.resultWordDisplay);\r\n      socket.emit('UpdateDWordAdjust', Variables.resultDWordAdjust);\r\n      socket.emit('UpdateDWordDisplay', Variables.resultDWordDisplay);\r\n      socket.emit('UpdateTextField', Variables.resultTextField);\r\n    })\r\n    //WRITE TO PLC\r\n    socket.on(\"Client-send-data\", function (data) {\r\n      console.log(data);\r\n      //Force 1\r\n      if (data.NameCommand === 'ElementForce_Run' && !isNaN(data.tag)) {\r\n        conn.writeItems('ComPC', [100, 100, data.tag, data.tag], () => { console.log('can not write data Mitsubishi') })\r\n      }\r\n      //Force 0\r\n      if (data.NameCommand === 'ElementForce_Stop' && !isNaN(data.tag)) {\r\n        conn.writeItems('ComPC', [101, 101, data.tag, data.tag], () => { console.log('can not write data Mitsubishi') })\r\n      }\r\n      //UnForce\r\n      if (data.NameCommand === 'ElementForce_Auto' && !isNaN(data.tag)) {\r\n        conn.writeItems('ComPC', [102, 102, data.tag, data.tag], () => { console.log('can not write data Mitsubishi') })\r\n      }\r\n      //Interlock\r\n      if (data.NameCommand === 'ElementForce_Interlock' && !isNaN(data.tag)) {\r\n        conn.writeItems('ComPC', [103, 103, data.tag, data.tag], () => { console.log('can not write data Mitsubishi') })\r\n      }\r\n\r\n      //BitAdjust\r\n      if (data.NameCommand === 'BitAdjustForce' && !isNaN(data.tag)) {\r\n        conn.writeItems('ComPC', [110, 110, data.mode, data.mode, data.tag, data.tag], () => { console.log('can not write data Mitsubishi') })\r\n      }\r\n      //WordAdjust\r\n      if (data.NameCommand === 'WordAdjustForce' && !isNaN(data.tag)) {\r\n        conn.writeItems('ComPC', [111, 111, data.tag, data.tag, data.value, data.value], () => { console.log('can not write data Mitsubishi') })\r\n      }\r\n      //DWordAdjust\r\n      if (data.NameCommand === 'DWordAdjustForce' && !isNaN(data.tag)) {\r\n        var heightValueDWordAdjust = parseInt(data.value / 65536);\r\n        var lowValueDWordAdjust = parseInt(data.value % 65536);\r\n        conn.writeItems('ComPC', [112, 112, data.tag, data.tag, heightValueDWordAdjust, heightValueDWordAdjust, lowValueDWordAdjust, lowValueDWordAdjust], () => { console.log('can not write data Mitsubishi') })\r\n      }\r\n    });\r\n  });\r\n}","var Variables = require('./Variable.js');\r\nvar modelPanel = require('./models/model_panel');\r\nvar modelLabel = require('./models/model_label');\r\nvar modelLines = require('./models/model_line');\r\nvar modelElement = require('./models/model_element');\r\nvar modelBitDisplay = require('./models/model_bitDisplay');\r\nvar modelBitAdjust = require('./models/model_bitAdjust');\r\nvar modelWordDisplay = require('./models/model_wordDisplay');\r\nvar modelWordAdjust = require('./models/model_wordAdjust');\r\nvar modelDWordDisplay = require('./models/model_dwordDisplay');\r\nvar modelDWordAdjust = require('./models/model_dwordAdjust');\r\nvar modelTextField = require('./models/model_textField');\r\nvar modelTextFieldInput = require('./models/model_textFieldInput');\r\nvar modePosCobot = require('./models/model_posCobot');\r\nvar modeBitDisplayImageLibrary = require('./models/model_bitdisplay_image_library');\r\nvar modeElementImageLibrary = require('./models/model_element_image_library');\r\nvar SubFunction = require('./SubFunction')\r\nexports = module.exports = function (io) {\r\n    // console.log('getfile')\r\n    // SubFunction.getJsonFile('./Store/Database/BitDisplay.json',data=>{\r\n    //     Variables.resultBitDisplay =data\r\n    // });\r\n    // SubFunction.getJsonFile('./Store/Database/BitAdjust.json',data=>{\r\n    //     Variables.resultBitAdjust = data\r\n    // });\r\n    // SubFunction.getJsonFile('./Store/Database/WordDisplay.json',data=>{\r\n    //     Variables.resultWordDisplay = data\r\n    // });\r\n    // SubFunction.getJsonFile('./Store/Database/WordAdjust.json',data=>{\r\n    //     Variables.resultWordAdjust = data\r\n    // });\r\n    // SubFunction.getJsonFile('./Store/Database/DWordDisplay.json',data=>{\r\n    //     Variables.resultDWordDisplay = data\r\n    // });\r\n    // SubFunction.getJsonFile('./Store/Database/DWordAdjust.json',data=>{\r\n    //     Variables.resultDWordAdjust = data\r\n    // });\r\n    // SubFunction.getJsonFile('./Store/Database/Panel.json',data=>{\r\n    //     Variables.resultPanel = data\r\n    // });\r\n    // SubFunction.getJsonFile('./Store/Database/Element.json',data=>{\r\n    //     Variables.resultElement = data\r\n    // });\r\n    // SubFunction.getJsonFile('./Store/Database/Labels.json',data=>{\r\n    // Variables.resultlabel = data\r\n    // });\r\n    // SubFunction.getJsonFile('./Store/Database/Lines.json',data=>{\r\n    //     Variables.resultline = data\r\n    // });\r\n\r\n    // timerIdElement = setInterval(() => {\r\n    //     if (Variables.resultElement !== []) {\r\n    //         io.sockets.emit('UpdateElement', Variables.resultElement)\r\n    //     }\r\n    //     clearInterval(timerIdElement);\r\n    // }, 200);\r\n    // timerIdBitDisplay = setInterval(() => {\r\n    //     if (Variables.resultBitDisplay !== []) {\r\n    //         console.log('Send socketio')\r\n    //         io.sockets.emit('UpdateBitDisplay', Variables.resultBitDisplay)\r\n    //     }\r\n    //     clearInterval(timerIdBitDisplay);\r\n    // }, 200);\r\n    // timerIdBitAdjust = setInterval(() => {\r\n    //     if (Variables.resultBitAdjust !== []) {\r\n    //         console.log('Send socketio')\r\n    //         io.sockets.emit('UpdateBitAdjust', Variables.resultBitAdjust)\r\n    //     }\r\n    //     clearInterval(timerIdBitAdjust);\r\n    // }, 200);\r\n    // timerIdWordDisplay = setInterval(() => {\r\n    //     if (Variables.resultWordDisplay !== []) {\r\n    //         console.log('Send socketio')\r\n    //         io.sockets.emit('UpdateWordDisplay', Variables.resultWordDisplay)\r\n    //     }\r\n    //     clearInterval(timerIdWordDisplay);\r\n    // }, 200);\r\n    // timerIdWordAdjust = setInterval(() => {\r\n    //     if (Variables.resultWordAdjust !== []) {\r\n    //         console.log('Send socketio')\r\n    //         io.sockets.emit('UpdateWordAdjust', Variables.resultWordAdjust)\r\n    //     }\r\n    //     clearInterval(timerIdWordAdjust);\r\n    // }, 200);\r\n    // timerIdDWordDisplay = setInterval(() => {\r\n    //     if (Variables.resultDWordDisplay !== []) {\r\n    //         console.log('Send socketio')\r\n    //         io.sockets.emit('UpdateDWordDisplay', Variables.resultDWordDisplay)\r\n    //     }\r\n    //     clearInterval(timerIdDWordDisplay);\r\n    // }, 200);\r\n    // timerIdDWordAdjust = setInterval(() => {\r\n    //     if (Variables.resultDWordAdjust !== []) {\r\n    //         console.log('Send socketio')\r\n    //         io.sockets.emit('UpdateDWordAdjust', Variables.resultDWordAdjust)\r\n    //     }\r\n    //     clearInterval(timerIdDWordAdjust);\r\n    // }, 200);\r\n    // timerIdLabel = setInterval(() => {\r\n    //     if (Variables.resultlabel !== []) {\r\n    //         console.log('Send socketio')\r\n    //         io.sockets.emit('UpdateLabel', Variables.resultlabel)\r\n    //     }\r\n    //     if (Variables.resultlabel === 'update') {Variables.refreshDataLabel=true}\r\n    //     clearInterval(timerIdLabel);\r\n    // }, 200);\r\n    // timerIdPanel = setInterval(() => {\r\n    //     if (Variables.resultPanel !== []) {\r\n    //         console.log('Send socketio')\r\n    //         io.sockets.emit('UpdatePanel', Variables.resultPanel)\r\n    //     }\r\n    //     clearInterval(timerIdPanel);\r\n    // }, 200);\r\n    Variables.refreshDataBitAdjust = true;\r\n    Variables.refreshDataBitDisplay = true;\r\n    Variables.refreshDataDWordAdjust = true;\r\n    Variables.refreshDataDWordDisplay = true;\r\n    Variables.refreshDataElement = true;\r\n    Variables.refreshDataImage = true;\r\n    Variables.refreshDataLabel = true;\r\n    Variables.refreshDataPanel = true;\r\n    Variables.refreshDataWordAdjust = true;\r\n    Variables.refreshDataWordDisplay = true;\r\n    Variables.refreshDataTextField = true;\r\n    Variables.refreshDataTextFieldInput = true;\r\n    Variables.refreshDataPosCobot = true;\r\n    Variables.refreshDataBitDisplayImageLibrary = true;\r\n    Variables.refreshDataElementImageLibrary = true;\r\n    setInterval(function () {\r\n        try {\r\n            if (Variables.refreshDataPanel) {\r\n                Variables.refreshDataPanel = false;\r\n                modelPanel.find().limit(1000).sort().select({\r\n                    parent: 1, width: 1, height: 1, left: 1, top: 1, margin: 1, backgroundColor: 1,\r\n                    padding: 1, borderRadius: 1, boxShadow1: 1, boxShadow2: 1, boxShadow3: 1,\r\n                    boxShadowColor: 1, zIndex: 1\r\n                }).exec((err, Panel) => {\r\n                    if (err) {\r\n                        console.log(\"get data from db error\");\r\n                    } else {\r\n                        Variables.resultPanel = Panel;\r\n                        SubFunction.saveJsonFile('./Store/Database/Panel.json', Panel);\r\n                        io.sockets.emit('UpdatePanel', Variables.resultPanel)\r\n                        console.log(\"Get modelPanel data successfull\", Panel.length);\r\n                    }\r\n                });\r\n            }\r\n        } catch (error) { }\r\n    }, 200)\r\n    setInterval(function () {\r\n        try {\r\n            if (Variables.refreshDataElement) {\r\n                Variables.refreshDataElement = false;\r\n                modelElement.find({}).limit(1000).sort({ left: 1 }).select({\r\n                    parent: 1, tag: 1, left: 1, top: 1, nameElement: 1, src: 1, state_m: 1, state_cm: 1, state_F0: 1, state_F1: 1, state_Fault: 1, state_Interlock: 1,\r\n                }).exec((err, Element) => {\r\n                    if (err) {\r\n                        console.log(\"get data from db error\");\r\n                    } else {\r\n                        for (let i = 0; i < Element.length; i++) {\r\n                            if (!isNaN(parseInt(Element[i].tag))) {\r\n                                if (parseInt(Element[i].tag) <= Variables.Element.length) {\r\n                                    if (Variables.Element[Element[i].tag] & 2) { Element[i].state_m = 1 } else { Element[i].state_m = 0 }\r\n                                    if (Variables.Element[Element[i].tag] & 4) { Element[i].state_cm = 1 } else { Element[i].state_cm = 0 }\r\n                                    if (Variables.Element[Element[i].tag] & 8) { Element[i].state_F0 = 1 } else { Element[i].state_F0 = 0 }\r\n                                    if (Variables.Element[Element[i].tag] & 16) { Element[i].state_F1 = 1 } else { Element[i].state_F1 = 0 }\r\n                                    if (Variables.Element[Element[i].tag] & 32) { Element[i].state_Fault = 1 } else { Element[i].state_Fault = 0 }\r\n                                    if (Variables.Element[Element[i].tag] & 128) { Element[i].state_Interlock = 1 } else { Element[i].state_Interlock = 0 }\r\n                                }\r\n                            } else {\r\n                                Element[i].state_m = 0;\r\n                                Element[i].state_cm = 0;\r\n                                Element[i].state_f0 = 0;\r\n                                Element[i].state_F1 = 0;\r\n                                Element[i].state_Fault = 0;\r\n                                Element[i].state_Interlock = 0;\r\n                            }\r\n                        }\r\n                        Variables.resultElement = Element;\r\n                        SubFunction.saveJsonFile('./Store/Database/Element.json', Element);\r\n\r\n                        io.sockets.emit('UpdateElement', Variables.resultElement)\r\n                        console.log(\"Get modelElement data successfull\", Element.length);\r\n                    }\r\n                });\r\n            }\r\n            if (Variables.haveChangeElement && Variables.resultElement.length > 0) {\r\n                Variables.haveChangeElement = false;\r\n                for (let i = 0; i < Variables.resultElement.length; i++) {\r\n                    if (!isNaN(parseInt(Variables.resultElement[i].tag))) {\r\n                        if (parseInt(Variables.resultElement[i].tag) <= Variables.Element.length) {\r\n                            if (Variables.Element[Variables.resultElement[i].tag] & 2) { Variables.resultElement[i].state_m = 1 }\r\n                            else { Variables.resultElement[i].state_m = 0 }\r\n\r\n                            if (Variables.Element[Variables.resultElement[i].tag] & 4) { Variables.resultElement[i].state_cm = 1 }\r\n                            else { Variables.resultElement[i].state_cm = 0 }\r\n\r\n                            if (Variables.Element[Variables.resultElement[i].tag] & 8) { Variables.resultElement[i].state_F0 = 1 }\r\n                            else { Variables.resultElement[i].state_F0 = 0 }\r\n\r\n                            if (Variables.Element[Variables.resultElement[i].tag] & 16) { Variables.resultElement[i].state_F1 = 1 }\r\n                            else { Variables.resultElement[i].state_F1 = 0 }\r\n\r\n                            if (Variables.Element[Variables.resultElement[i].tag] & 32) { Variables.resultElement[i].state_Fault = 1 }\r\n                            else { Variables.resultElement[i].state_Fault = 0 }\r\n\r\n                            if (Variables.Element[Variables.resultElement[i].tag] & 128) { Variables.resultElement[i].state_Interlock = 1 }\r\n                            else { Variables.resultElement[i].state_Interlock = 0 }\r\n                        }\r\n                    } else {\r\n                        Variables.resultElement[i].state_m = 0;\r\n                        Variables.resultElement[i].state_cm = 0;\r\n                        Variables.resultElement[i].state_f0 = 0;\r\n                        Variables.resultElement[i].state_F1 = 0;\r\n                        Variables.resultElement[i].state_Fault = 0;\r\n                        Variables.resultElement[i].state_Interlock = 0;\r\n                    }\r\n                }\r\n                io.sockets.emit('UpdateElement', Variables.resultElement)\r\n                console.log(\"Get modelElement data successfull\", Element.length);\r\n            }\r\n        } catch (error) { }\r\n    }, 200)\r\n    setInterval(function () {\r\n        try {\r\n            if (Variables.refreshDataLine) {\r\n                Variables.refreshDataLine = false;\r\n                modelLines.find({}).limit(1000).sort({ x: 1 }).select({\r\n                    parent: 1, left: 1, top: 1, length: 1, idRun: 1, type: 1,\r\n                }).exec((err, Lines) => {\r\n                    if (err) {\r\n                        console.log(\"get data from db error\");\r\n                    } else {\r\n                        Variables.resultline = Lines;\r\n                        SubFunction.saveJsonFile('./Store/Database/Lines.json', Lines);\r\n                        io.sockets.emit('UpdateLine', Variables.resultline)\r\n                        console.log(\"Get modelLines data successfull\");\r\n                    }\r\n                });\r\n            }\r\n        } catch (error) { }\r\n    }, 200)\r\n    setInterval(function () {\r\n        try {\r\n            if (Variables.refreshDataLabel) {\r\n                Variables.refreshDataLabel = false;\r\n                modelLabel.find({}).limit(1000).sort({ left: 1 }).select({\r\n                    parent: 1, left: 1, top: 1, text: 1, color: 1, fontSize: 1, width: 1\r\n                }).exec((err, Labels) => {\r\n                    if (err) {\r\n                        console.log(\"get data from db error\");\r\n                    } else {\r\n                        Variables.resultlabel = Labels;\r\n                        SubFunction.saveJsonFile('./Store/Database/Labels.json', Labels);\r\n                        io.sockets.emit('UpdateLabel', Variables.resultlabel)\r\n                        console.log(\"Get modelLabel data successfull\", Labels.length);\r\n                    }\r\n                });\r\n            }\r\n        } catch (error) { }\r\n    }, 200)\r\n    setInterval(function () {\r\n        try {\r\n            if (Variables.refreshDataBitAdjust) {\r\n                Variables.refreshDataBitAdjust = false;\r\n                modelBitAdjust.find({}).limit(1000).sort({ left: 1 }).select({\r\n                    parent: 1, status: 1, text: 1, fontSize: 1, tag: 1, left: 1, top: 1, width: 1, height: 1, type: 1\r\n                }).exec((err, BitAdjust) => {\r\n                    if (err) {\r\n                        console.log(\"get data from db error\");\r\n                    } else {\r\n                        for (let i = 0; i < BitAdjust.length; i++) {\r\n                            if (BitAdjust[i].tag <= Variables.BitAdjust.length) { BitAdjust[i].status = Variables.BitAdjust[BitAdjust[i].tag] }\r\n                        }\r\n                        Variables.resultBitAdjust = BitAdjust;\r\n                        SubFunction.saveJsonFile('./Store/Database/BitAdjust.json', BitAdjust);\r\n                        io.sockets.emit('UpdateBitAdjust', Variables.resultBitAdjust)\r\n                        console.log(\"Get modelBitAdjust data successfull\", BitAdjust.length);\r\n                    }\r\n                });\r\n            }\r\n            if (Variables.haveChangeBitAdjust && Variables.resultBitAdjust.length > 0) {\r\n                Variables.haveChangeBitAdjust = false;\r\n                for (let i = 0; i < Variables.resultBitAdjust.length; i++) {\r\n                    if (Variables.resultBitAdjust[i].tag <= Variables.BitAdjust.length) { Variables.resultBitAdjust[i].status = Variables.BitAdjust[Variables.resultBitAdjust[i].tag] }\r\n                }\r\n                io.sockets.emit('UpdateBitAdjust', Variables.resultBitAdjust)\r\n                console.log(Variables.haveChangeBitAdjust)\r\n            }\r\n        } catch (error) { }\r\n    }, 200)\r\n    setInterval(function () {\r\n        try {\r\n            if (Variables.refreshDataBitDisplay) {\r\n                Variables.refreshDataBitDisplay = false;\r\n                modelBitDisplay.find({}).limit(1000).sort({ left: 1 }).select({\r\n                    parent: 1, status: 1, text0: 1, text1: 1, color0: 1, color1: 1, nameImage0: 1, nameImage1: 1,\r\n                    fontSize: 1, tag: 1, left: 1, top: 1, width: 1, type: 1\r\n                }).exec((err, BitDisplay) => {\r\n                    if (err) {\r\n                        console.log(\"get data from db error\");\r\n                    } else {\r\n                        for (let i = 0; i < BitDisplay.length; i++) {\r\n                            if (BitDisplay[i].tag <= Variables.BitDisplay.length) { BitDisplay[i].status = Variables.BitDisplay[BitDisplay[i].tag] }\r\n                        }\r\n                        Variables.resultBitDisplay = BitDisplay;\r\n                        SubFunction.saveJsonFile('./Store/Database/BitDisplay.json', BitDisplay);\r\n                        io.sockets.emit('UpdateBitDisplay', Variables.resultBitDisplay)\r\n                        console.log(\"Get modelBitDisplay data successfull\", BitDisplay.length);\r\n                    }\r\n                });\r\n            }\r\n            if (Variables.haveChangeBitDisplay && Variables.resultBitDisplay.length > 0) {\r\n                Variables.haveChangeBitDisplay = false;\r\n                for (let i = 0; i < Variables.resultBitDisplay.length; i++) {\r\n                    if (Variables.resultBitDisplay[i].tag <= Variables.BitDisplay.length) { Variables.resultBitDisplay[i].status = Variables.BitDisplay[Variables.resultBitDisplay[i].tag] }\r\n                }\r\n                io.sockets.emit('UpdateBitDisplay', Variables.resultBitDisplay)\r\n            }\r\n        } catch (error) { }\r\n    }, 200)\r\n    setInterval(function () {\r\n        try {\r\n            if (Variables.refreshDataWordDisplay) {\r\n                Variables.refreshDataWordDisplay = false;\r\n                modelWordDisplay.find({}).limit(1000).sort({ left: 1 }).select({\r\n                    parent: 1, tag: 1, text: 1, fontSize: 1, left: 1, top: 1, width: 1,\r\n                }).exec((err, WordDisplay) => {\r\n                    if (err) {\r\n                        console.log(\"get data from db error\");\r\n                    } else {\r\n                        for (let i = 0; i < WordDisplay.length; i++) {\r\n                            if (WordDisplay[i].tag <= Variables.WordDisplay.length) { WordDisplay[i].text = Variables.WordDisplay[WordDisplay[i].tag] }\r\n                            else { WordDisplay[i].text = '???' }\r\n                        }\r\n                        Variables.resultWordDisplay = WordDisplay;\r\n                        SubFunction.saveJsonFile('./Store/Database/WordDisplay.json', WordDisplay);\r\n                        io.sockets.emit('UpdateWordDisplay', Variables.resultWordDisplay)\r\n                        console.log(\"Get modelWordDisplay data successfull\", WordDisplay.length);\r\n                    }\r\n                });\r\n            }\r\n            if (Variables.haveChangeWordDisplay && Variables.resultWordDisplay.length > 0) {\r\n                Variables.haveChangeWordDisplay = false;\r\n                for (let i = 0; i < Variables.resultWordDisplay.length; i++) {\r\n                    if (Variables.resultWordDisplay[i].tag <= Variables.WordDisplay.length) { Variables.resultWordDisplay[i].text = Variables.WordDisplay[Variables.resultWordDisplay[i].tag] }\r\n                    else { Variables.resultWordDisplay[i].text = '???' }\r\n                }\r\n                io.sockets.emit('UpdateWordDisplay', Variables.resultWordDisplay)\r\n            }\r\n        } catch (error) { }\r\n    }, 200)\r\n    setInterval(function () {\r\n        try {\r\n            if (Variables.refreshDataWordAdjust) {\r\n                Variables.refreshDataWordAdjust = false;\r\n                modelWordAdjust.find({}).limit(1000).sort({ left: 1 }).select({\r\n                    parent: 1, tag: 1, text: 1, fontSize: 1, left: 1, top: 1, width: 1, height: 1\r\n                }).exec((err, WordAdjust) => {\r\n                    if (err) {\r\n                        console.log(\"get data from db error\");\r\n                    } else {\r\n                        for (let i = 0; i < WordAdjust.length; i++) {\r\n                            if (WordAdjust[i].tag <= Variables.WordAdjust.length) { WordAdjust[i].text = Variables.WordAdjust[WordAdjust[i].tag] }\r\n                            else { WordAdjust[i].text = '???' }\r\n                        }\r\n                        Variables.resultWordAdjust = WordAdjust;\r\n                        SubFunction.saveJsonFile('./Store/Database/WordAdjust.json', WordAdjust);\r\n                        io.sockets.emit('UpdateWordAdjust', Variables.resultWordAdjust)\r\n                        console.log(\"Get modelWordAdjust data successfull\", WordAdjust.length);\r\n                    }\r\n                });\r\n            }\r\n            if (Variables.haveChangeWordAdjust && Variables.resultWordAdjust.length > 0) {\r\n                Variables.haveChangeWordAdjust = false;\r\n                for (let i = 0; i < Variables.resultWordAdjust.length; i++) {\r\n                    if (Variables.resultWordAdjust[i].tag <= Variables.WordAdjust.length) { Variables.resultWordAdjust[i].text = Variables.WordAdjust[Variables.resultWordAdjust[i].tag] }\r\n                    else { Variables.resultWordAdjust[i].text = '???' }\r\n                }\r\n                io.sockets.emit('UpdateWordAdjust', Variables.resultWordAdjust)\r\n            }\r\n        } catch (error) { }\r\n    }, 200)\r\n    setInterval(function () {\r\n        try {\r\n            if (Variables.refreshDataDWordDisplay) {\r\n                Variables.refreshDataDWordDisplay = false;\r\n                modelDWordDisplay.find({}).limit(1000).sort({ left: 1 }).select({\r\n                    parent: 1, tag: 1, text: 1, fontSize: 1, left: 1, top: 1, width: 1,\r\n                }).exec((err, DWordDisplay) => {\r\n                    if (err) {\r\n                        console.log(\"get data from db error\");\r\n                    } else {\r\n                        for (let i = 0; i < DWordDisplay.length; i++) {\r\n                            if (DWordDisplay[i].tag <= Variables.DWordDisplay.length) { DWordDisplay[i].text = Variables.DWordDisplay[DWordDisplay[i].tag] }\r\n                            else { DWordDisplay[i].text = '???' }\r\n                        }\r\n                        Variables.resultDWordDisplay = DWordDisplay;\r\n                        SubFunction.saveJsonFile('./Store/Database/DWordDisplay.json', DWordDisplay);\r\n                        io.sockets.emit('UpdateDWordDisplay', Variables.resultDWordDisplay)\r\n                        console.log(\"Get modelDWordDisplay data successfull\", DWordDisplay.length);\r\n                    }\r\n                });\r\n            }\r\n            if (Variables.haveChangeDWordDisplay && Variables.resultDWordDisplay.length > 0) {\r\n                Variables.haveChangeDWordDisplay = false;\r\n                for (let i = 0; i < Variables.resultDWordDisplay.length; i++) {\r\n                    if (Variables.resultDWordDisplay[i].tag <= Variables.DWordDisplay.length) { Variables.resultDWordDisplay[i].text = Variables.DWordDisplay[Variables.resultDWordDisplay[i].tag] }\r\n                    else { Variables.resultDWordDisplay[i].text = '???' }\r\n                }\r\n                io.sockets.emit('UpdateDWordDisplay', Variables.resultDWordDisplay)\r\n            }\r\n        } catch (error) { }\r\n    }, 200)\r\n    setInterval(function () {\r\n        try {\r\n            if (Variables.refreshDataDWordAdjust) {\r\n                Variables.refreshDataDWordAdjust = false;\r\n                modelDWordAdjust.find({}).limit(1000).sort({ left: 1 }).select({\r\n                    parent: 1, tag: 1, text: 1, fontSize: 1, left: 1, top: 1, width: 1, height: 1\r\n                }).exec((err, DWordAdjust) => {\r\n                    if (err) {\r\n                        console.log(\"get data from db error\");\r\n                    } else {\r\n                        for (let i = 0; i < DWordAdjust.length; i++) {\r\n                            if (DWordAdjust[i].tag <= Variables.DWordAdjust.length) { DWordAdjust[i].text = Variables.DWordAdjust[DWordAdjust[i].tag] }\r\n                            else { DWordAdjust[i].text = '???' }\r\n                        }\r\n                        Variables.resultDWordAdjust = DWordAdjust;\r\n                        SubFunction.saveJsonFile('./Store/Database/DWordAdjust.json', DWordAdjust);\r\n                        io.sockets.emit('UpdateDWordAdjust', Variables.resultDWordAdjust)\r\n                        console.log(\"Get modelDWordAdjust data successfull\", DWordAdjust.length);\r\n                    }\r\n                });\r\n            }\r\n            if (Variables.haveChangeDWordAdjust && Variables.resultDWordAdjust.length > 0) {\r\n                Variables.haveChangeDWordAdjust = false;\r\n                for (let i = 0; i < Variables.resultDWordAdjust.length; i++) {\r\n                    // console.log(Variables.resultDWordAdjust[i].tag)\r\n                    if (Variables.resultDWordAdjust[i].tag <= Variables.DWordAdjust.length) { Variables.resultDWordAdjust[i].text = Variables.DWordAdjust[Variables.resultDWordAdjust[i].tag] }\r\n                    else { Variables.resultDWordAdjust[i].text = '???' }\r\n                }\r\n                io.sockets.emit('UpdateDWordAdjust', Variables.resultDWordAdjust)\r\n            }\r\n        } catch (error) { }\r\n    }, 200)\r\n    setInterval(function () {\r\n        try {\r\n            if (Variables.refreshDataTextField) {\r\n                Variables.refreshDataTextField = false;\r\n                modelTextField.find({}).limit(1000).sort({ left: 1 }).select({\r\n                    parent: 1, tag: 1, label: 1, value: 1, fontSize: 1, left: 1, top: 1, width: 1, color: 1, fontSize: 1, rows: 1\r\n                }).exec((err, TextField) => {\r\n                    if (err) {\r\n                        console.log(\"get data from db error\");\r\n                    } else {\r\n                        Variables.resultTextField = TextField;\r\n                        SubFunction.saveJsonFile('./Store/Database/TextField.json', TextField);\r\n                        io.sockets.emit('UpdateTextField', Variables.resultTextField)\r\n                        console.log(\"Get modelTextField data successfull\", TextField.length);\r\n                    }\r\n                });\r\n            }\r\n            if (Variables.haveChangeTextField && Variables.resultTextField.length > 0) {\r\n                Variables.haveChangeTextField = false;\r\n                for (let i = 0; i < Variables.resultTextField.length; i++) {\r\n                    if (Variables.resultTextField[i].tag <= Variables.TextField.length) { Variables.resultTextField[i].value = Variables.TextField[Variables.resultTextField[i].tag] }\r\n                    else { Variables.resultTextField[i].value = '???' }\r\n                }\r\n                io.sockets.emit('UpdateTextField', Variables.resultTextField)\r\n            }\r\n        } catch (error) { }\r\n    }, 200)\r\n    setInterval(function () {\r\n        try {\r\n            if (Variables.refreshDataTextFieldInput) {\r\n                Variables.refreshDataTextFieldInput = false;\r\n                modelTextFieldInput.find({}).limit(1000).sort({ left: 1 }).select({\r\n                    parent: 1, tag: 1, label: 1, value: 1, fontSize: 1, left: 1, top: 1, width: 1, color: 1, fontSize: 1, rows: 1, text: 1\r\n                }).exec((err, TextFieldInput) => {\r\n                    if (err) {\r\n                        console.log(\"get data from db error\");\r\n                    } else {\r\n                        Variables.resultTextFieldInput = TextFieldInput;\r\n                        SubFunction.saveJsonFile('./Store/Database/TextFieldInput.json', TextFieldInput);\r\n                        io.sockets.emit('UpdateTextFieldInput', Variables.resultTextFieldInput)\r\n                        console.log(\"Get modelTextField data successfull\", TextFieldInput.length);\r\n                    }\r\n                });\r\n            }\r\n            if (Variables.haveChangeTextFieldInput && Variables.resultTextFieldInput.length > 0) {\r\n                Variables.haveChangeTextFieldInput = false;\r\n                io.sockets.emit('UpdateTextFieldInput', Variables.resultTextFieldInput)\r\n            }\r\n        } catch (error) { }\r\n    }, 200)\r\n    setInterval(function () {\r\n        try {\r\n            if (Variables.refreshDataPosCobot) {\r\n                Variables.refreshDataPosCobot = false;\r\n                modePosCobot.find({}).limit(5000).sort({ time: 1 }).select({\r\n                    parent: 1, type: 1, x: 1, y: 1, z: 1, yaw: 1, pitch: 1, roll: 1, time: 1\r\n                }).exec((err, dataField) => {\r\n                    if (err) {\r\n                        console.log(\"get data from db error\");\r\n                    } else {\r\n                        Variables.resultPosCobot = dataField;\r\n                        console.log(\"Get Pos Cobot data successfull\");\r\n                    }\r\n                });\r\n            }\r\n        } catch (error) { }\r\n    }, 200)\r\n    setInterval(function () {\r\n        try {\r\n            if (Variables.refreshDataBitDisplayImageLibrary) {\r\n                Variables.refreshDataBitDisplayImageLibrary = false;\r\n                modeBitDisplayImageLibrary.find({}).limit(1000).sort({ date: 1 }).select({\r\n                    name: 1, img: 1,\r\n                }).exec((err, dataField) => {\r\n                    if (err) {\r\n                        console.log(\"get data from db error\");\r\n                    } else {\r\n                        Variables.resultBitDisplayImageLibrary = dataField;\r\n                        io.sockets.emit('UpdateBitDisplayImageLibrary', Variables.resultBitDisplayImageLibrary)\r\n                        console.log(\"Get Image Library data successfull\");\r\n                        console.log(Variables.resultBitDisplayImageLibrary.length)\r\n                    }\r\n                });\r\n            }\r\n        } catch (error) { }\r\n    }, 200)\r\n    setInterval(function () {\r\n        try {\r\n            if (Variables.refreshDataElementImageLibrary) {\r\n                Variables.refreshDataElementImageLibrary = false;\r\n                modeElementImageLibrary.find({}).sort('-date').limit(1000).select({\r\n                    name: 1, imgRun: 1, imgStop: 1, imgFault: 1, imgLock: 1,date:1\r\n                }).exec((err, dataField) => {\r\n                    if (err) {\r\n                        console.log(\"get data from db error\");\r\n                    } else {\r\n                        Variables.resultElementImageLibrary = dataField;\r\n                        io.sockets.emit('UpdateElementImageLibrary', Variables.resultElementImageLibrary)\r\n                        console.log(\"Get Element Library data successfull\");\r\n                        console.log(Variables.resultElementImageLibrary.length)\r\n                    }\r\n                });\r\n            }\r\n        } catch (error) { }\r\n    }, 200)\r\n}","var mongoose=require('mongoose')\r\nvar Schema=mongoose.Schema;\r\n\r\nvar posCobotSchema=new Schema({\r\n    parent:{\r\n        type:String,\r\n        default:''\r\n    },\r\n    type:{\r\n        type:String,\r\n        default:''\r\n    },\r\n    x:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    y:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    z:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    yaw:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    pitch:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    roll:{\r\n        type:Number,\r\n        required:true\r\n    },\r\n    time:{\r\n        type:Date,\r\n        required:true\r\n    },\r\n})\r\nmodule.exports=mongoose.model('posCobots',posCobotSchema)"],"sourceRoot":""}